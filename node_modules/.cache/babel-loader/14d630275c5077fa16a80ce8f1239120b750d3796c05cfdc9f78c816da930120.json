{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Paper, Button, Grid, Card, FormControl, InputLabel, Select, MenuItem, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Divider, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, TextField, InputAdornment, Avatar, Tooltip } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { BarChart, PieChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { Assessment as AssessmentIcon, BarChart as BarChartIcon, PieChart as PieChartIcon, AttachMoney as AttachMoneyIcon, PriceCheck as PriceCheckIcon, Person as PersonIcon, Warning as WarningIcon, Search as SearchIcon, FileDownload as FileDownloadIcon, WhatsApp as WhatsAppIcon, Email as EmailIcon, Phone as PhoneIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport { transactions, incomeCategories, expenseCategories, transactionStatus, paymentMethods, getCategoryName, getPaymentMethodName, getStatusName, getStatusColor } from \"../data/financialData\";\n\n// Importar os componentes de relatórios\nimport IncomeExpenseReport from \"./reports/IncomeExpenseReport\";\nimport DelinquencyReport from \"./reports/DelinquencyReport\";\nimport DetailedDelinquencyReport from \"./reports/DetailedDelinquencyReport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n\n  // Estado para o relatório selecionado\n  const [selectedReport, setSelectedReport] = useState(\"income-expense\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Estado para busca no relatório detalhado\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para formatar valores monetários\n  const formatCurrency = value => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach(transaction => {\n      if (!transaction || !transaction.date) return;\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n      const month = date.month();\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (transaction.type === \"expense\" && transaction.status === \"paid\") {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: []\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0]\n        }\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(transaction => (transaction === null || transaction === void 0 ? void 0 : transaction.type) === \"income\" && ((transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"pending\" || (transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"overdue\"));\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce((total, transaction) => total + ((transaction === null || transaction === void 0 ? void 0 : transaction.amount) || 0), 0);\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"pending\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n    const overdueAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"overdue\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach(transaction => {\n      if (!(transaction !== null && transaction !== void 0 && transaction.dueDate)) return;\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount]\n      }\n    };\n  };\n\n  // Função para obter dados para o relatório detalhado de inadimplência\n  const getDetailedDelinquencyData = () => {\n    // Se não houver transações, retornar array vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return [];\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(transaction => (transaction === null || transaction === void 0 ? void 0 : transaction.type) === \"income\" && ((transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"pending\" || (transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"overdue\") && (transaction === null || transaction === void 0 ? void 0 : transaction.category) === 1 // Apenas mensalidades\n    );\n\n    // Agrupa por aluno\n    const studentMap = new Map();\n    delinquentTransactions.forEach(transaction => {\n      var _transaction$relatedP;\n      if (!(transaction !== null && transaction !== void 0 && (_transaction$relatedP = transaction.relatedPerson) !== null && _transaction$relatedP !== void 0 && _transaction$relatedP.id)) return;\n      const studentId = transaction.relatedPerson.id;\n      if (!studentMap.has(studentId)) {\n        studentMap.set(studentId, {\n          id: studentId,\n          name: transaction.relatedPerson.name,\n          email: `${transaction.relatedPerson.name.toLowerCase().replace(/\\s/g, \".\")}@email.com`,\n          phone: `(11) 9${Math.floor(Math.random() * 9000) + 1000}-${Math.floor(Math.random() * 9000) + 1000}`,\n          transactions: [],\n          totalAmount: 0,\n          maxDaysLate: 0\n        });\n      }\n      const student = studentMap.get(studentId);\n\n      // Calcular dias em atraso\n      let daysLate = 0;\n      if (transaction.status === \"overdue\" && transaction.dueDate) {\n        daysLate = dayjs().diff(dayjs(transaction.dueDate), \"day\");\n      }\n\n      // Atualizar dados do aluno\n      student.transactions.push({\n        ...transaction,\n        daysLate\n      });\n      student.totalAmount += transaction.amount;\n      student.maxDaysLate = Math.max(student.maxDaysLate, daysLate);\n    });\n\n    // Converter o mapa para array\n    return Array.from(studentMap.values());\n  };\n\n  // Função para filtrar os dados de inadimplência por nome do aluno\n  const getFilteredDelinquencyData = () => {\n    const data = getDetailedDelinquencyData();\n    if (!searchTerm) return data;\n    const searchLower = searchTerm.toLowerCase();\n    return data.filter(student => student.name.toLowerCase().includes(searchLower) || student.email.toLowerCase().includes(searchLower) || student.phone.toLowerCase().includes(searchLower));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: t(\"reports.title\", \"Relatórios\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: t(\"reports.subtitle\", \"Selecione um relatório para visualizar informações detalhadas\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"relat\\xF3rios dispon\\xEDveis\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                selected: selectedReport === \"income-expense\",\n                onClick: () => setSelectedReport(\"income-expense\"),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(BarChartIcon, {\n                    color: selectedReport === \"income-expense\" ? \"primary\" : \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.incomeExpense\", \"Receitas e Despesas\"),\n                  primaryTypographyProps: {\n                    fontWeight: selectedReport === \"income-expense\" ? \"bold\" : \"normal\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                selected: selectedReport === \"delinquency\",\n                onClick: () => setSelectedReport(\"delinquency\"),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(PieChartIcon, {\n                    color: selectedReport === \"delinquency\" ? \"primary\" : \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.delinquency\", \"Inadimplência\"),\n                  primaryTypographyProps: {\n                    fontWeight: selectedReport === \"delinquency\" ? \"bold\" : \"normal\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                selected: selectedReport === \"detailed-delinquency\",\n                onClick: () => setSelectedReport(\"detailed-delinquency\"),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n                    color: selectedReport === \"detailed-delinquency\" ? \"primary\" : \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.detailedDelinquency\", \"Inadimplência Detalhada\"),\n                  primaryTypographyProps: {\n                    fontWeight: selectedReport === \"detailed-delinquency\" ? \"bold\" : \"normal\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                pl: 2,\n                opacity: 0.7\n              },\n              children: t(\"common.comingSoon\", \"Em breve\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {\n                    color: \"disabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.cashFlow\", \"Fluxo de Caixa\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(PriceCheckIcon, {\n                    color: \"disabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.studentRevenue\", \"Faturamento por Aluno\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: [selectedReport === \"income-expense\" && /*#__PURE__*/_jsxDEV(IncomeExpenseReport, {\n          transactions: allTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), selectedReport === \"delinquency\" && /*#__PURE__*/_jsxDEV(DelinquencyReport, {\n          transactions: allTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), selectedReport === \"detailed-delinquency\" && /*#__PURE__*/_jsxDEV(DetailedDelinquencyReport, {\n          transactions: allTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}\n_s(Reports, \"jVAfOuWJ4zHuFtg0xikpKrmlJSg=\", false, function () {\n  return [useTranslation];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","Grid","Card","FormControl","InputLabel","Select","MenuItem","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","TextField","InputAdornment","Avatar","Tooltip","DatePicker","AdapterDayjs","LocalizationProvider","BarChart","PieChart","dayjs","Assessment","AssessmentIcon","BarChartIcon","PieChartIcon","AttachMoney","AttachMoneyIcon","PriceCheck","PriceCheckIcon","Person","PersonIcon","Warning","WarningIcon","Search","SearchIcon","FileDownload","FileDownloadIcon","WhatsApp","WhatsAppIcon","Email","EmailIcon","Phone","PhoneIcon","useTranslation","transactions","incomeCategories","expenseCategories","transactionStatus","paymentMethods","getCategoryName","getPaymentMethodName","getStatusName","getStatusColor","IncomeExpenseReport","DelinquencyReport","DetailedDelinquencyReport","jsxDEV","_jsxDEV","Reports","_s","t","selectedReport","setSelectedReport","allTransactions","setAllTransactions","reportPeriod","setReportPeriod","reportYear","setReportYear","year","reportMonth","setReportMonth","month","searchTerm","setSearchTerm","formatCurrency","value","Intl","NumberFormat","style","currency","format","getIncomeExpenseData","Array","isArray","length","income","expense","incomeByMonth","fill","expenseByMonth","forEach","transaction","date","type","status","amount","getDelinquencyData","total","count","byMonth","labels","data","byStatus","delinquentTransactions","filter","totalAmount","reduce","pendingAmount","overdueAmount","monthMap","Map","dueDate","monthYear","current","get","set","monthLabels","from","keys","monthData","values","getDetailedDelinquencyData","category","studentMap","_transaction$relatedP","relatedPerson","id","studentId","has","name","email","toLowerCase","replace","phone","Math","floor","random","maxDaysLate","student","daysLate","diff","push","max","getFilteredDelinquencyData","searchLower","includes","sx","p","children","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","container","spacing","item","xs","md","width","disablePadding","selected","onClick","primary","primaryTypographyProps","fontWeight","my","pl","opacity","disabled","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Grid,\n  Card,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  TextField,\n  InputAdornment,\n  Avatar,\n  Tooltip,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { BarChart, PieChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport {\n  Assessment as AssessmentIcon,\n  BarChart as BarChartIcon,\n  PieChart as PieChartIcon,\n  AttachMoney as AttachMoneyIcon,\n  PriceCheck as PriceCheckIcon,\n  Person as PersonIcon,\n  Warning as WarningIcon,\n  Search as SearchIcon,\n  FileDownload as FileDownloadIcon,\n  WhatsApp as WhatsAppIcon,\n  Email as EmailIcon,\n  Phone as PhoneIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  transactions,\n  incomeCategories,\n  expenseCategories,\n  transactionStatus,\n  paymentMethods,\n  getCategoryName,\n  getPaymentMethodName,\n  getStatusName,\n  getStatusColor,\n} from \"../data/financialData\";\n\n// Importar os componentes de relatórios\nimport IncomeExpenseReport from \"./reports/IncomeExpenseReport\";\nimport DelinquencyReport from \"./reports/DelinquencyReport\";\nimport DetailedDelinquencyReport from \"./reports/DetailedDelinquencyReport\";\n\nfunction Reports() {\n  const { t } = useTranslation();\n\n  // Estado para o relatório selecionado\n  const [selectedReport, setSelectedReport] = useState(\"income-expense\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Estado para busca no relatório detalhado\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para formatar valores monetários\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach((transaction) => {\n      if (!transaction || !transaction.date) return;\n\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n\n      const month = date.month();\n\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (\n        transaction.type === \"expense\" &&\n        transaction.status === \"paid\"\n      ) {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth,\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: [],\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0],\n        },\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(\n      (transaction) =>\n        transaction?.type === \"income\" &&\n        (transaction?.status === \"pending\" || transaction?.status === \"overdue\")\n    );\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce(\n      (total, transaction) => total + (transaction?.amount || 0),\n      0\n    );\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions\n      .filter((t) => t?.status === \"pending\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    const overdueAmount = delinquentTransactions\n      .filter((t) => t?.status === \"overdue\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach((transaction) => {\n      if (!transaction?.dueDate) return;\n\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData,\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount],\n      },\n    };\n  };\n\n  // Função para obter dados para o relatório detalhado de inadimplência\n  const getDetailedDelinquencyData = () => {\n    // Se não houver transações, retornar array vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return [];\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(\n      (transaction) =>\n        transaction?.type === \"income\" &&\n        (transaction?.status === \"pending\" ||\n          transaction?.status === \"overdue\") &&\n        transaction?.category === 1 // Apenas mensalidades\n    );\n\n    // Agrupa por aluno\n    const studentMap = new Map();\n\n    delinquentTransactions.forEach((transaction) => {\n      if (!transaction?.relatedPerson?.id) return;\n\n      const studentId = transaction.relatedPerson.id;\n      if (!studentMap.has(studentId)) {\n        studentMap.set(studentId, {\n          id: studentId,\n          name: transaction.relatedPerson.name,\n          email: `${transaction.relatedPerson.name\n            .toLowerCase()\n            .replace(/\\s/g, \".\")}@email.com`,\n          phone: `(11) 9${Math.floor(Math.random() * 9000) + 1000}-${\n            Math.floor(Math.random() * 9000) + 1000\n          }`,\n          transactions: [],\n          totalAmount: 0,\n          maxDaysLate: 0,\n        });\n      }\n\n      const student = studentMap.get(studentId);\n\n      // Calcular dias em atraso\n      let daysLate = 0;\n      if (transaction.status === \"overdue\" && transaction.dueDate) {\n        daysLate = dayjs().diff(dayjs(transaction.dueDate), \"day\");\n      }\n\n      // Atualizar dados do aluno\n      student.transactions.push({\n        ...transaction,\n        daysLate,\n      });\n\n      student.totalAmount += transaction.amount;\n      student.maxDaysLate = Math.max(student.maxDaysLate, daysLate);\n    });\n\n    // Converter o mapa para array\n    return Array.from(studentMap.values());\n  };\n\n  // Função para filtrar os dados de inadimplência por nome do aluno\n  const getFilteredDelinquencyData = () => {\n    const data = getDetailedDelinquencyData();\n\n    if (!searchTerm) return data;\n\n    const searchLower = searchTerm.toLowerCase();\n    return data.filter(\n      (student) =>\n        student.name.toLowerCase().includes(searchLower) ||\n        student.email.toLowerCase().includes(searchLower) ||\n        student.phone.toLowerCase().includes(searchLower)\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          {t(\"reports.title\", \"Relatórios\")}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {t(\n            \"reports.subtitle\",\n            \"Selecione um relatório para visualizar informações detalhadas\"\n          )}\n        </Typography>\n      </Paper>\n\n      <Grid container spacing={3}>\n        {/* Menu lateral de relatórios */}\n        <Grid item xs={12} md={3}>\n          <Paper sx={{ width: \"100%\" }}>\n            <List component=\"nav\" aria-label=\"relatórios disponíveis\">\n              <ListItem disablePadding>\n                <ListItemButton\n                  selected={selectedReport === \"income-expense\"}\n                  onClick={() => setSelectedReport(\"income-expense\")}\n                >\n                  <ListItemIcon>\n                    <BarChartIcon\n                      color={\n                        selectedReport === \"income-expense\"\n                          ? \"primary\"\n                          : \"inherit\"\n                      }\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.incomeExpense\", \"Receitas e Despesas\")}\n                    primaryTypographyProps={{\n                      fontWeight:\n                        selectedReport === \"income-expense\" ? \"bold\" : \"normal\",\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <ListItem disablePadding>\n                <ListItemButton\n                  selected={selectedReport === \"delinquency\"}\n                  onClick={() => setSelectedReport(\"delinquency\")}\n                >\n                  <ListItemIcon>\n                    <PieChartIcon\n                      color={\n                        selectedReport === \"delinquency\" ? \"primary\" : \"inherit\"\n                      }\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.delinquency\", \"Inadimplência\")}\n                    primaryTypographyProps={{\n                      fontWeight:\n                        selectedReport === \"delinquency\" ? \"bold\" : \"normal\",\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <ListItem disablePadding>\n                <ListItemButton\n                  selected={selectedReport === \"detailed-delinquency\"}\n                  onClick={() => setSelectedReport(\"detailed-delinquency\")}\n                >\n                  <ListItemIcon>\n                    <PersonIcon\n                      color={\n                        selectedReport === \"detailed-delinquency\"\n                          ? \"primary\"\n                          : \"inherit\"\n                      }\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\n                      \"reports.detailedDelinquency\",\n                      \"Inadimplência Detalhada\"\n                    )}\n                    primaryTypographyProps={{\n                      fontWeight:\n                        selectedReport === \"detailed-delinquency\"\n                          ? \"bold\"\n                          : \"normal\",\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <Divider sx={{ my: 1 }} />\n              <Typography variant=\"overline\" sx={{ pl: 2, opacity: 0.7 }}>\n                {t(\"common.comingSoon\", \"Em breve\")}\n              </Typography>\n\n              <ListItem disablePadding>\n                <ListItemButton disabled>\n                  <ListItemIcon>\n                    <AttachMoneyIcon color=\"disabled\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.cashFlow\", \"Fluxo de Caixa\")}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <ListItem disablePadding>\n                <ListItemButton disabled>\n                  <ListItemIcon>\n                    <PriceCheckIcon color=\"disabled\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\n                      \"reports.studentRevenue\",\n                      \"Faturamento por Aluno\"\n                    )}\n                  />\n                </ListItemButton>\n              </ListItem>\n            </List>\n          </Paper>\n        </Grid>\n\n        {/* Área de conteúdo do relatório */}\n        <Grid item xs={12} md={9}>\n          {selectedReport === \"income-expense\" && (\n            <IncomeExpenseReport transactions={allTransactions} />\n          )}\n          {selectedReport === \"delinquency\" && (\n            <DelinquencyReport transactions={allTransactions} />\n          )}\n          {selectedReport === \"detailed-delinquency\" && (\n            <DetailedDelinquencyReport transactions={allTransactions} />\n          )}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}