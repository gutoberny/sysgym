{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/ExerciseTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, IconButton, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography, Box, Autocomplete, Tabs, Tab } from \"@mui/material\";\nimport { Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport exerciseData from \"../data/exerciseData\";\n\n// Componente de tabela de exercícios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseTable({\n  exercises,\n  setExercises\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTab, setCurrentTab] = useState(\"shoulders\");\n\n  // Função para lidar com a mudança de aba (grupo muscular)\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo para adicionar novo exercício\n  const handleAddExercise = () => {\n    setCurrentExercise({\n      id: Date.now().toString(),\n      name: \"\",\n      sets: \"\",\n      weight: \"\",\n      reps: \"\",\n      notes: \"\",\n      muscleGroup: currentTab\n    });\n    setIsEditing(false);\n    setOpenDialog(true);\n  };\n\n  // Função para abrir o diálogo para editar exercício existente\n  const handleEditExercise = exercise => {\n    setCurrentExercise({\n      ...exercise\n    });\n    setIsEditing(true);\n    setOpenDialog(true);\n  };\n\n  // Função para excluir um exercício\n  const handleDeleteExercise = id => {\n    setExercises(exercises.filter(exercise => exercise.id !== id));\n  };\n\n  // Função para fechar o diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setCurrentExercise(null);\n  };\n\n  // Função para atualizar o exercício atual durante a edição\n  const handleInputChange = field => event => {\n    setCurrentExercise({\n      ...currentExercise,\n      [field]: event.target.value\n    });\n  };\n\n  // Função para lidar com a mudança do nome do exercício (Autocomplete)\n  const handleExerciseNameChange = (event, newValue) => {\n    setCurrentExercise({\n      ...currentExercise,\n      name: newValue\n    });\n  };\n\n  // Função para salvar exercício (adicionar novo ou atualizar existente)\n  const handleSaveExercise = () => {\n    if (isEditing) {\n      setExercises(exercises.map(ex => ex.id === currentExercise.id ? currentExercise : ex));\n    } else {\n      setExercises([...exercises, currentExercise]);\n    }\n    handleCloseDialog();\n  };\n\n  // Obter lista de exercícios para o grupo muscular atual\n  const getExerciseOptions = () => {\n    return exerciseData[currentTab] || [];\n  };\n\n  // Filtrar exercícios pelo grupo muscular atual\n  const filteredExercises = exercises.filter(ex => ex.muscleGroup === currentTab);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      p: 3,\n      mb: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: t(\"exercise.title\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 22\n        }, this),\n        onClick: handleAddExercise,\n        children: t(\"exercise.add\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: currentTab,\n      onChange: handleTabChange,\n      variant: \"scrollable\",\n      scrollButtons: \"auto\",\n      sx: {\n        mb: 2,\n        borderBottom: 1,\n        borderColor: \"divider\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.shoulders\"),\n        value: \"shoulders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.chest\"),\n        value: \"chest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.back\"),\n        value: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.biceps\"),\n        value: \"biceps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.triceps\"),\n        value: \"triceps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.legs\"),\n        value: \"legs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t(\"muscleGroups.core\"),\n        value: \"core\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: t(\"exercise.name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: t(\"exercise.sets\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: t(\"exercise.weight\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: t(\"exercise.reps\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: t(\"exercise.sequence\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredExercises.length > 0 ? filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: exercise.sets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: exercise.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: exercise.reps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: exercise.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                color: \"primary\",\n                onClick: () => handleEditExercise(exercise),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                color: \"error\",\n                onClick: () => handleDeleteExercise(exercise.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, exercise.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6,\n              align: \"center\",\n              children: \"Nenhum exerc\\xEDcio para este grupo muscular.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: isEditing ? t(\"exercise.edit\") : t(\"exercise.add\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          freeSolo: true,\n          options: getExerciseOptions().map(option => t(`exercises.${option.key}`)),\n          value: (currentExercise === null || currentExercise === void 0 ? void 0 : currentExercise.name) || \"\",\n          onChange: handleExerciseNameChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: t(\"exercise.name\"),\n            margin: \"normal\",\n            variant: \"outlined\",\n            fullWidth: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: t(\"exercise.sets\"),\n          type: \"number\",\n          value: (currentExercise === null || currentExercise === void 0 ? void 0 : currentExercise.sets) || \"\",\n          onChange: handleInputChange(\"sets\"),\n          margin: \"normal\",\n          variant: \"outlined\",\n          fullWidth: true,\n          InputProps: {\n            inputProps: {\n              min: 1\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: t(\"exercise.weight\"),\n          value: (currentExercise === null || currentExercise === void 0 ? void 0 : currentExercise.weight) || \"\",\n          onChange: handleInputChange(\"weight\"),\n          margin: \"normal\",\n          variant: \"outlined\",\n          fullWidth: true,\n          placeholder: \"ex: 10 ou 4-9 ou 8 \\u03943\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: t(\"exercise.reps\"),\n          type: \"number\",\n          value: (currentExercise === null || currentExercise === void 0 ? void 0 : currentExercise.reps) || \"\",\n          onChange: handleInputChange(\"reps\"),\n          margin: \"normal\",\n          variant: \"outlined\",\n          fullWidth: true,\n          InputProps: {\n            inputProps: {\n              min: 1\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: t(\"exercise.sequence\"),\n          value: (currentExercise === null || currentExercise === void 0 ? void 0 : currentExercise.notes) || \"\",\n          onChange: handleInputChange(\"notes\"),\n          margin: \"normal\",\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          color: \"primary\",\n          children: t(\"buttons.cancel\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveExercise,\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: !(currentExercise !== null && currentExercise !== void 0 && currentExercise.name),\n          children: t(\"buttons.save\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseTable, \"3nYeRiAaiLA69GhrSeWzIfvBK7Y=\", false, function () {\n  return [useTranslation];\n});\n_c = ExerciseTable;\nexport default ExerciseTable;\nvar _c;\n$RefreshReg$(_c, \"ExerciseTable\");","map":{"version":3,"names":["React","useState","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","IconButton","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Typography","Box","Autocomplete","Tabs","Tab","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","useTranslation","exerciseData","jsxDEV","_jsxDEV","ExerciseTable","exercises","setExercises","_s","t","openDialog","setOpenDialog","currentExercise","setCurrentExercise","isEditing","setIsEditing","currentTab","setCurrentTab","handleTabChange","event","newValue","handleAddExercise","id","Date","now","toString","name","sets","weight","reps","notes","muscleGroup","handleEditExercise","exercise","handleDeleteExercise","filter","handleCloseDialog","handleInputChange","field","target","value","handleExerciseNameChange","handleSaveExercise","map","ex","getExerciseOptions","filteredExercises","elevation","sx","p","mb","children","display","justifyContent","alignItems","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","startIcon","onClick","onChange","scrollButtons","borderBottom","borderColor","label","align","length","size","colSpan","open","onClose","fullWidth","maxWidth","freeSolo","options","option","key","renderInput","params","margin","required","type","InputProps","inputProps","min","placeholder","multiline","rows","disabled","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/ExerciseTable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Typography,\n  Box,\n  Autocomplete,\n  Tabs,\n  Tab,\n} from \"@mui/material\";\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport exerciseData from \"../data/exerciseData\";\n\n// Componente de tabela de exercícios\nfunction ExerciseTable({ exercises, setExercises }) {\n  const { t } = useTranslation();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentExercise, setCurrentExercise] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTab, setCurrentTab] = useState(\"shoulders\");\n\n  // Função para lidar com a mudança de aba (grupo muscular)\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo para adicionar novo exercício\n  const handleAddExercise = () => {\n    setCurrentExercise({\n      id: Date.now().toString(),\n      name: \"\",\n      sets: \"\",\n      weight: \"\",\n      reps: \"\",\n      notes: \"\",\n      muscleGroup: currentTab,\n    });\n    setIsEditing(false);\n    setOpenDialog(true);\n  };\n\n  // Função para abrir o diálogo para editar exercício existente\n  const handleEditExercise = (exercise) => {\n    setCurrentExercise({ ...exercise });\n    setIsEditing(true);\n    setOpenDialog(true);\n  };\n\n  // Função para excluir um exercício\n  const handleDeleteExercise = (id) => {\n    setExercises(exercises.filter((exercise) => exercise.id !== id));\n  };\n\n  // Função para fechar o diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setCurrentExercise(null);\n  };\n\n  // Função para atualizar o exercício atual durante a edição\n  const handleInputChange = (field) => (event) => {\n    setCurrentExercise({\n      ...currentExercise,\n      [field]: event.target.value,\n    });\n  };\n\n  // Função para lidar com a mudança do nome do exercício (Autocomplete)\n  const handleExerciseNameChange = (event, newValue) => {\n    setCurrentExercise({\n      ...currentExercise,\n      name: newValue,\n    });\n  };\n\n  // Função para salvar exercício (adicionar novo ou atualizar existente)\n  const handleSaveExercise = () => {\n    if (isEditing) {\n      setExercises(\n        exercises.map((ex) =>\n          ex.id === currentExercise.id ? currentExercise : ex\n        )\n      );\n    } else {\n      setExercises([...exercises, currentExercise]);\n    }\n    handleCloseDialog();\n  };\n\n  // Obter lista de exercícios para o grupo muscular atual\n  const getExerciseOptions = () => {\n    return exerciseData[currentTab] || [];\n  };\n\n  // Filtrar exercícios pelo grupo muscular atual\n  const filteredExercises = exercises.filter(\n    (ex) => ex.muscleGroup === currentTab\n  );\n\n  return (\n    <Paper elevation={2} sx={{ p: 3, mb: 3 }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2,\n        }}\n      >\n        <Typography variant=\"h5\" component=\"h2\">\n          {t(\"exercise.title\")}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={handleAddExercise}\n        >\n          {t(\"exercise.add\")}\n        </Button>\n      </Box>\n\n      {/* Abas para grupos musculares */}\n      <Tabs\n        value={currentTab}\n        onChange={handleTabChange}\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        sx={{ mb: 2, borderBottom: 1, borderColor: \"divider\" }}\n      >\n        <Tab label={t(\"muscleGroups.shoulders\")} value=\"shoulders\" />\n        <Tab label={t(\"muscleGroups.chest\")} value=\"chest\" />\n        <Tab label={t(\"muscleGroups.back\")} value=\"back\" />\n        <Tab label={t(\"muscleGroups.biceps\")} value=\"biceps\" />\n        <Tab label={t(\"muscleGroups.triceps\")} value=\"triceps\" />\n        <Tab label={t(\"muscleGroups.legs\")} value=\"legs\" />\n        <Tab label={t(\"muscleGroups.core\")} value=\"core\" />\n      </Tabs>\n\n      {/* Tabela de exercícios */}\n      <TableContainer component={Paper} variant=\"outlined\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"exercise.name\")}</TableCell>\n              <TableCell align=\"center\">{t(\"exercise.sets\")}</TableCell>\n              <TableCell align=\"center\">{t(\"exercise.weight\")}</TableCell>\n              <TableCell align=\"center\">{t(\"exercise.reps\")}</TableCell>\n              <TableCell>{t(\"exercise.sequence\")}</TableCell>\n              <TableCell align=\"center\">Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredExercises.length > 0 ? (\n              filteredExercises.map((exercise) => (\n                <TableRow key={exercise.id}>\n                  <TableCell>{exercise.name}</TableCell>\n                  <TableCell align=\"center\">{exercise.sets}</TableCell>\n                  <TableCell align=\"center\">{exercise.weight}</TableCell>\n                  <TableCell align=\"center\">{exercise.reps}</TableCell>\n                  <TableCell>{exercise.notes}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      color=\"primary\"\n                      onClick={() => handleEditExercise(exercise)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      color=\"error\"\n                      onClick={() => handleDeleteExercise(exercise.id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={6} align=\"center\">\n                  Nenhum exercício para este grupo muscular.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Diálogo para adicionar/editar exercício */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>\n          {isEditing ? t(\"exercise.edit\") : t(\"exercise.add\")}\n        </DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            freeSolo\n            options={getExerciseOptions().map((option) =>\n              t(`exercises.${option.key}`)\n            )}\n            value={currentExercise?.name || \"\"}\n            onChange={handleExerciseNameChange}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label={t(\"exercise.name\")}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                required\n              />\n            )}\n          />\n          <TextField\n            label={t(\"exercise.sets\")}\n            type=\"number\"\n            value={currentExercise?.sets || \"\"}\n            onChange={handleInputChange(\"sets\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            InputProps={{\n              inputProps: { min: 1 },\n            }}\n          />\n          <TextField\n            label={t(\"exercise.weight\")}\n            value={currentExercise?.weight || \"\"}\n            onChange={handleInputChange(\"weight\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            placeholder=\"ex: 10 ou 4-9 ou 8 Δ3\"\n          />\n          <TextField\n            label={t(\"exercise.reps\")}\n            type=\"number\"\n            value={currentExercise?.reps || \"\"}\n            onChange={handleInputChange(\"reps\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            InputProps={{\n              inputProps: { min: 1 },\n            }}\n          />\n          <TextField\n            label={t(\"exercise.sequence\")}\n            value={currentExercise?.notes || \"\"}\n            onChange={handleInputChange(\"notes\")}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            rows={2}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            {t(\"buttons.cancel\")}\n          </Button>\n          <Button\n            onClick={handleSaveExercise}\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={!currentExercise?.name}\n          >\n            {t(\"buttons.save\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default ExerciseTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}