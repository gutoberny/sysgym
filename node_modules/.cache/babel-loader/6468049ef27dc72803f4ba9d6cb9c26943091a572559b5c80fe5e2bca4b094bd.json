{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/FinancialManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Tabs, Tab, Paper, Button, Grid, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, Select, MenuItem, InputAdornment, FormHelperText, Tooltip, Snackbar, Alert, Stack, TextField, IconButton } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DataGrid, ptBR } from \"@mui/x-data-grid\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, FilterList as FilterListIcon, CheckCircle as CheckCircleIcon, ArrowUpward as ArrowUpwardIcon, ArrowDownward as ArrowDownwardIcon, AttachMoney as AttachMoneyIcon, Search as SearchIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport { transactions, incomeCategories, expenseCategories, transactionStatus, paymentMethods, getCategoryName, getPaymentMethodName, getStatusName, getStatusColor } from \"../data/financialData\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinancialManagement() {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  // Estado para a aba atual\n  const [currentTab, setCurrentTab] = useState(\"receivables\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estado para o diálogo de geração de mensalidades\n  const [openGenerateDialog, setOpenGenerateDialog] = useState(false);\n  const [monthToGenerate, setMonthToGenerate] = useState(dayjs());\n\n  // Estado para a transação selecionada para edição/detalhes\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n\n  // Estado para o diálogo de nova transação\n  const [openTransactionDialog, setOpenTransactionDialog] = useState(false);\n\n  // Estado para o diálogo de exclusão\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n\n  // Estado para snackbar\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  // Estado para o diálogo de filtros\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  // Estado para os filtros\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    status: \"all\",\n    dateFrom: null,\n    dateTo: null,\n    category: \"all\",\n    amountMin: \"\",\n    amountMax: \"\",\n    searchTerm: \"\"\n  });\n\n  // Estado para o formulário de nova transação\n  const [transactionForm, setTransactionForm] = useState({\n    id: null,\n    type: \"income\",\n    description: \"\",\n    amount: \"\",\n    date: null,\n    dueDate: null,\n    category: \"\",\n    status: \"pending\",\n    paymentMethod: \"\",\n    relatedPerson: {\n      id: \"\",\n      name: \"\",\n      type: \"\"\n    },\n    notes: \"\"\n  });\n\n  // Estado para erros de validação do formulário\n  const [formErrors, setFormErrors] = useState({});\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para trocar a aba atual\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo de nova transação\n  const handleOpenTransactionDialog = (transaction = null) => {\n    if (transaction) {\n      // Editar transação existente\n      setTransactionForm({\n        ...transaction,\n        date: transaction.date ? dayjs(transaction.date) : null,\n        dueDate: transaction.dueDate ? dayjs(transaction.dueDate) : null\n      });\n      setSelectedTransaction(transaction);\n    } else {\n      // Nova transação\n      setTransactionForm({\n        id: null,\n        type: \"income\",\n        description: \"\",\n        amount: \"\",\n        date: null,\n        dueDate: null,\n        category: \"\",\n        status: \"pending\",\n        paymentMethod: \"\",\n        relatedPerson: {\n          id: \"\",\n          name: \"\",\n          type: \"\"\n        },\n        notes: \"\"\n      });\n      setSelectedTransaction(null);\n    }\n    setFormErrors({});\n    setOpenTransactionDialog(true);\n  };\n\n  // Função para fechar o diálogo de transação\n  const handleCloseTransactionDialog = () => {\n    setOpenTransactionDialog(false);\n  };\n\n  // Função para validar o formulário de transação\n  const validateTransactionForm = () => {\n    const errors = {};\n    if (!transactionForm.description.trim()) {\n      errors.description = \"Descrição é obrigatória\";\n    }\n    if (!transactionForm.amount || isNaN(transactionForm.amount) || parseFloat(transactionForm.amount) <= 0) {\n      errors.amount = \"Valor deve ser um número positivo\";\n    }\n    if (!transactionForm.dueDate) {\n      errors.dueDate = \"Data de vencimento é obrigatória\";\n    }\n    if (!transactionForm.category) {\n      errors.category = \"Categoria é obrigatória\";\n    }\n    if (transactionForm.status === \"paid\" && !transactionForm.paymentMethod) {\n      errors.paymentMethod = \"Método de pagamento é obrigatório para transações pagas\";\n    }\n    if (transactionForm.status === \"paid\" && !transactionForm.date) {\n      errors.date = \"Data de pagamento é obrigatória para transações pagas\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Função para salvar uma transação (nova ou editada)\n  const handleSaveTransaction = () => {\n    if (!validateTransactionForm()) {\n      return;\n    }\n    const newTransaction = {\n      ...transactionForm,\n      id: transactionForm.id || allTransactions.length + 1,\n      amount: parseFloat(transactionForm.amount),\n      date: transactionForm.date ? transactionForm.date.format(\"YYYY-MM-DD\") : null,\n      dueDate: transactionForm.dueDate ? transactionForm.dueDate.format(\"YYYY-MM-DD\") : null\n    };\n    if (selectedTransaction) {\n      // Editar transação existente\n      const updatedTransactions = allTransactions.map(t => t.id === newTransaction.id ? newTransaction : t);\n      setAllTransactions(updatedTransactions);\n      setSnackbar({\n        open: true,\n        message: \"Transação atualizada com sucesso!\",\n        severity: \"success\"\n      });\n    } else {\n      // Adicionar nova transação\n      setAllTransactions([...allTransactions, newTransaction]);\n      setSnackbar({\n        open: true,\n        message: \"Transação adicionada com sucesso!\",\n        severity: \"success\"\n      });\n    }\n    handleCloseTransactionDialog();\n  };\n\n  // Função para abrir o diálogo de exclusão\n  const handleOpenDeleteDialog = transaction => {\n    setSelectedTransaction(transaction);\n    setOpenDeleteDialog(true);\n  };\n\n  // Função para fechar o diálogo de exclusão\n  const handleCloseDeleteDialog = () => {\n    setOpenDeleteDialog(false);\n  };\n\n  // Função para excluir uma transação\n  const handleDeleteTransaction = () => {\n    const updatedTransactions = allTransactions.filter(t => t.id !== selectedTransaction.id);\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: \"Transação excluída com sucesso!\",\n      severity: \"success\"\n    });\n    handleCloseDeleteDialog();\n  };\n\n  // Função para atualizar o status de uma transação (dar baixa)\n  const handleUpdateTransactionStatus = (transaction, newStatus) => {\n    const updatedTransaction = {\n      ...transaction,\n      status: newStatus,\n      date: newStatus === \"paid\" ? dayjs().format(\"YYYY-MM-DD\") : transaction.date\n    };\n    const updatedTransactions = allTransactions.map(t => t.id === transaction.id ? updatedTransaction : t);\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: `Status atualizado para: ${getStatusName(newStatus)}`,\n      severity: \"success\"\n    });\n  };\n\n  // Função para fechar o snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  // Função para atualizar o filtro\n  const handleFilterChange = (field, value) => {\n    setFilters({\n      ...filters,\n      [field]: value\n    });\n  };\n\n  // Função para aplicar os filtros\n  const handleApplyFilters = () => {\n    setOpenFilterDialog(false);\n  };\n\n  // Função para limpar os filtros\n  const handleClearFilters = () => {\n    setFilters({\n      type: \"all\",\n      status: \"all\",\n      dateFrom: null,\n      dateTo: null,\n      category: \"all\",\n      amountMin: \"\",\n      amountMax: \"\",\n      searchTerm: \"\"\n    });\n  };\n\n  // Função para atualizar o campo do formulário\n  const handleFormChange = (field, value) => {\n    if (field.includes(\".\")) {\n      const [parent, child] = field.split(\".\");\n      setTransactionForm({\n        ...transactionForm,\n        [parent]: {\n          ...transactionForm[parent],\n          [child]: value\n        }\n      });\n    } else {\n      setTransactionForm({\n        ...transactionForm,\n        [field]: value\n      });\n    }\n  };\n\n  // Função para filtrar as transações\n  const getFilteredTransactions = () => {\n    return allTransactions.filter(transaction => {\n      // Filtrar por tipo\n      if (filters.type !== \"all\" && transaction.type !== filters.type) {\n        return false;\n      }\n\n      // Filtrar por status\n      if (filters.status !== \"all\" && transaction.status !== filters.status) {\n        return false;\n      }\n\n      // Filtrar por data de início\n      if (filters.dateFrom && transaction.dueDate && dayjs(transaction.dueDate).isBefore(dayjs(filters.dateFrom))) {\n        return false;\n      }\n\n      // Filtrar por data de fim\n      if (filters.dateTo && transaction.dueDate && dayjs(transaction.dueDate).isAfter(dayjs(filters.dateTo))) {\n        return false;\n      }\n\n      // Filtrar por categoria\n      if (filters.category !== \"all\") {\n        if (parseInt(filters.category) !== transaction.category) {\n          return false;\n        }\n      }\n\n      // Filtrar por valor mínimo\n      if (filters.amountMin && transaction.amount < parseFloat(filters.amountMin)) {\n        return false;\n      }\n\n      // Filtrar por valor máximo\n      if (filters.amountMax && transaction.amount > parseFloat(filters.amountMax)) {\n        return false;\n      }\n\n      // Filtrar por termo de busca\n      if (filters.searchTerm) {\n        const searchLower = filters.searchTerm.toLowerCase();\n        const descriptionMatch = transaction.description.toLowerCase().includes(searchLower);\n        const relatedPersonMatch = transaction.relatedPerson.name.toLowerCase().includes(searchLower);\n        const notesMatch = transaction.notes.toLowerCase().includes(searchLower);\n        if (!descriptionMatch && !relatedPersonMatch && !notesMatch) {\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n\n  // Obter transações a receber (mensalidades)\n  const getReceivableTransactions = () => {\n    // Certifique-se de que allTransactions existe e é um array\n    if (!Array.isArray(allTransactions)) return [];\n    return allTransactions.filter(transaction => {\n      if (!transaction) return false;\n      return transaction.type === \"income\" && transaction.category === 1 && (\n      // Categoria 1 = Mensalidade\n      transaction.status === \"pending\" || transaction.status === \"overdue\");\n    });\n  };\n\n  // Colunas para a tabela de transações\n  const transactionColumns = [{\n    field: \"type\",\n    headerName: \"Tipo\",\n    width: 100,\n    renderCell: params => {\n      // Verificar se o valor existe\n      if (!params.value) {\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Desconhecido\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        icon: params.value === \"income\" ? /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this),\n        label: params.value === \"income\" ? \"Receita\" : \"Despesa\",\n        color: params.value === \"income\" ? \"success\" : \"error\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"description\",\n    headerName: \"Descrição\",\n    flex: 1,\n    minWidth: 200\n  }, {\n    field: \"amount\",\n    headerName: \"Valor\",\n    width: 120,\n    renderCell: params => {\n      // Verificar se o valor existe e se a row existe\n      if (!params.value || !params.row) {\n        return \"R$ 0,00\";\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: params.row.type === \"income\" ? \"success.main\" : \"error.main\"\n        },\n        children: new Intl.NumberFormat(\"pt-BR\", {\n          style: \"currency\",\n          currency: \"BRL\"\n        }).format(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"dueDate\",\n    headerName: \"Vencimento\",\n    width: 120,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return dayjs(params.value).format(\"DD/MM/YYYY\");\n    }\n  }, {\n    field: \"date\",\n    headerName: \"Pagamento\",\n    width: 120,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return dayjs(params.value).format(\"DD/MM/YYYY\");\n    }\n  }, {\n    field: \"category\",\n    headerName: \"Categoria\",\n    width: 150,\n    valueFormatter: params => {\n      if (!params.value || !params.row) return \"Desconhecido\";\n      const type = params.row.type || \"income\";\n      return getCategoryName(params.value, type);\n    }\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 120,\n    renderCell: params => {\n      // Verificar se o valor existe\n      if (!params.value) {\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Desconhecido\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        label: getStatusName(params.value),\n        size: \"small\",\n        sx: {\n          bgcolor: `${getStatusColor(params.value)}20`,\n          color: getStatusColor(params.value)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"paymentMethod\",\n    headerName: \"Método\",\n    width: 150,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return getPaymentMethodName(params.value);\n    }\n  }, {\n    field: \"actions\",\n    headerName: \"Ações\",\n    width: 180,\n    sortable: false,\n    filterable: false,\n    renderCell: params => {\n      // Verificar se row existe para evitar erros\n      if (!params.row) return null;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [(params.row.status === \"pending\" || params.row.status === \"overdue\") && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Dar baixa\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"success\",\n            onClick: () => handleUpdateTransactionStatus(params.row, \"paid\"),\n            children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Editar\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"primary\",\n            onClick: () => handleOpenTransactionDialog(params.row),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Excluir\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"error\",\n            onClick: () => handleOpenDeleteDialog(params.row),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  // Função para abrir o diálogo de geração de mensalidades\n  const handleOpenGenerateDialog = () => {\n    setOpenGenerateDialog(true);\n  };\n\n  // Função para fechar o diálogo de geração de mensalidades\n  const handleCloseGenerateDialog = () => {\n    setOpenGenerateDialog(false);\n  };\n\n  // Função para gerar mensalidades\n  const handleGenerateMensalidades = () => {\n    // Aqui teria a lógica para gerar as mensalidades para todos os alunos\n    // Como não temos uma lista de alunos real, vamos simular com alguns exemplos\n\n    const mesAno = monthToGenerate.format(\"MM/YYYY\");\n    const novasMensalidades = [{\n      id: allTransactions.length + 1,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - João Silva`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 101,\n        name: \"João Silva\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 2,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Maria Oliveira`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 102,\n        name: \"Maria Oliveira\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 3,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Pedro Santos`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 103,\n        name: \"Pedro Santos\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 4,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Ana Costa`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 104,\n        name: \"Ana Costa\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 5,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Ricardo Gomes`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 105,\n        name: \"Ricardo Gomes\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }];\n    setAllTransactions([...allTransactions, ...novasMensalidades]);\n    setSnackbar({\n      open: true,\n      message: `Mensalidades para ${mesAno} geradas com sucesso!`,\n      severity: \"success\"\n    });\n    handleCloseGenerateDialog();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Gest\\xE3o Financeira\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 26\n            }, this),\n            onClick: handleOpenGenerateDialog,\n            children: \"Gerar Mensalidades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 26\n            }, this),\n            onClick: () => handleOpenTransactionDialog(),\n            children: \"Nova Transa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: currentTab,\n        onChange: handleTabChange,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Contas a Receber\",\n          value: \"receivables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Contas a Pagar\",\n          value: \"payables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Hist\\xF3rico\",\n          value: \"history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Vis\\xE3o Geral\",\n          value: \"overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), currentTab === \"receivables\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Mensalidades a Receber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"Buscar...\",\n              size: \"small\",\n              value: filters.searchTerm,\n              onChange: e => handleFilterChange(\"searchTerm\", e.target.value),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 23\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 30\n              }, this),\n              onClick: () => setOpenFilterDialog(true),\n              size: \"small\",\n              children: \"Filtros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: 500,\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: getReceivableTransactions(),\n            columns: transactionColumns,\n            pageSize: 10,\n            rowsPerPageOptions: [10, 25, 50],\n            disableSelectionOnClick: true,\n            localeText: ptBR.components.MuiDataGrid.defaultProps.localeText,\n            autoHeight: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), currentTab === \"payables\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Contas a Pagar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Esta funcionalidade ser\\xE1 implementada em breve.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 9\n    }, this), currentTab === \"history\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: t(\"finances.historyTitle\", \"Histórico de Transações\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: t(\"finances.search\", \"Buscar...\"),\n            size: \"small\",\n            value: filters.searchTerm,\n            onChange: e => handleFilterChange(\"searchTerm\", e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 28\n            }, this),\n            onClick: () => setOpenFilterDialog(true),\n            size: \"small\",\n            children: t(\"finances.filters\", \"Filtros\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 500,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: getFilteredTransactions(),\n          columns: transactionColumns,\n          pageSize: 10,\n          rowsPerPageOptions: [10, 25, 50],\n          disableSelectionOnClick: true,\n          localeText: ptBR.components.MuiDataGrid.defaultProps.localeText,\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 9\n    }, this), currentTab === \"overview\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Vis\\xE3o Geral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Esta funcionalidade ser\\xE1 implementada em breve.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openGenerateDialog,\n      onClose: handleCloseGenerateDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Gerar Mensalidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          sx: {\n            mb: 2\n          },\n          children: \"Selecione o m\\xEAs para gerar as mensalidades dos alunos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          adapterLocale: \"pt-br\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"M\\xEAs/Ano de Refer\\xEAncia\",\n            value: monthToGenerate,\n            onChange: newValue => setMonthToGenerate(newValue),\n            views: [\"month\", \"year\"],\n            sx: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseGenerateDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGenerateMensalidades,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Gerar Mensalidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCloseDeleteDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Tem certeza que deseja excluir esta transa\\xE7\\xE3o? Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDeleteDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteTransaction,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTransactionDialog,\n      onClose: handleCloseTransactionDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedTransaction ? \"Editar Transação\" : \"Nova Transação\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.type,\n                label: \"Tipo\",\n                onChange: e => handleFormChange(\"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"income\",\n                  children: \"Receita\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 988,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"expense\",\n                  children: \"Despesa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!formErrors.category,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Categoria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.category,\n                label: \"Categoria\",\n                onChange: e => handleFormChange(\"category\", e.target.value),\n                children: transactionForm.type === \"income\" ? incomeCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: category.name\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 25\n                }, this)) : expenseCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: category.name\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 17\n              }, this), formErrors.category && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrors.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Descri\\xE7\\xE3o\",\n              value: transactionForm.description,\n              onChange: e => handleFormChange(\"description\", e.target.value),\n              error: !!formErrors.description,\n              helperText: formErrors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 21\n                }, this)\n              },\n              value: transactionForm.amount,\n              onChange: e => handleFormChange(\"amount\", e.target.value),\n              error: !!formErrors.amount,\n              helperText: formErrors.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1048,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.status,\n                label: \"Status\",\n                onChange: e => handleFormChange(\"status\", e.target.value),\n                children: transactionStatus.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status.id,\n                  children: status.name\n                }, status.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data de Vencimento\",\n                value: transactionForm.dueDate,\n                onChange: newValue => handleFormChange(\"dueDate\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    error: !!formErrors.dueDate,\n                    helperText: formErrors.dueDate\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data de Pagamento\",\n                value: transactionForm.date,\n                onChange: newValue => handleFormChange(\"date\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    error: !!formErrors.date,\n                    helperText: formErrors.date\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!formErrors.paymentMethod,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"M\\xE9todo de Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.paymentMethod || \"\",\n                label: \"M\\xE9todo de Pagamento\",\n                onChange: e => handleFormChange(\"paymentMethod\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Selecione um m\\xE9todo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1111,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1110,\n                  columnNumber: 19\n                }, this), paymentMethods.map(method => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: method.id,\n                  children: method.name\n                }, method.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 17\n              }, this), formErrors.paymentMethod && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrors.paymentMethod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Pessoa Relacionada\",\n              value: transactionForm.relatedPerson.name,\n              onChange: e => handleFormChange(\"relatedPerson.name\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Observa\\xE7\\xF5es\",\n              multiline: true,\n              rows: 3,\n              value: transactionForm.notes,\n              onChange: e => handleFormChange(\"notes\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseTransactionDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTransaction,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openFilterDialog,\n      onClose: () => setOpenFilterDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Filtrar Transa\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: filters.type,\n                label: \"Tipo\",\n                onChange: e => handleFilterChange(\"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"income\",\n                  children: \"Receitas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"expense\",\n                  children: \"Despesas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1180,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: filters.status,\n                label: \"Status\",\n                onChange: e => handleFilterChange(\"status\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1192,\n                  columnNumber: 19\n                }, this), transactionStatus.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status.id,\n                  children: status.name\n                }, status.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1194,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data Inicial\",\n                value: filters.dateFrom,\n                onChange: newValue => handleFilterChange(\"dateFrom\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data Final\",\n                value: filters.dateTo,\n                onChange: newValue => handleFilterChange(\"dateTo\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor M\\xEDnimo\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 21\n                }, this)\n              },\n              value: filters.amountMin,\n              onChange: e => handleFilterChange(\"amountMin\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor M\\xE1ximo\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1258,\n                  columnNumber: 21\n                }, this)\n              },\n              value: filters.amountMax,\n              onChange: e => handleFilterChange(\"amountMax\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClearFilters,\n          color: \"secondary\",\n          children: \"Limpar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleApplyFilters,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Aplicar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        variant: \"filled\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 5\n  }, this);\n}\n_s(FinancialManagement, \"H5pG9cfg2lFaK9gyJV5pVtSwXbU=\", false, function () {\n  return [useTranslation];\n});\n_c = FinancialManagement;\nexport default FinancialManagement;\nvar _c;\n$RefreshReg$(_c, \"FinancialManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Tabs","Tab","Paper","Button","Grid","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","Select","MenuItem","InputAdornment","FormHelperText","Tooltip","Snackbar","Alert","Stack","TextField","IconButton","DatePicker","AdapterDayjs","LocalizationProvider","DataGrid","ptBR","dayjs","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","FilterList","FilterListIcon","CheckCircle","CheckCircleIcon","ArrowUpward","ArrowUpwardIcon","ArrowDownward","ArrowDownwardIcon","AttachMoney","AttachMoneyIcon","Search","SearchIcon","useTranslation","transactions","incomeCategories","expenseCategories","transactionStatus","paymentMethods","getCategoryName","getPaymentMethodName","getStatusName","getStatusColor","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialManagement","_s","t","i18n","currentTab","setCurrentTab","allTransactions","setAllTransactions","openGenerateDialog","setOpenGenerateDialog","monthToGenerate","setMonthToGenerate","selectedTransaction","setSelectedTransaction","openTransactionDialog","setOpenTransactionDialog","openDeleteDialog","setOpenDeleteDialog","snackbar","setSnackbar","open","message","severity","openFilterDialog","setOpenFilterDialog","filters","setFilters","type","status","dateFrom","dateTo","category","amountMin","amountMax","searchTerm","transactionForm","setTransactionForm","id","description","amount","date","dueDate","paymentMethod","relatedPerson","name","notes","formErrors","setFormErrors","handleTabChange","event","newValue","handleOpenTransactionDialog","transaction","handleCloseTransactionDialog","validateTransactionForm","errors","trim","isNaN","parseFloat","Object","keys","length","handleSaveTransaction","newTransaction","format","updatedTransactions","map","handleOpenDeleteDialog","handleCloseDeleteDialog","handleDeleteTransaction","filter","handleUpdateTransactionStatus","newStatus","updatedTransaction","handleCloseSnackbar","handleFilterChange","field","value","handleApplyFilters","handleClearFilters","handleFormChange","includes","parent","child","split","getFilteredTransactions","isBefore","isAfter","parseInt","searchLower","toLowerCase","descriptionMatch","relatedPersonMatch","notesMatch","getReceivableTransactions","Array","isArray","transactionColumns","headerName","width","renderCell","params","label","size","fileName","_jsxFileName","lineNumber","columnNumber","icon","color","flex","minWidth","row","sx","children","Intl","NumberFormat","style","currency","valueFormatter","bgcolor","sortable","filterable","title","onClick","handleOpenGenerateDialog","handleCloseGenerateDialog","handleGenerateMensalidades","mesAno","novasMensalidades","p","mb","display","justifyContent","alignItems","variant","component","direction","spacing","startIcon","onChange","gap","placeholder","e","target","InputProps","startAdornment","position","height","rows","columns","pageSize","rowsPerPageOptions","disableSelectionOnClick","localeText","components","MuiDataGrid","defaultProps","autoHeight","gutterBottom","onClose","dateAdapter","adapterLocale","views","maxWidth","fullWidth","container","mt","item","xs","sm","error","helperText","slotProps","textField","method","multiline","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/FinancialManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Button,\n  Grid,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  FormHelperText,\n  Tooltip,\n  Snackbar,\n  Alert,\n  Stack,\n  TextField,\n  IconButton,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DataGrid, ptBR } from \"@mui/x-data-grid\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  FilterList as FilterListIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowUpward as ArrowUpwardIcon,\n  ArrowDownward as ArrowDownwardIcon,\n  AttachMoney as AttachMoneyIcon,\n  Search as SearchIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  transactions,\n  incomeCategories,\n  expenseCategories,\n  transactionStatus,\n  paymentMethods,\n  getCategoryName,\n  getPaymentMethodName,\n  getStatusName,\n  getStatusColor,\n} from \"../data/financialData\";\n\nfunction FinancialManagement() {\n  const { t, i18n } = useTranslation();\n\n  // Estado para a aba atual\n  const [currentTab, setCurrentTab] = useState(\"receivables\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estado para o diálogo de geração de mensalidades\n  const [openGenerateDialog, setOpenGenerateDialog] = useState(false);\n  const [monthToGenerate, setMonthToGenerate] = useState(dayjs());\n\n  // Estado para a transação selecionada para edição/detalhes\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n\n  // Estado para o diálogo de nova transação\n  const [openTransactionDialog, setOpenTransactionDialog] = useState(false);\n\n  // Estado para o diálogo de exclusão\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n\n  // Estado para snackbar\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  // Estado para o diálogo de filtros\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  // Estado para os filtros\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    status: \"all\",\n    dateFrom: null,\n    dateTo: null,\n    category: \"all\",\n    amountMin: \"\",\n    amountMax: \"\",\n    searchTerm: \"\",\n  });\n\n  // Estado para o formulário de nova transação\n  const [transactionForm, setTransactionForm] = useState({\n    id: null,\n    type: \"income\",\n    description: \"\",\n    amount: \"\",\n    date: null,\n    dueDate: null,\n    category: \"\",\n    status: \"pending\",\n    paymentMethod: \"\",\n    relatedPerson: {\n      id: \"\",\n      name: \"\",\n      type: \"\",\n    },\n    notes: \"\",\n  });\n\n  // Estado para erros de validação do formulário\n  const [formErrors, setFormErrors] = useState({});\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para trocar a aba atual\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo de nova transação\n  const handleOpenTransactionDialog = (transaction = null) => {\n    if (transaction) {\n      // Editar transação existente\n      setTransactionForm({\n        ...transaction,\n        date: transaction.date ? dayjs(transaction.date) : null,\n        dueDate: transaction.dueDate ? dayjs(transaction.dueDate) : null,\n      });\n      setSelectedTransaction(transaction);\n    } else {\n      // Nova transação\n      setTransactionForm({\n        id: null,\n        type: \"income\",\n        description: \"\",\n        amount: \"\",\n        date: null,\n        dueDate: null,\n        category: \"\",\n        status: \"pending\",\n        paymentMethod: \"\",\n        relatedPerson: {\n          id: \"\",\n          name: \"\",\n          type: \"\",\n        },\n        notes: \"\",\n      });\n      setSelectedTransaction(null);\n    }\n    setFormErrors({});\n    setOpenTransactionDialog(true);\n  };\n\n  // Função para fechar o diálogo de transação\n  const handleCloseTransactionDialog = () => {\n    setOpenTransactionDialog(false);\n  };\n\n  // Função para validar o formulário de transação\n  const validateTransactionForm = () => {\n    const errors = {};\n\n    if (!transactionForm.description.trim()) {\n      errors.description = \"Descrição é obrigatória\";\n    }\n\n    if (\n      !transactionForm.amount ||\n      isNaN(transactionForm.amount) ||\n      parseFloat(transactionForm.amount) <= 0\n    ) {\n      errors.amount = \"Valor deve ser um número positivo\";\n    }\n\n    if (!transactionForm.dueDate) {\n      errors.dueDate = \"Data de vencimento é obrigatória\";\n    }\n\n    if (!transactionForm.category) {\n      errors.category = \"Categoria é obrigatória\";\n    }\n\n    if (transactionForm.status === \"paid\" && !transactionForm.paymentMethod) {\n      errors.paymentMethod =\n        \"Método de pagamento é obrigatório para transações pagas\";\n    }\n\n    if (transactionForm.status === \"paid\" && !transactionForm.date) {\n      errors.date = \"Data de pagamento é obrigatória para transações pagas\";\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Função para salvar uma transação (nova ou editada)\n  const handleSaveTransaction = () => {\n    if (!validateTransactionForm()) {\n      return;\n    }\n\n    const newTransaction = {\n      ...transactionForm,\n      id: transactionForm.id || allTransactions.length + 1,\n      amount: parseFloat(transactionForm.amount),\n      date: transactionForm.date\n        ? transactionForm.date.format(\"YYYY-MM-DD\")\n        : null,\n      dueDate: transactionForm.dueDate\n        ? transactionForm.dueDate.format(\"YYYY-MM-DD\")\n        : null,\n    };\n\n    if (selectedTransaction) {\n      // Editar transação existente\n      const updatedTransactions = allTransactions.map((t) =>\n        t.id === newTransaction.id ? newTransaction : t\n      );\n      setAllTransactions(updatedTransactions);\n      setSnackbar({\n        open: true,\n        message: \"Transação atualizada com sucesso!\",\n        severity: \"success\",\n      });\n    } else {\n      // Adicionar nova transação\n      setAllTransactions([...allTransactions, newTransaction]);\n      setSnackbar({\n        open: true,\n        message: \"Transação adicionada com sucesso!\",\n        severity: \"success\",\n      });\n    }\n\n    handleCloseTransactionDialog();\n  };\n\n  // Função para abrir o diálogo de exclusão\n  const handleOpenDeleteDialog = (transaction) => {\n    setSelectedTransaction(transaction);\n    setOpenDeleteDialog(true);\n  };\n\n  // Função para fechar o diálogo de exclusão\n  const handleCloseDeleteDialog = () => {\n    setOpenDeleteDialog(false);\n  };\n\n  // Função para excluir uma transação\n  const handleDeleteTransaction = () => {\n    const updatedTransactions = allTransactions.filter(\n      (t) => t.id !== selectedTransaction.id\n    );\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: \"Transação excluída com sucesso!\",\n      severity: \"success\",\n    });\n    handleCloseDeleteDialog();\n  };\n\n  // Função para atualizar o status de uma transação (dar baixa)\n  const handleUpdateTransactionStatus = (transaction, newStatus) => {\n    const updatedTransaction = {\n      ...transaction,\n      status: newStatus,\n      date:\n        newStatus === \"paid\" ? dayjs().format(\"YYYY-MM-DD\") : transaction.date,\n    };\n\n    const updatedTransactions = allTransactions.map((t) =>\n      t.id === transaction.id ? updatedTransaction : t\n    );\n\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: `Status atualizado para: ${getStatusName(newStatus)}`,\n      severity: \"success\",\n    });\n  };\n\n  // Função para fechar o snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false,\n    });\n  };\n\n  // Função para atualizar o filtro\n  const handleFilterChange = (field, value) => {\n    setFilters({\n      ...filters,\n      [field]: value,\n    });\n  };\n\n  // Função para aplicar os filtros\n  const handleApplyFilters = () => {\n    setOpenFilterDialog(false);\n  };\n\n  // Função para limpar os filtros\n  const handleClearFilters = () => {\n    setFilters({\n      type: \"all\",\n      status: \"all\",\n      dateFrom: null,\n      dateTo: null,\n      category: \"all\",\n      amountMin: \"\",\n      amountMax: \"\",\n      searchTerm: \"\",\n    });\n  };\n\n  // Função para atualizar o campo do formulário\n  const handleFormChange = (field, value) => {\n    if (field.includes(\".\")) {\n      const [parent, child] = field.split(\".\");\n      setTransactionForm({\n        ...transactionForm,\n        [parent]: {\n          ...transactionForm[parent],\n          [child]: value,\n        },\n      });\n    } else {\n      setTransactionForm({\n        ...transactionForm,\n        [field]: value,\n      });\n    }\n  };\n\n  // Função para filtrar as transações\n  const getFilteredTransactions = () => {\n    return allTransactions.filter((transaction) => {\n      // Filtrar por tipo\n      if (filters.type !== \"all\" && transaction.type !== filters.type) {\n        return false;\n      }\n\n      // Filtrar por status\n      if (filters.status !== \"all\" && transaction.status !== filters.status) {\n        return false;\n      }\n\n      // Filtrar por data de início\n      if (\n        filters.dateFrom &&\n        transaction.dueDate &&\n        dayjs(transaction.dueDate).isBefore(dayjs(filters.dateFrom))\n      ) {\n        return false;\n      }\n\n      // Filtrar por data de fim\n      if (\n        filters.dateTo &&\n        transaction.dueDate &&\n        dayjs(transaction.dueDate).isAfter(dayjs(filters.dateTo))\n      ) {\n        return false;\n      }\n\n      // Filtrar por categoria\n      if (filters.category !== \"all\") {\n        if (parseInt(filters.category) !== transaction.category) {\n          return false;\n        }\n      }\n\n      // Filtrar por valor mínimo\n      if (\n        filters.amountMin &&\n        transaction.amount < parseFloat(filters.amountMin)\n      ) {\n        return false;\n      }\n\n      // Filtrar por valor máximo\n      if (\n        filters.amountMax &&\n        transaction.amount > parseFloat(filters.amountMax)\n      ) {\n        return false;\n      }\n\n      // Filtrar por termo de busca\n      if (filters.searchTerm) {\n        const searchLower = filters.searchTerm.toLowerCase();\n        const descriptionMatch = transaction.description\n          .toLowerCase()\n          .includes(searchLower);\n        const relatedPersonMatch = transaction.relatedPerson.name\n          .toLowerCase()\n          .includes(searchLower);\n        const notesMatch = transaction.notes\n          .toLowerCase()\n          .includes(searchLower);\n\n        if (!descriptionMatch && !relatedPersonMatch && !notesMatch) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  };\n\n  // Obter transações a receber (mensalidades)\n  const getReceivableTransactions = () => {\n    // Certifique-se de que allTransactions existe e é um array\n    if (!Array.isArray(allTransactions)) return [];\n\n    return allTransactions.filter((transaction) => {\n      if (!transaction) return false;\n\n      return (\n        transaction.type === \"income\" &&\n        transaction.category === 1 && // Categoria 1 = Mensalidade\n        (transaction.status === \"pending\" || transaction.status === \"overdue\")\n      );\n    });\n  };\n\n  // Colunas para a tabela de transações\n  const transactionColumns = [\n    {\n      field: \"type\",\n      headerName: \"Tipo\",\n      width: 100,\n      renderCell: (params) => {\n        // Verificar se o valor existe\n        if (!params.value) {\n          return <Chip label=\"Desconhecido\" size=\"small\" />;\n        }\n\n        return (\n          <Chip\n            icon={\n              params.value === \"income\" ? (\n                <ArrowUpwardIcon />\n              ) : (\n                <ArrowDownwardIcon />\n              )\n            }\n            label={params.value === \"income\" ? \"Receita\" : \"Despesa\"}\n            color={params.value === \"income\" ? \"success\" : \"error\"}\n            size=\"small\"\n          />\n        );\n      },\n    },\n    {\n      field: \"description\",\n      headerName: \"Descrição\",\n      flex: 1,\n      minWidth: 200,\n    },\n    {\n      field: \"amount\",\n      headerName: \"Valor\",\n      width: 120,\n      renderCell: (params) => {\n        // Verificar se o valor existe e se a row existe\n        if (!params.value || !params.row) {\n          return \"R$ 0,00\";\n        }\n\n        return (\n          <Typography\n            sx={{\n              color:\n                params.row.type === \"income\" ? \"success.main\" : \"error.main\",\n            }}\n          >\n            {new Intl.NumberFormat(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\",\n            }).format(params.value)}\n          </Typography>\n        );\n      },\n    },\n    {\n      field: \"dueDate\",\n      headerName: \"Vencimento\",\n      width: 120,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return dayjs(params.value).format(\"DD/MM/YYYY\");\n      },\n    },\n    {\n      field: \"date\",\n      headerName: \"Pagamento\",\n      width: 120,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return dayjs(params.value).format(\"DD/MM/YYYY\");\n      },\n    },\n    {\n      field: \"category\",\n      headerName: \"Categoria\",\n      width: 150,\n      valueFormatter: (params) => {\n        if (!params.value || !params.row) return \"Desconhecido\";\n        const type = params.row.type || \"income\";\n        return getCategoryName(params.value, type);\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 120,\n      renderCell: (params) => {\n        // Verificar se o valor existe\n        if (!params.value) {\n          return <Chip label=\"Desconhecido\" size=\"small\" />;\n        }\n\n        return (\n          <Chip\n            label={getStatusName(params.value)}\n            size=\"small\"\n            sx={{\n              bgcolor: `${getStatusColor(params.value)}20`,\n              color: getStatusColor(params.value),\n            }}\n          />\n        );\n      },\n    },\n    {\n      field: \"paymentMethod\",\n      headerName: \"Método\",\n      width: 150,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return getPaymentMethodName(params.value);\n      },\n    },\n    {\n      field: \"actions\",\n      headerName: \"Ações\",\n      width: 180,\n      sortable: false,\n      filterable: false,\n      renderCell: (params) => {\n        // Verificar se row existe para evitar erros\n        if (!params.row) return null;\n\n        return (\n          <Box>\n            {(params.row.status === \"pending\" ||\n              params.row.status === \"overdue\") && (\n              <Tooltip title=\"Dar baixa\">\n                <IconButton\n                  size=\"small\"\n                  color=\"success\"\n                  onClick={() =>\n                    handleUpdateTransactionStatus(params.row, \"paid\")\n                  }\n                >\n                  <CheckCircleIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title=\"Editar\">\n              <IconButton\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => handleOpenTransactionDialog(params.row)}\n              >\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Excluir\">\n              <IconButton\n                size=\"small\"\n                color=\"error\"\n                onClick={() => handleOpenDeleteDialog(params.row)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        );\n      },\n    },\n  ];\n\n  // Função para abrir o diálogo de geração de mensalidades\n  const handleOpenGenerateDialog = () => {\n    setOpenGenerateDialog(true);\n  };\n\n  // Função para fechar o diálogo de geração de mensalidades\n  const handleCloseGenerateDialog = () => {\n    setOpenGenerateDialog(false);\n  };\n\n  // Função para gerar mensalidades\n  const handleGenerateMensalidades = () => {\n    // Aqui teria a lógica para gerar as mensalidades para todos os alunos\n    // Como não temos uma lista de alunos real, vamos simular com alguns exemplos\n\n    const mesAno = monthToGenerate.format(\"MM/YYYY\");\n    const novasMensalidades = [\n      {\n        id: allTransactions.length + 1,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - João Silva`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 101,\n          name: \"João Silva\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 2,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Maria Oliveira`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 102,\n          name: \"Maria Oliveira\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 3,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Pedro Santos`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 103,\n          name: \"Pedro Santos\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 4,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Ana Costa`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 104,\n          name: \"Ana Costa\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 5,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Ricardo Gomes`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 105,\n          name: \"Ricardo Gomes\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n    ];\n\n    setAllTransactions([...allTransactions, ...novasMensalidades]);\n\n    setSnackbar({\n      open: true,\n      message: `Mensalidades para ${mesAno} geradas com sucesso!`,\n      severity: \"success\",\n    });\n\n    handleCloseGenerateDialog();\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2,\n          }}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Gestão Financeira\n          </Typography>\n\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AttachMoneyIcon />}\n              onClick={handleOpenGenerateDialog}\n            >\n              Gerar Mensalidades\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              startIcon={<AddIcon />}\n              onClick={() => handleOpenTransactionDialog()}\n            >\n              Nova Transação\n            </Button>\n          </Stack>\n        </Box>\n\n        <Tabs value={currentTab} onChange={handleTabChange} sx={{ mb: 2 }}>\n          <Tab label=\"Contas a Receber\" value=\"receivables\" />\n          <Tab label=\"Contas a Pagar\" value=\"payables\" />\n          <Tab label=\"Histórico\" value=\"history\" />\n          <Tab label=\"Visão Geral\" value=\"overview\" />\n        </Tabs>\n      </Paper>\n\n      {/* Conteúdo para a aba de contas a receber */}\n      {currentTab === \"receivables\" && (\n        <>\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n              }}\n            >\n              <Typography variant=\"h6\">Mensalidades a Receber</Typography>\n\n              <Box sx={{ display: \"flex\", gap: 1 }}>\n                <TextField\n                  placeholder=\"Buscar...\"\n                  size=\"small\"\n                  value={filters.searchTerm}\n                  onChange={(e) =>\n                    handleFilterChange(\"searchTerm\", e.target.value)\n                  }\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<FilterListIcon />}\n                  onClick={() => setOpenFilterDialog(true)}\n                  size=\"small\"\n                >\n                  Filtros\n                </Button>\n              </Box>\n            </Box>\n\n            <Box sx={{ height: 500, width: \"100%\" }}>\n              <DataGrid\n                rows={getReceivableTransactions()}\n                columns={transactionColumns}\n                pageSize={10}\n                rowsPerPageOptions={[10, 25, 50]}\n                disableSelectionOnClick\n                localeText={ptBR.components.MuiDataGrid.defaultProps.localeText}\n                autoHeight\n              />\n            </Box>\n          </Paper>\n        </>\n      )}\n\n      {/* Conteúdo para a aba de contas a pagar */}\n      {currentTab === \"payables\" && (\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Contas a Pagar\n          </Typography>\n          {/* Interface para contas a pagar será implementada aqui */}\n          <Typography>\n            Esta funcionalidade será implementada em breve.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Conteúdo para a aba de histórico */}\n      {currentTab === \"history\" && (\n        <Paper sx={{ p: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              {t(\"finances.historyTitle\", \"Histórico de Transações\")}\n            </Typography>\n\n            <Box sx={{ display: \"flex\", gap: 1 }}>\n              <TextField\n                placeholder={t(\"finances.search\", \"Buscar...\")}\n                size=\"small\"\n                value={filters.searchTerm}\n                onChange={(e) =>\n                  handleFilterChange(\"searchTerm\", e.target.value)\n                }\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                variant=\"outlined\"\n                startIcon={<FilterListIcon />}\n                onClick={() => setOpenFilterDialog(true)}\n                size=\"small\"\n              >\n                {t(\"finances.filters\", \"Filtros\")}\n              </Button>\n            </Box>\n          </Box>\n\n          <Box sx={{ height: 500, width: \"100%\" }}>\n            <DataGrid\n              rows={getFilteredTransactions()}\n              columns={transactionColumns}\n              pageSize={10}\n              rowsPerPageOptions={[10, 25, 50]}\n              disableSelectionOnClick\n              localeText={ptBR.components.MuiDataGrid.defaultProps.localeText}\n              autoHeight\n            />\n          </Box>\n        </Paper>\n      )}\n\n      {/* Conteúdo para a aba de visão geral */}\n      {currentTab === \"overview\" && (\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Visão Geral\n          </Typography>\n          {/* Interface para visão geral será implementada aqui */}\n          <Typography>\n            Esta funcionalidade será implementada em breve.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Diálogo de Gerar Mensalidades */}\n      <Dialog open={openGenerateDialog} onClose={handleCloseGenerateDialog}>\n        <DialogTitle>Gerar Mensalidades</DialogTitle>\n        <DialogContent>\n          <DialogContentText sx={{ mb: 2 }}>\n            Selecione o mês para gerar as mensalidades dos alunos.\n          </DialogContentText>\n\n          <LocalizationProvider\n            dateAdapter={AdapterDayjs}\n            adapterLocale=\"pt-br\"\n          >\n            <DatePicker\n              label=\"Mês/Ano de Referência\"\n              value={monthToGenerate}\n              onChange={(newValue) => setMonthToGenerate(newValue)}\n              views={[\"month\", \"year\"]}\n              sx={{ width: \"100%\" }}\n            />\n          </LocalizationProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseGenerateDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleGenerateMensalidades}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Gerar Mensalidades\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de exclusão */}\n      <Dialog open={openDeleteDialog} onClose={handleCloseDeleteDialog}>\n        <DialogTitle>Confirmar Exclusão</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Tem certeza que deseja excluir esta transação? Esta ação não pode\n            ser desfeita.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleDeleteTransaction}\n            color=\"error\"\n            variant=\"contained\"\n          >\n            Excluir\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de Nova/Editar Transação */}\n      <Dialog\n        open={openTransactionDialog}\n        onClose={handleCloseTransactionDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          {selectedTransaction ? \"Editar Transação\" : \"Nova Transação\"}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo</InputLabel>\n                <Select\n                  value={transactionForm.type}\n                  label=\"Tipo\"\n                  onChange={(e) => handleFormChange(\"type\", e.target.value)}\n                >\n                  <MenuItem value=\"income\">Receita</MenuItem>\n                  <MenuItem value=\"expense\">Despesa</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth error={!!formErrors.category}>\n                <InputLabel>Categoria</InputLabel>\n                <Select\n                  value={transactionForm.category}\n                  label=\"Categoria\"\n                  onChange={(e) => handleFormChange(\"category\", e.target.value)}\n                >\n                  {transactionForm.type === \"income\"\n                    ? incomeCategories.map((category) => (\n                        <MenuItem key={category.id} value={category.id}>\n                          {category.name}\n                        </MenuItem>\n                      ))\n                    : expenseCategories.map((category) => (\n                        <MenuItem key={category.id} value={category.id}>\n                          {category.name}\n                        </MenuItem>\n                      ))}\n                </Select>\n                {formErrors.category && (\n                  <FormHelperText>{formErrors.category}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Descrição\"\n                value={transactionForm.description}\n                onChange={(e) =>\n                  handleFormChange(\"description\", e.target.value)\n                }\n                error={!!formErrors.description}\n                helperText={formErrors.description}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={transactionForm.amount}\n                onChange={(e) => handleFormChange(\"amount\", e.target.value)}\n                error={!!formErrors.amount}\n                helperText={formErrors.amount}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={transactionForm.status}\n                  label=\"Status\"\n                  onChange={(e) => handleFormChange(\"status\", e.target.value)}\n                >\n                  {transactionStatus.map((status) => (\n                    <MenuItem key={status.id} value={status.id}>\n                      {status.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data de Vencimento\"\n                  value={transactionForm.dueDate}\n                  onChange={(newValue) => handleFormChange(\"dueDate\", newValue)}\n                  slotProps={{\n                    textField: {\n                      fullWidth: true,\n                      error: !!formErrors.dueDate,\n                      helperText: formErrors.dueDate,\n                    },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data de Pagamento\"\n                  value={transactionForm.date}\n                  onChange={(newValue) => handleFormChange(\"date\", newValue)}\n                  slotProps={{\n                    textField: {\n                      fullWidth: true,\n                      error: !!formErrors.date,\n                      helperText: formErrors.date,\n                    },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth error={!!formErrors.paymentMethod}>\n                <InputLabel>Método de Pagamento</InputLabel>\n                <Select\n                  value={transactionForm.paymentMethod || \"\"}\n                  label=\"Método de Pagamento\"\n                  onChange={(e) =>\n                    handleFormChange(\"paymentMethod\", e.target.value)\n                  }\n                >\n                  <MenuItem value=\"\">\n                    <em>Selecione um método</em>\n                  </MenuItem>\n                  {paymentMethods.map((method) => (\n                    <MenuItem key={method.id} value={method.id}>\n                      {method.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {formErrors.paymentMethod && (\n                  <FormHelperText>{formErrors.paymentMethod}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Pessoa Relacionada\"\n                value={transactionForm.relatedPerson.name}\n                onChange={(e) =>\n                  handleFormChange(\"relatedPerson.name\", e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Observações\"\n                multiline\n                rows={3}\n                value={transactionForm.notes}\n                onChange={(e) => handleFormChange(\"notes\", e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseTransactionDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleSaveTransaction}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de Filtros */}\n      <Dialog\n        open={openFilterDialog}\n        onClose={() => setOpenFilterDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Filtrar Transações</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo</InputLabel>\n                <Select\n                  value={filters.type}\n                  label=\"Tipo\"\n                  onChange={(e) => handleFilterChange(\"type\", e.target.value)}\n                >\n                  <MenuItem value=\"all\">Todos</MenuItem>\n                  <MenuItem value=\"income\">Receitas</MenuItem>\n                  <MenuItem value=\"expense\">Despesas</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status}\n                  label=\"Status\"\n                  onChange={(e) => handleFilterChange(\"status\", e.target.value)}\n                >\n                  <MenuItem value=\"all\">Todos</MenuItem>\n                  {transactionStatus.map((status) => (\n                    <MenuItem key={status.id} value={status.id}>\n                      {status.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data Inicial\"\n                  value={filters.dateFrom}\n                  onChange={(newValue) =>\n                    handleFilterChange(\"dateFrom\", newValue)\n                  }\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data Final\"\n                  value={filters.dateTo}\n                  onChange={(newValue) =>\n                    handleFilterChange(\"dateTo\", newValue)\n                  }\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor Mínimo\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={filters.amountMin}\n                onChange={(e) =>\n                  handleFilterChange(\"amountMin\", e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor Máximo\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={filters.amountMax}\n                onChange={(e) =>\n                  handleFilterChange(\"amountMax\", e.target.value)\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClearFilters} color=\"secondary\">\n            Limpar Filtros\n          </Button>\n          <Button\n            onClick={handleApplyFilters}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Aplicar Filtros\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar para feedback */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbar.severity}\n          variant=\"filled\"\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default FinancialManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}