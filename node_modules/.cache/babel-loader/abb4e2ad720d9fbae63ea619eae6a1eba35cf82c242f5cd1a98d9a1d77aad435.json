{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/reports/DelinquencyReport.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Box, Typography, Paper, Grid, Card } from \"@mui/material\";\nimport { PieChart, BarChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DelinquencyReport({\n  transactions\n}) {\n  _s();\n  const {\n    t\n  } = useTranslation();\n\n  // Função para formatar valores monetários\n  const formatCurrency = value => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(transactions) || transactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: []\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0]\n        }\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = transactions.filter(transaction => (transaction === null || transaction === void 0 ? void 0 : transaction.type) === \"income\" && ((transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"pending\" || (transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"overdue\"));\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce((total, transaction) => total + ((transaction === null || transaction === void 0 ? void 0 : transaction.amount) || 0), 0);\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"pending\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n    const overdueAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"overdue\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach(transaction => {\n      if (!(transaction !== null && transaction !== void 0 && transaction.dueDate)) return;\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount]\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: t(\"reports.delinquencyTitle\", \"Relatório de Inadimplência\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: t(\"reports.pendingValuesByStatus\", \"Valores Pendentes por Status\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              series: [{\n                data: [{\n                  id: 0,\n                  value: getDelinquencyData().byStatus.data[0],\n                  label: t(\"reports.pending\", \"Pendente\"),\n                  color: \"#ff9800\"\n                }, {\n                  id: 1,\n                  value: getDelinquencyData().byStatus.data[1],\n                  label: t(\"reports.overdue\", \"Atrasado\"),\n                  color: \"#f44336\"\n                }],\n                valueFormatter: value => formatCurrency(value)\n              }],\n              height: 250\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: t(\"reports.delinquencySummary\", \"Resumo de Inadimplência\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      p: 2,\n                      bgcolor: \"#f4433620\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: t(\"reports.totalPending\", \"Total Pendente\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h5\",\n                      children: formatCurrency(getDelinquencyData().total)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      p: 2,\n                      bgcolor: \"#ff980020\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: t(\"reports.pendingMembershipsCount\", \"Quantidade de Mensalidades Pendentes\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h5\",\n                      children: getDelinquencyData().count\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: t(\"reports.pendingValuesByMonth\", \"Valores Pendentes por Mês de Vencimento\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), getDelinquencyData().byMonth.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            series: [{\n              data: getDelinquencyData().byMonth.data,\n              label: t(\"reports.totalPending\", \"Valor Pendente\"),\n              color: \"#f44336\",\n              valueFormatter: value => formatCurrency(value)\n            }],\n            xAxis: [{\n              data: getDelinquencyData().byMonth.labels,\n              scaleType: \"band\"\n            }],\n            height: 250\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            fontStyle: \"italic\",\n            mt: 2\n          },\n          children: t(\"reports.noPendingData\", \"Não há dados pendentes para exibir.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(DelinquencyReport, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = DelinquencyReport;\nexport default DelinquencyReport;\nvar _c;\n$RefreshReg$(_c, \"DelinquencyReport\");","map":{"version":3,"names":["React","Box","Typography","Paper","Grid","Card","PieChart","BarChart","dayjs","useTranslation","jsxDEV","_jsxDEV","DelinquencyReport","transactions","_s","t","formatCurrency","value","Intl","NumberFormat","style","currency","format","getDelinquencyData","Array","isArray","length","total","count","byMonth","labels","data","byStatus","delinquentTransactions","filter","transaction","type","status","totalAmount","reduce","amount","pendingAmount","overdueAmount","monthMap","Map","forEach","dueDate","monthYear","current","get","set","monthLabels","from","keys","monthData","values","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","sm","height","series","id","label","color","valueFormatter","mt","bgcolor","xAxis","scaleType","fontStyle","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/reports/DelinquencyReport.js"],"sourcesContent":["import React from \"react\";\nimport { Box, Typography, Paper, Grid, Card } from \"@mui/material\";\nimport { PieChart, BarChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction DelinquencyReport({ transactions }) {\n  const { t } = useTranslation();\n\n  // Função para formatar valores monetários\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(transactions) || transactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: [],\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0],\n        },\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = transactions.filter(\n      (transaction) =>\n        transaction?.type === \"income\" &&\n        (transaction?.status === \"pending\" || transaction?.status === \"overdue\")\n    );\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce(\n      (total, transaction) => total + (transaction?.amount || 0),\n      0\n    );\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions\n      .filter((t) => t?.status === \"pending\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    const overdueAmount = delinquentTransactions\n      .filter((t) => t?.status === \"overdue\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach((transaction) => {\n      if (!transaction?.dueDate) return;\n\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData,\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount],\n      },\n    };\n  };\n\n  return (\n    <Paper sx={{ p: 2 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        {t(\"reports.delinquencyTitle\", \"Relatório de Inadimplência\")}\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {t(\n                \"reports.pendingValuesByStatus\",\n                \"Valores Pendentes por Status\"\n              )}\n            </Typography>\n            <Box sx={{ height: 300 }}>\n              <PieChart\n                series={[\n                  {\n                    data: [\n                      {\n                        id: 0,\n                        value: getDelinquencyData().byStatus.data[0],\n                        label: t(\"reports.pending\", \"Pendente\"),\n                        color: \"#ff9800\",\n                      },\n                      {\n                        id: 1,\n                        value: getDelinquencyData().byStatus.data[1],\n                        label: t(\"reports.overdue\", \"Atrasado\"),\n                        color: \"#f44336\",\n                      },\n                    ],\n                    valueFormatter: (value) => formatCurrency(value),\n                  },\n                ]}\n                height={250}\n              />\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {t(\"reports.delinquencySummary\", \"Resumo de Inadimplência\")}\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Card>\n                    <Box sx={{ p: 2, bgcolor: \"#f4433620\" }}>\n                      <Typography variant=\"subtitle2\">\n                        {t(\"reports.totalPending\", \"Total Pendente\")}\n                      </Typography>\n                      <Typography variant=\"h5\">\n                        {formatCurrency(getDelinquencyData().total)}\n                      </Typography>\n                    </Box>\n                  </Card>\n                </Grid>\n                <Grid item xs={12}>\n                  <Card>\n                    <Box sx={{ p: 2, bgcolor: \"#ff980020\" }}>\n                      <Typography variant=\"subtitle2\">\n                        {t(\n                          \"reports.pendingMembershipsCount\",\n                          \"Quantidade de Mensalidades Pendentes\"\n                        )}\n                      </Typography>\n                      <Typography variant=\"h5\">\n                        {getDelinquencyData().count}\n                      </Typography>\n                    </Box>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {t(\n              \"reports.pendingValuesByMonth\",\n              \"Valores Pendentes por Mês de Vencimento\"\n            )}\n          </Typography>\n          {getDelinquencyData().byMonth.labels.length > 0 ? (\n            <Box sx={{ height: 300 }}>\n              <BarChart\n                series={[\n                  {\n                    data: getDelinquencyData().byMonth.data,\n                    label: t(\"reports.totalPending\", \"Valor Pendente\"),\n                    color: \"#f44336\",\n                    valueFormatter: (value) => formatCurrency(value),\n                  },\n                ]}\n                xAxis={[\n                  {\n                    data: getDelinquencyData().byMonth.labels,\n                    scaleType: \"band\",\n                  },\n                ]}\n                height={250}\n              />\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" sx={{ fontStyle: \"italic\", mt: 2 }}>\n              {t(\n                \"reports.noPendingData\",\n                \"Não há dados pendentes para exibir.\"\n              )}\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default DelinquencyReport;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}