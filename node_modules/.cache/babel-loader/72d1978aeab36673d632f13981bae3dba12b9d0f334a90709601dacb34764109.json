{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Box,Typography,Paper,Grid,Card,CardContent,TextField,Button,Dialog,DialogTitle,DialogContent,DialogActions,Chip,Divider,Avatar,List,ListItem,ListItemText,ListItemAvatar,InputAdornment,Accordion,AccordionSummary,AccordionDetails,FormControl,InputLabel,Select,MenuItem,Tabs,Tab,Snackbar,Alert}from\"@mui/material\";import{Search as SearchIcon,ExpandMore as ExpandMoreIcon,FitnessCenter as FitnessCenterIcon,Person as PersonIcon,Edit as EditIcon,History as HistoryIcon,LibraryBooks as LibraryBooksIcon}from\"@mui/icons-material\";import{useTranslation}from\"react-i18next\";import ExerciseTable from\"./ExerciseTable\";import WorkoutTemplates from\"./WorkoutTemplates\";import dayjs from\"dayjs\";// Dados fictícios de alunos com treinos\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const initialStudentWorkouts=[{id:1,studentId:1,studentName:\"João Silva\",workoutName:\"Treino Inicial - Adaptação\",exercises:[{id:\"sw1e1\",name:\"Supino Reto\",sets:\"3\",weight:\"15\",reps:\"12\",notes:\"Movimento controlado\",muscleGroup:\"chest\"},{id:\"sw1e2\",name:\"Leg Press\",sets:\"3\",weight:\"60\",reps:\"15\",notes:\"Posição neutra\",muscleGroup:\"legs\"}],history:[{date:\"2023-05-10\",action:\"created\",description:\"Treino inicial criado\"},{date:\"2023-06-05\",action:\"updated\",description:\"Aumentado peso no Leg Press de 50 para 60kg\"}],lastUpdated:\"2023-06-05\",observations:\"Aluno iniciante com bom progresso\",active:true},{id:2,studentId:2,studentName:\"Maria Oliveira\",workoutName:\"Hipertrofia - Intermediário\",exercises:[{id:\"sw2e1\",name:\"Agachamento\",sets:\"4\",weight:\"65\",reps:\"10\",notes:\"Profundidade completa\",muscleGroup:\"legs\"},{id:\"sw2e2\",name:\"Supino Inclinado\",sets:\"4\",weight:\"45\",reps:\"8\",notes:\"Foco na contração\",muscleGroup:\"chest\"}],history:[{date:\"2023-04-15\",action:\"created\",description:\"Treino customizado criado\"},{date:\"2023-05-20\",action:\"updated\",description:\"Ajustada série no Supino Inclinado\"}],lastUpdated:\"2023-05-20\",observations:\"Aluna com foco em hipertrofia, boa evolução nos últimos meses\",active:true}];// Lista fictícia de todos os alunos\nconst allStudents=[{id:1,name:\"João Silva\"},{id:2,name:\"Maria Oliveira\"},{id:3,name:\"Carlos Santos\"},{id:4,name:\"Ana Paula Souza\"},{id:5,name:\"Roberto Mendes\"}];function StudentWorkoutList(){const{t}=useTranslation();const[studentWorkouts,setStudentWorkouts]=useState(initialStudentWorkouts);const[filteredWorkouts,setFilteredWorkouts]=useState(initialStudentWorkouts);const[searchText,setSearchText]=useState(\"\");const[openDialog,setOpenDialog]=useState(false);const[currentStudentWorkout,setCurrentStudentWorkout]=useState(null);const[selectedTabIndex,setSelectedTabIndex]=useState(0);const[showHistory,setShowHistory]=useState(false);const[selectedStudentId,setSelectedStudentId]=useState(\"\");const[observations,setObservations]=useState(\"\");const[exercises,setExercises]=useState([]);const[isEditing,setIsEditing]=useState(false);const[newHistoryEntry,setNewHistoryEntry]=useState(\"\");const[activeFilter,setActiveFilter]=useState(\"all\");const[showTemplates,setShowTemplates]=useState(false);const[snackbar,setSnackbar]=useState({open:false,message:\"\",severity:\"success\"});// Aplicar filtros quando mudar texto de pesquisa\nuseEffect(()=>{applyFilters();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[searchText,activeFilter]);// Abrir snackbar\nconst handleSnackbar=function(message){let severity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"success\";setSnackbar({open:true,message,severity});};// Fechar snackbar\nconst handleCloseSnackbar=()=>{setSnackbar({...snackbar,open:false});};// Aplicar filtros\nconst applyFilters=()=>{let result=[...studentWorkouts];// Filtrar por texto\nif(searchText){const searchLower=searchText.toLowerCase();result=result.filter(workout=>workout.studentName.toLowerCase().includes(searchLower)||workout.workoutName.toLowerCase().includes(searchLower));}// Filtrar por status\nif(activeFilter!==\"all\"){const isActive=activeFilter===\"active\";result=result.filter(workout=>workout.active===isActive);}setFilteredWorkouts(result);};// Abrir diálogo para adicionar novo treino de aluno\nconst handleAddStudentWorkout=()=>{setCurrentStudentWorkout(null);setSelectedStudentId(\"\");setObservations(\"\");setExercises([]);setNewHistoryEntry(\"\");setSelectedTabIndex(0);setShowHistory(false);setIsEditing(false);setOpenDialog(true);};// Abrir diálogo para editar treino de aluno\nconst handleEditStudentWorkout=workout=>{setCurrentStudentWorkout(workout);setSelectedStudentId(workout.studentId.toString());setObservations(workout.observations||\"\");setExercises([...workout.exercises]);setNewHistoryEntry(\"\");setSelectedTabIndex(0);setShowHistory(false);setIsEditing(true);setOpenDialog(true);};// Alternar visualização do histórico\nconst toggleHistory=workout=>{setCurrentStudentWorkout(workout);setShowHistory(true);setOpenDialog(true);};// Mudar aba no diálogo\nconst handleTabChange=(event,newValue)=>{setSelectedTabIndex(newValue);};// Adicionar entrada ao histórico\nconst handleAddHistoryEntry=()=>{if(!newHistoryEntry.trim())return;const updatedHistory=[...((currentStudentWorkout===null||currentStudentWorkout===void 0?void 0:currentStudentWorkout.history)||[]),{date:dayjs().format(\"YYYY-MM-DD\"),action:\"updated\",description:newHistoryEntry}];setCurrentStudentWorkout({...currentStudentWorkout,history:updatedHistory});setNewHistoryEntry(\"\");};// Salvar treino de aluno\nconst handleSaveStudentWorkout=()=>{// Validação\nif(!selectedStudentId||exercises.length===0){handleSnackbar(t(\"workouts.invalidWorkout\"),\"error\");return;}const student=allStudents.find(s=>s.id.toString()===selectedStudentId);if(!student){handleSnackbar(t(\"workouts.studentNotFound\"),\"error\");return;}const today=dayjs().format(\"YYYY-MM-DD\");if(isEditing){// Atualizar treino existente\nconst updatedWorkouts=studentWorkouts.map(workout=>{if(workout.id===currentStudentWorkout.id){// Adicionar entrada de histórico apenas se houver alterações\nlet updatedHistory=[...workout.history];// Verificar se houve alterações no treino\nif(JSON.stringify(workout.exercises)!==JSON.stringify(exercises)||workout.observations!==observations){updatedHistory=[...updatedHistory,{date:today,action:\"updated\",description:t(\"workouts.workoutUpdated\")}];}return{...workout,studentId:parseInt(selectedStudentId),studentName:student.name,exercises:exercises,observations:observations,history:updatedHistory,lastUpdated:today};}return workout;});setStudentWorkouts(updatedWorkouts);setFilteredWorkouts(updatedWorkouts);handleSnackbar(t(\"workouts.workoutUpdated\"));}else{// Novo treino de aluno\nconst newWorkout={id:Date.now(),studentId:parseInt(selectedStudentId),studentName:student.name,workoutName:t(\"workouts.customWorkout\"),exercises:exercises,observations:observations,history:[{date:today,action:\"created\",description:t(\"workouts.workoutCreated\")}],lastUpdated:today,active:true};const updatedWorkouts=[...studentWorkouts,newWorkout];setStudentWorkouts(updatedWorkouts);setFilteredWorkouts(updatedWorkouts);handleSnackbar(t(\"workouts.workoutAdded\"));}setOpenDialog(false);};// Aplicar template a um aluno\nconst handleApplyTemplate=template=>{if(!selectedStudentId){handleSnackbar(t(\"workouts.selectStudent\"),\"warning\");return;}setExercises([...template.exercises]);handleSnackbar(t(\"workouts.templateApplied\"));};// Alternar status do treino (ativo/inativo)\nconst toggleWorkoutStatus=workoutId=>{const updatedWorkouts=studentWorkouts.map(workout=>{if(workout.id===workoutId){const newStatus=!workout.active;// Adicionar entrada no histórico sobre a mudança de status\nconst updatedHistory=[...workout.history,{date:dayjs().format(\"YYYY-MM-DD\"),action:newStatus?\"activated\":\"deactivated\",description:newStatus?t(\"workouts.workoutActivated\"):t(\"workouts.workoutDeactivated\")}];return{...workout,active:newStatus,history:updatedHistory,lastUpdated:dayjs().format(\"YYYY-MM-DD\")};}return workout;});setStudentWorkouts(updatedWorkouts);setFilteredWorkouts(updatedWorkouts);handleSnackbar(t(\"workouts.statusUpdated\"));};// Fechar diálogo\nconst handleCloseDialog=()=>{setOpenDialog(false);setShowHistory(false);};return/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1,p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:t(\"workouts.title\")}),/*#__PURE__*/_jsx(Paper,{elevation:2,sx:{p:2,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t(\"workouts.search\"),variant:\"outlined\",value:searchText,onChange:e=>setSearchText(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"status-filter-label\",children:t(\"workouts.filterStatus\")}),/*#__PURE__*/_jsxs(Select,{labelId:\"status-filter-label\",value:activeFilter,label:t(\"workouts.filterStatus\"),onChange:e=>setActiveFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"all\",children:t(\"workouts.allStatuses\")}),/*#__PURE__*/_jsx(MenuItem,{value:\"active\",children:t(\"workouts.statusActive\")}),/*#__PURE__*/_jsx(MenuItem,{value:\"inactive\",children:t(\"workouts.statusInactive\")})]})]})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",justifyContent:\"space-between\",mb:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(LibraryBooksIcon,{}),onClick:()=>setShowTemplates(true),children:t(\"workouts.manageTemplates\")}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(FitnessCenterIcon,{}),onClick:handleAddStudentWorkout,children:t(\"workouts.addWorkout\")})]}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:filteredWorkouts.map(workout=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{elevation:3,sx:{borderLeft:6,borderColor:workout.active?\"success.main\":\"error.main\",mb:2},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",mb:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(Avatar,{sx:{bgcolor:\"primary.main\",mr:2},children:/*#__PURE__*/_jsx(PersonIcon,{})}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:workout.studentName})]}),/*#__PURE__*/_jsx(Chip,{label:workout.active?t(\"workouts.statusActive\"):t(\"workouts.statusInactive\"),color:workout.active?\"success\":\"error\",onClick:()=>toggleWorkoutStatus(workout.id)})]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"primary\",gutterBottom:true,children:workout.workoutName}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:[t(\"workouts.lastUpdated\"),\":\",\" \",dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:workout.observations||t(\"workouts.noObservations\")}),/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),children:/*#__PURE__*/_jsxs(Typography,{children:[t(\"workouts.exercises\"),\" (\",workout.exercises.length,\")\"]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(List,{dense:true,children:workout.exercises.map(exercise=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:exercise.name,secondary:`${exercise.sets}x${exercise.reps} - ${exercise.weight}kg`})},exercise.id))})})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",justifyContent:\"flex-end\",mt:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(HistoryIcon,{}),onClick:()=>toggleHistory(workout),sx:{mr:1},children:t(\"workouts.history\")}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(EditIcon,{}),onClick:()=>handleEditStudentWorkout(workout),children:t(\"workouts.edit\")})]})]})})},workout.id))}),/*#__PURE__*/_jsxs(Dialog,{open:showTemplates,onClose:()=>setShowTemplates(false),fullWidth:true,maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:t(\"workouts.templates\")}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:/*#__PURE__*/_jsx(WorkoutTemplates,{onSelectTemplate:template=>{setShowTemplates(false);handleAddStudentWorkout();setExercises([...template.exercises]);setSelectedTabIndex(1);handleSnackbar(t(\"workouts.templateApplied\"));}})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>setShowTemplates(false),children:t(\"buttons.close\")})})]}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,fullWidth:true,maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:showHistory?`${t(\"workouts.historyFor\")} ${currentStudentWorkout===null||currentStudentWorkout===void 0?void 0:currentStudentWorkout.studentName}`:isEditing?t(\"workouts.editWorkout\"):t(\"workouts.addWorkout\")}),/*#__PURE__*/_jsx(DialogContent,{dividers:true,children:showHistory?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:t(\"workouts.workoutHistory\")}),/*#__PURE__*/_jsx(List,{children:currentStudentWorkout===null||currentStudentWorkout===void 0?void 0:currentStudentWorkout.history.slice().reverse().map((entry,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(HistoryIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:`${dayjs(entry.date).format(\"DD/MM/YYYY\")} - ${t(`workouts.action${entry.action.charAt(0).toUpperCase()+entry.action.slice(1)}`)}`,secondary:entry.description})]}),/*#__PURE__*/_jsx(Divider,{variant:\"inset\",component:\"li\"})]},index))})]}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Tabs,{value:selectedTabIndex,onChange:handleTabChange,children:[/*#__PURE__*/_jsx(Tab,{label:t(\"workouts.details\")}),/*#__PURE__*/_jsx(Tab,{label:t(\"workouts.exercises\")})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,mb:2},children:[selectedTabIndex===0&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"student-select-label\",children:t(\"workouts.selectStudent\")}),/*#__PURE__*/_jsxs(Select,{labelId:\"student-select-label\",value:selectedStudentId,label:t(\"workouts.selectStudent\"),onChange:e=>setSelectedStudentId(e.target.value),disabled:isEditing,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:t(\"workouts.selectStudentPlaceholder\")}),allStudents.map(student=>/*#__PURE__*/_jsx(MenuItem,{value:student.id.toString(),children:student.name},student.id))]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t(\"workouts.observations\"),value:observations,onChange:e=>setObservations(e.target.value),multiline:true,rows:3})}),isEditing&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:t(\"workouts.addHistoryEntry\")}),/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\"},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:t(\"workouts.historyDescription\"),value:newHistoryEntry,onChange:e=>setNewHistoryEntry(e.target.value)}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleAddHistoryEntry,disabled:!newHistoryEntry.trim(),sx:{ml:1},children:t(\"buttons.add\")})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sx:{mt:2},children:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(LibraryBooksIcon,{}),onClick:()=>{setOpenDialog(false);setShowTemplates(true);},children:t(\"workouts.useTemplate\")})})]}),selectedTabIndex===1&&/*#__PURE__*/_jsx(ExerciseTable,{exercises:exercises,setExercises:setExercises})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:t(\"buttons.close\")}),!showHistory&&/*#__PURE__*/_jsx(Button,{onClick:handleSaveStudentWorkout,color:\"primary\",variant:\"contained\",disabled:!selectedStudentId||exercises.length===0,children:t(\"buttons.save\")})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:4000,onClose:handleCloseSnackbar,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnackbar,severity:snackbar.severity,sx:{width:\"100%\"},children:snackbar.message})})]});}export default StudentWorkoutList;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","Card","CardContent","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Divider","Avatar","List","ListItem","ListItemText","ListItemAvatar","InputAdornment","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","Tabs","Tab","Snackbar","Alert","Search","SearchIcon","ExpandMore","ExpandMoreIcon","FitnessCenter","FitnessCenterIcon","Person","PersonIcon","Edit","EditIcon","History","HistoryIcon","LibraryBooks","LibraryBooksIcon","useTranslation","ExerciseTable","WorkoutTemplates","dayjs","jsx","_jsx","jsxs","_jsxs","initialStudentWorkouts","id","studentId","studentName","workoutName","exercises","name","sets","weight","reps","notes","muscleGroup","history","date","action","description","lastUpdated","observations","active","allStudents","StudentWorkoutList","t","studentWorkouts","setStudentWorkouts","filteredWorkouts","setFilteredWorkouts","searchText","setSearchText","openDialog","setOpenDialog","currentStudentWorkout","setCurrentStudentWorkout","selectedTabIndex","setSelectedTabIndex","showHistory","setShowHistory","selectedStudentId","setSelectedStudentId","setObservations","setExercises","isEditing","setIsEditing","newHistoryEntry","setNewHistoryEntry","activeFilter","setActiveFilter","showTemplates","setShowTemplates","snackbar","setSnackbar","open","message","severity","applyFilters","handleSnackbar","arguments","length","undefined","handleCloseSnackbar","result","searchLower","toLowerCase","filter","workout","includes","isActive","handleAddStudentWorkout","handleEditStudentWorkout","toString","toggleHistory","handleTabChange","event","newValue","handleAddHistoryEntry","trim","updatedHistory","format","handleSaveStudentWorkout","student","find","s","today","updatedWorkouts","map","JSON","stringify","parseInt","newWorkout","Date","now","handleApplyTemplate","template","toggleWorkoutStatus","workoutId","newStatus","handleCloseDialog","sx","flexGrow","p","children","variant","component","gutterBottom","elevation","mb","container","spacing","alignItems","item","xs","md","fullWidth","label","value","onChange","e","target","InputProps","startAdornment","position","labelId","display","justifyContent","color","startIcon","onClick","borderLeft","borderColor","bgcolor","mr","expandIcon","dense","exercise","primary","secondary","mt","onClose","maxWidth","dividers","onSelectTemplate","slice","reverse","entry","index","Fragment","charAt","toUpperCase","disabled","multiline","rows","ml","autoHideDuration","anchorOrigin","vertical","horizontal","width"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/StudentWorkoutList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Chip,\n  Divider,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Tabs,\n  Tab,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport {\n  Search as SearchIcon,\n  ExpandMore as ExpandMoreIcon,\n  FitnessCenter as FitnessCenterIcon,\n  Person as PersonIcon,\n  Edit as EditIcon,\n  History as HistoryIcon,\n  LibraryBooks as LibraryBooksIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport ExerciseTable from \"./ExerciseTable\";\nimport WorkoutTemplates from \"./WorkoutTemplates\";\nimport dayjs from \"dayjs\";\n\n// Dados fictícios de alunos com treinos\nconst initialStudentWorkouts = [\n  {\n    id: 1,\n    studentId: 1,\n    studentName: \"João Silva\",\n    workoutName: \"Treino Inicial - Adaptação\",\n    exercises: [\n      {\n        id: \"sw1e1\",\n        name: \"Supino Reto\",\n        sets: \"3\",\n        weight: \"15\",\n        reps: \"12\",\n        notes: \"Movimento controlado\",\n        muscleGroup: \"chest\",\n      },\n      {\n        id: \"sw1e2\",\n        name: \"Leg Press\",\n        sets: \"3\",\n        weight: \"60\",\n        reps: \"15\",\n        notes: \"Posição neutra\",\n        muscleGroup: \"legs\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-05-10\",\n        action: \"created\",\n        description: \"Treino inicial criado\",\n      },\n      {\n        date: \"2023-06-05\",\n        action: \"updated\",\n        description: \"Aumentado peso no Leg Press de 50 para 60kg\",\n      },\n    ],\n    lastUpdated: \"2023-06-05\",\n    observations: \"Aluno iniciante com bom progresso\",\n    active: true,\n  },\n  {\n    id: 2,\n    studentId: 2,\n    studentName: \"Maria Oliveira\",\n    workoutName: \"Hipertrofia - Intermediário\",\n    exercises: [\n      {\n        id: \"sw2e1\",\n        name: \"Agachamento\",\n        sets: \"4\",\n        weight: \"65\",\n        reps: \"10\",\n        notes: \"Profundidade completa\",\n        muscleGroup: \"legs\",\n      },\n      {\n        id: \"sw2e2\",\n        name: \"Supino Inclinado\",\n        sets: \"4\",\n        weight: \"45\",\n        reps: \"8\",\n        notes: \"Foco na contração\",\n        muscleGroup: \"chest\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-04-15\",\n        action: \"created\",\n        description: \"Treino customizado criado\",\n      },\n      {\n        date: \"2023-05-20\",\n        action: \"updated\",\n        description: \"Ajustada série no Supino Inclinado\",\n      },\n    ],\n    lastUpdated: \"2023-05-20\",\n    observations:\n      \"Aluna com foco em hipertrofia, boa evolução nos últimos meses\",\n    active: true,\n  },\n];\n\n// Lista fictícia de todos os alunos\nconst allStudents = [\n  { id: 1, name: \"João Silva\" },\n  { id: 2, name: \"Maria Oliveira\" },\n  { id: 3, name: \"Carlos Santos\" },\n  { id: 4, name: \"Ana Paula Souza\" },\n  { id: 5, name: \"Roberto Mendes\" },\n];\n\nfunction StudentWorkoutList() {\n  const { t } = useTranslation();\n  const [studentWorkouts, setStudentWorkouts] = useState(\n    initialStudentWorkouts\n  );\n  const [filteredWorkouts, setFilteredWorkouts] = useState(\n    initialStudentWorkouts\n  );\n  const [searchText, setSearchText] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentStudentWorkout, setCurrentStudentWorkout] = useState(null);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedStudentId, setSelectedStudentId] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newHistoryEntry, setNewHistoryEntry] = useState(\"\");\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  const [showTemplates, setShowTemplates] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  // Aplicar filtros quando mudar texto de pesquisa\n  useEffect(() => {\n    applyFilters();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, activeFilter]);\n\n  // Abrir snackbar\n  const handleSnackbar = (message, severity = \"success\") => {\n    setSnackbar({\n      open: true,\n      message,\n      severity,\n    });\n  };\n\n  // Fechar snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false,\n    });\n  };\n\n  // Aplicar filtros\n  const applyFilters = () => {\n    let result = [...studentWorkouts];\n\n    // Filtrar por texto\n    if (searchText) {\n      const searchLower = searchText.toLowerCase();\n      result = result.filter(\n        (workout) =>\n          workout.studentName.toLowerCase().includes(searchLower) ||\n          workout.workoutName.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Filtrar por status\n    if (activeFilter !== \"all\") {\n      const isActive = activeFilter === \"active\";\n      result = result.filter((workout) => workout.active === isActive);\n    }\n\n    setFilteredWorkouts(result);\n  };\n\n  // Abrir diálogo para adicionar novo treino de aluno\n  const handleAddStudentWorkout = () => {\n    setCurrentStudentWorkout(null);\n    setSelectedStudentId(\"\");\n    setObservations(\"\");\n    setExercises([]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(false);\n    setOpenDialog(true);\n  };\n\n  // Abrir diálogo para editar treino de aluno\n  const handleEditStudentWorkout = (workout) => {\n    setCurrentStudentWorkout(workout);\n    setSelectedStudentId(workout.studentId.toString());\n    setObservations(workout.observations || \"\");\n    setExercises([...workout.exercises]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(true);\n    setOpenDialog(true);\n  };\n\n  // Alternar visualização do histórico\n  const toggleHistory = (workout) => {\n    setCurrentStudentWorkout(workout);\n    setShowHistory(true);\n    setOpenDialog(true);\n  };\n\n  // Mudar aba no diálogo\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  // Adicionar entrada ao histórico\n  const handleAddHistoryEntry = () => {\n    if (!newHistoryEntry.trim()) return;\n\n    const updatedHistory = [\n      ...(currentStudentWorkout?.history || []),\n      {\n        date: dayjs().format(\"YYYY-MM-DD\"),\n        action: \"updated\",\n        description: newHistoryEntry,\n      },\n    ];\n\n    setCurrentStudentWorkout({\n      ...currentStudentWorkout,\n      history: updatedHistory,\n    });\n\n    setNewHistoryEntry(\"\");\n  };\n\n  // Salvar treino de aluno\n  const handleSaveStudentWorkout = () => {\n    // Validação\n    if (!selectedStudentId || exercises.length === 0) {\n      handleSnackbar(t(\"workouts.invalidWorkout\"), \"error\");\n      return;\n    }\n\n    const student = allStudents.find(\n      (s) => s.id.toString() === selectedStudentId\n    );\n\n    if (!student) {\n      handleSnackbar(t(\"workouts.studentNotFound\"), \"error\");\n      return;\n    }\n\n    const today = dayjs().format(\"YYYY-MM-DD\");\n\n    if (isEditing) {\n      // Atualizar treino existente\n      const updatedWorkouts = studentWorkouts.map((workout) => {\n        if (workout.id === currentStudentWorkout.id) {\n          // Adicionar entrada de histórico apenas se houver alterações\n          let updatedHistory = [...workout.history];\n\n          // Verificar se houve alterações no treino\n          if (\n            JSON.stringify(workout.exercises) !== JSON.stringify(exercises) ||\n            workout.observations !== observations\n          ) {\n            updatedHistory = [\n              ...updatedHistory,\n              {\n                date: today,\n                action: \"updated\",\n                description: t(\"workouts.workoutUpdated\"),\n              },\n            ];\n          }\n\n          return {\n            ...workout,\n            studentId: parseInt(selectedStudentId),\n            studentName: student.name,\n            exercises: exercises,\n            observations: observations,\n            history: updatedHistory,\n            lastUpdated: today,\n          };\n        }\n        return workout;\n      });\n\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutUpdated\"));\n    } else {\n      // Novo treino de aluno\n      const newWorkout = {\n        id: Date.now(),\n        studentId: parseInt(selectedStudentId),\n        studentName: student.name,\n        workoutName: t(\"workouts.customWorkout\"),\n        exercises: exercises,\n        observations: observations,\n        history: [\n          {\n            date: today,\n            action: \"created\",\n            description: t(\"workouts.workoutCreated\"),\n          },\n        ],\n        lastUpdated: today,\n        active: true,\n      };\n\n      const updatedWorkouts = [...studentWorkouts, newWorkout];\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutAdded\"));\n    }\n\n    setOpenDialog(false);\n  };\n\n  // Aplicar template a um aluno\n  const handleApplyTemplate = (template) => {\n    if (!selectedStudentId) {\n      handleSnackbar(t(\"workouts.selectStudent\"), \"warning\");\n      return;\n    }\n\n    setExercises([...template.exercises]);\n    handleSnackbar(t(\"workouts.templateApplied\"));\n  };\n\n  // Alternar status do treino (ativo/inativo)\n  const toggleWorkoutStatus = (workoutId) => {\n    const updatedWorkouts = studentWorkouts.map((workout) => {\n      if (workout.id === workoutId) {\n        const newStatus = !workout.active;\n\n        // Adicionar entrada no histórico sobre a mudança de status\n        const updatedHistory = [\n          ...workout.history,\n          {\n            date: dayjs().format(\"YYYY-MM-DD\"),\n            action: newStatus ? \"activated\" : \"deactivated\",\n            description: newStatus\n              ? t(\"workouts.workoutActivated\")\n              : t(\"workouts.workoutDeactivated\"),\n          },\n        ];\n\n        return {\n          ...workout,\n          active: newStatus,\n          history: updatedHistory,\n          lastUpdated: dayjs().format(\"YYYY-MM-DD\"),\n        };\n      }\n      return workout;\n    });\n\n    setStudentWorkouts(updatedWorkouts);\n    setFilteredWorkouts(updatedWorkouts);\n    handleSnackbar(t(\"workouts.statusUpdated\"));\n  };\n\n  // Fechar diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setShowHistory(false);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        {t(\"workouts.title\")}\n      </Typography>\n\n      {/* Filtros de pesquisa */}\n      <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={8}>\n            <TextField\n              fullWidth\n              label={t(\"workouts.search\")}\n              variant=\"outlined\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <FormControl fullWidth>\n              <InputLabel id=\"status-filter-label\">\n                {t(\"workouts.filterStatus\")}\n              </InputLabel>\n              <Select\n                labelId=\"status-filter-label\"\n                value={activeFilter}\n                label={t(\"workouts.filterStatus\")}\n                onChange={(e) => setActiveFilter(e.target.value)}\n              >\n                <MenuItem value=\"all\">{t(\"workouts.allStatuses\")}</MenuItem>\n                <MenuItem value=\"active\">{t(\"workouts.statusActive\")}</MenuItem>\n                <MenuItem value=\"inactive\">\n                  {t(\"workouts.statusInactive\")}\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Botões para adicionar treino e gerenciar modelos */}\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mb: 2 }}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          startIcon={<LibraryBooksIcon />}\n          onClick={() => setShowTemplates(true)}\n        >\n          {t(\"workouts.manageTemplates\")}\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FitnessCenterIcon />}\n          onClick={handleAddStudentWorkout}\n        >\n          {t(\"workouts.addWorkout\")}\n        </Button>\n      </Box>\n\n      {/* Lista de treinos dos alunos */}\n      <Grid container spacing={3}>\n        {filteredWorkouts.map((workout) => (\n          <Grid item xs={12} md={6} key={workout.id}>\n            <Card\n              elevation={3}\n              sx={{\n                borderLeft: 6,\n                borderColor: workout.active ? \"success.main\" : \"error.main\",\n                mb: 2,\n              }}\n            >\n              <CardContent>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    mb: 1,\n                  }}\n                >\n                  <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <Avatar sx={{ bgcolor: \"primary.main\", mr: 2 }}>\n                      <PersonIcon />\n                    </Avatar>\n                    <Typography variant=\"h6\">{workout.studentName}</Typography>\n                  </Box>\n                  <Chip\n                    label={\n                      workout.active\n                        ? t(\"workouts.statusActive\")\n                        : t(\"workouts.statusInactive\")\n                    }\n                    color={workout.active ? \"success\" : \"error\"}\n                    onClick={() => toggleWorkoutStatus(workout.id)}\n                  />\n                </Box>\n\n                <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\n                  {workout.workoutName}\n                </Typography>\n\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t(\"workouts.lastUpdated\")}:{\" \"}\n                  {dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")}\n                </Typography>\n\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  {workout.observations || t(\"workouts.noObservations\")}\n                </Typography>\n\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>\n                      {t(\"workouts.exercises\")} ({workout.exercises.length})\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <List dense>\n                      {workout.exercises.map((exercise) => (\n                        <ListItem key={exercise.id}>\n                          <ListItemText\n                            primary={exercise.name}\n                            secondary={`${exercise.sets}x${exercise.reps} - ${exercise.weight}kg`}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </AccordionDetails>\n                </Accordion>\n\n                <Box\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<HistoryIcon />}\n                    onClick={() => toggleHistory(workout)}\n                    sx={{ mr: 1 }}\n                  >\n                    {t(\"workouts.history\")}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<EditIcon />}\n                    onClick={() => handleEditStudentWorkout(workout)}\n                  >\n                    {t(\"workouts.edit\")}\n                  </Button>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Modal de gerenciamento de modelos de treino */}\n      <Dialog\n        open={showTemplates}\n        onClose={() => setShowTemplates(false)}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle>{t(\"workouts.templates\")}</DialogTitle>\n        <DialogContent dividers>\n          <WorkoutTemplates\n            onSelectTemplate={(template) => {\n              setShowTemplates(false);\n              handleAddStudentWorkout();\n              setExercises([...template.exercises]);\n              setSelectedTabIndex(1);\n              handleSnackbar(t(\"workouts.templateApplied\"));\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowTemplates(false)}>\n            {t(\"buttons.close\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Modal para adicionar/editar treino */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle>\n          {showHistory\n            ? `${t(\"workouts.historyFor\")} ${\n                currentStudentWorkout?.studentName\n              }`\n            : isEditing\n            ? t(\"workouts.editWorkout\")\n            : t(\"workouts.addWorkout\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          {showHistory ? (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                {t(\"workouts.workoutHistory\")}\n              </Typography>\n              <List>\n                {currentStudentWorkout?.history\n                  .slice()\n                  .reverse()\n                  .map((entry, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                          <Avatar>\n                            <HistoryIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={`${dayjs(entry.date).format(\n                            \"DD/MM/YYYY\"\n                          )} - ${t(\n                            `workouts.action${\n                              entry.action.charAt(0).toUpperCase() +\n                              entry.action.slice(1)\n                            }`\n                          )}`}\n                          secondary={entry.description}\n                        />\n                      </ListItem>\n                      <Divider variant=\"inset\" component=\"li\" />\n                    </React.Fragment>\n                  ))}\n              </List>\n            </Box>\n          ) : (\n            <Box>\n              <Tabs value={selectedTabIndex} onChange={handleTabChange}>\n                <Tab label={t(\"workouts.details\")} />\n                <Tab label={t(\"workouts.exercises\")} />\n              </Tabs>\n\n              <Box sx={{ mt: 2, mb: 2 }}>\n                {selectedTabIndex === 0 && (\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                      <FormControl fullWidth>\n                        <InputLabel id=\"student-select-label\">\n                          {t(\"workouts.selectStudent\")}\n                        </InputLabel>\n                        <Select\n                          labelId=\"student-select-label\"\n                          value={selectedStudentId}\n                          label={t(\"workouts.selectStudent\")}\n                          onChange={(e) => setSelectedStudentId(e.target.value)}\n                          disabled={isEditing}\n                        >\n                          <MenuItem value=\"\">\n                            {t(\"workouts.selectStudentPlaceholder\")}\n                          </MenuItem>\n                          {allStudents.map((student) => (\n                            <MenuItem\n                              key={student.id}\n                              value={student.id.toString()}\n                            >\n                              {student.name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        label={t(\"workouts.observations\")}\n                        value={observations}\n                        onChange={(e) => setObservations(e.target.value)}\n                        multiline\n                        rows={3}\n                      />\n                    </Grid>\n\n                    {isEditing && (\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          {t(\"workouts.addHistoryEntry\")}\n                        </Typography>\n                        <Box sx={{ display: \"flex\" }}>\n                          <TextField\n                            fullWidth\n                            label={t(\"workouts.historyDescription\")}\n                            value={newHistoryEntry}\n                            onChange={(e) => setNewHistoryEntry(e.target.value)}\n                          />\n                          <Button\n                            variant=\"contained\"\n                            onClick={handleAddHistoryEntry}\n                            disabled={!newHistoryEntry.trim()}\n                            sx={{ ml: 1 }}\n                          >\n                            {t(\"buttons.add\")}\n                          </Button>\n                        </Box>\n                      </Grid>\n                    )}\n\n                    <Grid item xs={12} sx={{ mt: 2 }}>\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        startIcon={<LibraryBooksIcon />}\n                        onClick={() => {\n                          setOpenDialog(false);\n                          setShowTemplates(true);\n                        }}\n                      >\n                        {t(\"workouts.useTemplate\")}\n                      </Button>\n                    </Grid>\n                  </Grid>\n                )}\n\n                {selectedTabIndex === 1 && (\n                  <ExerciseTable\n                    exercises={exercises}\n                    setExercises={setExercises}\n                  />\n                )}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>{t(\"buttons.close\")}</Button>\n          {!showHistory && (\n            <Button\n              onClick={handleSaveStudentWorkout}\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!selectedStudentId || exercises.length === 0}\n            >\n              {t(\"buttons.save\")}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar para mensagens */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default StudentWorkoutList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}