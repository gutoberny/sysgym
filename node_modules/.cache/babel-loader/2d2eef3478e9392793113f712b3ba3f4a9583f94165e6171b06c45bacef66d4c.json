{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Paper, Button, Grid, Card, FormControl, InputLabel, Select, MenuItem, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Divider } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { BarChart, PieChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { Assessment as AssessmentIcon, BarChart as BarChartIcon, PieChart as PieChartIcon, AttachMoney as AttachMoneyIcon, PriceCheck as PriceCheckIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport { transactions, incomeCategories, expenseCategories, transactionStatus, paymentMethods, getCategoryName, getPaymentMethodName, getStatusName, getStatusColor } from \"../data/financialData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n\n  // Estado para o relatório selecionado\n  const [selectedReport, setSelectedReport] = useState(\"income-expense\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para formatar valores monetários\n  const formatCurrency = value => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach(transaction => {\n      if (!transaction || !transaction.date) return;\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n      const month = date.month();\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (transaction.type === \"expense\" && transaction.status === \"paid\") {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: []\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0]\n        }\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(transaction => (transaction === null || transaction === void 0 ? void 0 : transaction.type) === \"income\" && ((transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"pending\" || (transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"overdue\"));\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce((total, transaction) => total + ((transaction === null || transaction === void 0 ? void 0 : transaction.amount) || 0), 0);\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"pending\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n    const overdueAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"overdue\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach(transaction => {\n      if (!(transaction !== null && transaction !== void 0 && transaction.dueDate)) return;\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount]\n      }\n    };\n  };\n\n  // Renderiza o relatório de receitas e despesas\n  const renderIncomeExpenseReport = () => {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [t(\"reports.incomeExpenseTitle\", \"Receitas e Despesas\"), \" (\", reportYear, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          display: \"flex\",\n          gap: 2,\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            minWidth: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: t(\"reports.period\", \"Período\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: reportPeriod,\n            onChange: e => setReportPeriod(e.target.value),\n            label: t(\"reports.period\", \"Período\"),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"current_month\",\n              children: t(\"reports.currentMonth\", \"Mês Atual\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"previous_month\",\n              children: t(\"reports.previousMonth\", \"Mês Anterior\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"current_year\",\n              children: t(\"reports.currentYear\", \"Ano Atual\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"custom\",\n              children: t(\"reports.custom\", \"Personalizado\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), reportPeriod === \"custom\" && /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          adapterLocale: \"pt-br\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            views: [\"year\"],\n            label: t(\"reports.year\", \"Ano\"),\n            value: dayjs().year(reportYear),\n            onChange: newValue => setReportYear(newValue ? newValue.year() : dayjs().year()),\n            slotProps: {\n              textField: {\n                size: \"small\",\n                sx: {\n                  minWidth: 120\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 400,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          series: [{\n            data: getIncomeExpenseData().income,\n            label: t(\"reports.incomeExpense\", \"Receitas\"),\n            color: \"#4caf50\",\n            valueFormatter: value => formatCurrency(value)\n          }, {\n            data: getIncomeExpenseData().expense,\n            label: t(\"workouts.expenses\", \"Despesas\"),\n            color: \"#f44336\",\n            valueFormatter: value => formatCurrency(value)\n          }],\n          xAxis: [{\n            data: [t(\"reports.months.jan\", \"Jan\"), t(\"reports.months.feb\", \"Fev\"), t(\"reports.months.mar\", \"Mar\"), t(\"reports.months.apr\", \"Abr\"), t(\"reports.months.may\", \"Mai\"), t(\"reports.months.jun\", \"Jun\"), t(\"reports.months.jul\", \"Jul\"), t(\"reports.months.aug\", \"Ago\"), t(\"reports.months.sep\", \"Set\"), t(\"reports.months.oct\", \"Out\"), t(\"reports.months.nov\", \"Nov\"), t(\"reports.months.dec\", \"Dez\")],\n            scaleType: \"band\"\n          }],\n          height: 300\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: t(\"reports.annualSummary\", \"Resumo Anual\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  bgcolor: \"#4caf5020\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: t(\"reports.totalIncome\", \"Total de Receitas\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: formatCurrency(getIncomeExpenseData().income.reduce((a, b) => a + b, 0))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  bgcolor: \"#f4433620\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: t(\"reports.totalExpense\", \"Total de Despesas\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: formatCurrency(getIncomeExpenseData().expense.reduce((a, b) => a + b, 0))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2,\n                  bgcolor: \"#2196f320\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: t(\"reports.balance\", \"Saldo\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: formatCurrency(getIncomeExpenseData().income.reduce((a, b) => a + b, 0) - getIncomeExpenseData().expense.reduce((a, b) => a + b, 0))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Renderiza o relatório de inadimplência\n  const renderDelinquencyReport = () => {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: t(\"reports.delinquencyTitle\", \"Relatório de Inadimplência\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: t(\"reports.pendingValuesByStatus\", \"Valores Pendentes por Status\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                series: [{\n                  data: [{\n                    id: 0,\n                    value: getDelinquencyData().byStatus.data[0],\n                    label: t(\"reports.pending\", \"Pendente\"),\n                    color: \"#ff9800\"\n                  }, {\n                    id: 1,\n                    value: getDelinquencyData().byStatus.data[1],\n                    label: t(\"reports.overdue\", \"Atrasado\"),\n                    color: \"#f44336\"\n                  }],\n                  valueFormatter: value => formatCurrency(value)\n                }],\n                height: 250\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: t(\"reports.delinquencySummary\", \"Resumo de Inadimplência\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        p: 2,\n                        bgcolor: \"#f4433620\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: t(\"reports.totalPending\", \"Total Pendente\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: formatCurrency(getDelinquencyData().total)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        p: 2,\n                        bgcolor: \"#ff980020\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: t(\"reports.pendingMembershipsCount\", \"Quantidade de Mensalidades Pendentes\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: getDelinquencyData().count\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: t(\"reports.pendingValuesByMonth\", \"Valores Pendentes por Mês de Vencimento\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), getDelinquencyData().byMonth.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              series: [{\n                data: getDelinquencyData().byMonth.data,\n                label: t(\"reports.totalPending\", \"Valor Pendente\"),\n                color: \"#f44336\",\n                valueFormatter: value => formatCurrency(value)\n              }],\n              xAxis: [{\n                data: getDelinquencyData().byMonth.labels,\n                scaleType: \"band\"\n              }],\n              height: 250\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontStyle: \"italic\",\n              mt: 2\n            },\n            children: t(\"reports.noPendingData\", \"Não há dados pendentes para exibir.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        gutterBottom: true,\n        children: t(\"reports.title\", \"Relatórios\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: t(\"reports.subtitle\", \"Selecione um relatório para visualizar informações detalhadas\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"relat\\xF3rios dispon\\xEDveis\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                selected: selectedReport === \"income-expense\",\n                onClick: () => setSelectedReport(\"income-expense\"),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(BarChartIcon, {\n                    color: selectedReport === \"income-expense\" ? \"primary\" : \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.incomeExpense\", \"Receitas e Despesas\"),\n                  primaryTypographyProps: {\n                    fontWeight: selectedReport === \"income-expense\" ? \"bold\" : \"normal\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                selected: selectedReport === \"delinquency\",\n                onClick: () => setSelectedReport(\"delinquency\"),\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(PieChartIcon, {\n                    color: selectedReport === \"delinquency\" ? \"primary\" : \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.delinquency\", \"Inadimplência\"),\n                  primaryTypographyProps: {\n                    fontWeight: selectedReport === \"delinquency\" ? \"bold\" : \"normal\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"overline\",\n              sx: {\n                pl: 2,\n                opacity: 0.7\n              },\n              children: t(\"common.comingSoon\", \"Em breve\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {\n                    color: \"disabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.cashFlow\", \"Fluxo de Caixa\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                disabled: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(PriceCheckIcon, {\n                    color: \"disabled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: t(\"reports.studentRevenue\", \"Faturamento por Aluno\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: [selectedReport === \"income-expense\" && renderIncomeExpenseReport(), selectedReport === \"delinquency\" && renderDelinquencyReport()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\n_s(Reports, \"r5C3x2lpKI1VVBfTF7J86cyoqp4=\", false, function () {\n  return [useTranslation];\n});\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Button","Grid","Card","FormControl","InputLabel","Select","MenuItem","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Divider","DatePicker","AdapterDayjs","LocalizationProvider","BarChart","PieChart","dayjs","Assessment","AssessmentIcon","BarChartIcon","PieChartIcon","AttachMoney","AttachMoneyIcon","PriceCheck","PriceCheckIcon","useTranslation","transactions","incomeCategories","expenseCategories","transactionStatus","paymentMethods","getCategoryName","getPaymentMethodName","getStatusName","getStatusColor","jsxDEV","_jsxDEV","Reports","_s","t","selectedReport","setSelectedReport","allTransactions","setAllTransactions","reportPeriod","setReportPeriod","reportYear","setReportYear","year","reportMonth","setReportMonth","month","formatCurrency","value","Intl","NumberFormat","style","currency","format","getIncomeExpenseData","Array","isArray","length","income","expense","incomeByMonth","fill","expenseByMonth","forEach","transaction","date","type","status","amount","getDelinquencyData","total","count","byMonth","labels","data","byStatus","delinquentTransactions","filter","totalAmount","reduce","pendingAmount","overdueAmount","monthMap","Map","dueDate","monthYear","current","get","set","monthLabels","from","keys","monthData","values","renderIncomeExpenseReport","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","gap","alignItems","size","minWidth","onChange","e","target","label","dateAdapter","adapterLocale","views","newValue","slotProps","textField","height","width","series","color","valueFormatter","xAxis","scaleType","mt","container","spacing","item","xs","sm","bgcolor","a","b","renderDelinquencyReport","id","fontStyle","component","md","disablePadding","selected","onClick","primary","primaryTypographyProps","fontWeight","my","pl","opacity","disabled","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/Reports.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  Grid,\n  Card,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { BarChart, PieChart } from \"@mui/x-charts\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport {\n  Assessment as AssessmentIcon,\n  BarChart as BarChartIcon,\n  PieChart as PieChartIcon,\n  AttachMoney as AttachMoneyIcon,\n  PriceCheck as PriceCheckIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  transactions,\n  incomeCategories,\n  expenseCategories,\n  transactionStatus,\n  paymentMethods,\n  getCategoryName,\n  getPaymentMethodName,\n  getStatusName,\n  getStatusColor,\n} from \"../data/financialData\";\n\nfunction Reports() {\n  const { t } = useTranslation();\n\n  // Estado para o relatório selecionado\n  const [selectedReport, setSelectedReport] = useState(\"income-expense\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para formatar valores monetários\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(value);\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach((transaction) => {\n      if (!transaction || !transaction.date) return;\n\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n\n      const month = date.month();\n\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (\n        transaction.type === \"expense\" &&\n        transaction.status === \"paid\"\n      ) {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth,\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: [],\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0],\n        },\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(\n      (transaction) =>\n        transaction?.type === \"income\" &&\n        (transaction?.status === \"pending\" || transaction?.status === \"overdue\")\n    );\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce(\n      (total, transaction) => total + (transaction?.amount || 0),\n      0\n    );\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions\n      .filter((t) => t?.status === \"pending\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    const overdueAmount = delinquentTransactions\n      .filter((t) => t?.status === \"overdue\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach((transaction) => {\n      if (!transaction?.dueDate) return;\n\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData,\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount],\n      },\n    };\n  };\n\n  // Renderiza o relatório de receitas e despesas\n  const renderIncomeExpenseReport = () => {\n    return (\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {t(\"reports.incomeExpenseTitle\", \"Receitas e Despesas\")} ({reportYear}\n          )\n        </Typography>\n\n        {/* Seleção de período */}\n        <Box sx={{ mb: 3, display: \"flex\", gap: 2, alignItems: \"center\" }}>\n          <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 200 }}>\n            <InputLabel>{t(\"reports.period\", \"Período\")}</InputLabel>\n            <Select\n              value={reportPeriod}\n              onChange={(e) => setReportPeriod(e.target.value)}\n              label={t(\"reports.period\", \"Período\")}\n            >\n              <MenuItem value=\"current_month\">\n                {t(\"reports.currentMonth\", \"Mês Atual\")}\n              </MenuItem>\n              <MenuItem value=\"previous_month\">\n                {t(\"reports.previousMonth\", \"Mês Anterior\")}\n              </MenuItem>\n              <MenuItem value=\"current_year\">\n                {t(\"reports.currentYear\", \"Ano Atual\")}\n              </MenuItem>\n              <MenuItem value=\"custom\">\n                {t(\"reports.custom\", \"Personalizado\")}\n              </MenuItem>\n            </Select>\n          </FormControl>\n\n          {reportPeriod === \"custom\" && (\n            <LocalizationProvider\n              dateAdapter={AdapterDayjs}\n              adapterLocale=\"pt-br\"\n            >\n              <DatePicker\n                views={[\"year\"]}\n                label={t(\"reports.year\", \"Ano\")}\n                value={dayjs().year(reportYear)}\n                onChange={(newValue) =>\n                  setReportYear(newValue ? newValue.year() : dayjs().year())\n                }\n                slotProps={{\n                  textField: {\n                    size: \"small\",\n                    sx: { minWidth: 120 },\n                  },\n                }}\n              />\n            </LocalizationProvider>\n          )}\n        </Box>\n\n        {/* Gráfico de Receitas e Despesas */}\n        <Box sx={{ height: 400, width: \"100%\" }}>\n          <BarChart\n            series={[\n              {\n                data: getIncomeExpenseData().income,\n                label: t(\"reports.incomeExpense\", \"Receitas\"),\n                color: \"#4caf50\",\n                valueFormatter: (value) => formatCurrency(value),\n              },\n              {\n                data: getIncomeExpenseData().expense,\n                label: t(\"workouts.expenses\", \"Despesas\"),\n                color: \"#f44336\",\n                valueFormatter: (value) => formatCurrency(value),\n              },\n            ]}\n            xAxis={[\n              {\n                data: [\n                  t(\"reports.months.jan\", \"Jan\"),\n                  t(\"reports.months.feb\", \"Fev\"),\n                  t(\"reports.months.mar\", \"Mar\"),\n                  t(\"reports.months.apr\", \"Abr\"),\n                  t(\"reports.months.may\", \"Mai\"),\n                  t(\"reports.months.jun\", \"Jun\"),\n                  t(\"reports.months.jul\", \"Jul\"),\n                  t(\"reports.months.aug\", \"Ago\"),\n                  t(\"reports.months.sep\", \"Set\"),\n                  t(\"reports.months.oct\", \"Out\"),\n                  t(\"reports.months.nov\", \"Nov\"),\n                  t(\"reports.months.dec\", \"Dez\"),\n                ],\n                scaleType: \"band\",\n              },\n            ]}\n            height={300}\n          />\n        </Box>\n\n        {/* Tabela de resumo */}\n        <Box sx={{ mt: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            {t(\"reports.annualSummary\", \"Resumo Anual\")}\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={4}>\n              <Card>\n                <Box sx={{ p: 2, bgcolor: \"#4caf5020\" }}>\n                  <Typography variant=\"subtitle2\">\n                    {t(\"reports.totalIncome\", \"Total de Receitas\")}\n                  </Typography>\n                  <Typography variant=\"h5\">\n                    {formatCurrency(\n                      getIncomeExpenseData().income.reduce((a, b) => a + b, 0)\n                    )}\n                  </Typography>\n                </Box>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Card>\n                <Box sx={{ p: 2, bgcolor: \"#f4433620\" }}>\n                  <Typography variant=\"subtitle2\">\n                    {t(\"reports.totalExpense\", \"Total de Despesas\")}\n                  </Typography>\n                  <Typography variant=\"h5\">\n                    {formatCurrency(\n                      getIncomeExpenseData().expense.reduce((a, b) => a + b, 0)\n                    )}\n                  </Typography>\n                </Box>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Card>\n                <Box sx={{ p: 2, bgcolor: \"#2196f320\" }}>\n                  <Typography variant=\"subtitle2\">\n                    {t(\"reports.balance\", \"Saldo\")}\n                  </Typography>\n                  <Typography variant=\"h5\">\n                    {formatCurrency(\n                      getIncomeExpenseData().income.reduce((a, b) => a + b, 0) -\n                        getIncomeExpenseData().expense.reduce(\n                          (a, b) => a + b,\n                          0\n                        )\n                    )}\n                  </Typography>\n                </Box>\n              </Card>\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    );\n  };\n\n  // Renderiza o relatório de inadimplência\n  const renderDelinquencyReport = () => {\n    return (\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          {t(\"reports.delinquencyTitle\", \"Relatório de Inadimplência\")}\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t(\n                  \"reports.pendingValuesByStatus\",\n                  \"Valores Pendentes por Status\"\n                )}\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                <PieChart\n                  series={[\n                    {\n                      data: [\n                        {\n                          id: 0,\n                          value: getDelinquencyData().byStatus.data[0],\n                          label: t(\"reports.pending\", \"Pendente\"),\n                          color: \"#ff9800\",\n                        },\n                        {\n                          id: 1,\n                          value: getDelinquencyData().byStatus.data[1],\n                          label: t(\"reports.overdue\", \"Atrasado\"),\n                          color: \"#f44336\",\n                        },\n                      ],\n                      valueFormatter: (value) => formatCurrency(value),\n                    },\n                  ]}\n                  height={250}\n                />\n              </Box>\n            </Box>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                {t(\"reports.delinquencySummary\", \"Resumo de Inadimplência\")}\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <Card>\n                      <Box sx={{ p: 2, bgcolor: \"#f4433620\" }}>\n                        <Typography variant=\"subtitle2\">\n                          {t(\"reports.totalPending\", \"Total Pendente\")}\n                        </Typography>\n                        <Typography variant=\"h5\">\n                          {formatCurrency(getDelinquencyData().total)}\n                        </Typography>\n                      </Box>\n                    </Card>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Card>\n                      <Box sx={{ p: 2, bgcolor: \"#ff980020\" }}>\n                        <Typography variant=\"subtitle2\">\n                          {t(\n                            \"reports.pendingMembershipsCount\",\n                            \"Quantidade de Mensalidades Pendentes\"\n                          )}\n                        </Typography>\n                        <Typography variant=\"h5\">\n                          {getDelinquencyData().count}\n                        </Typography>\n                      </Box>\n                    </Card>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {t(\n                \"reports.pendingValuesByMonth\",\n                \"Valores Pendentes por Mês de Vencimento\"\n              )}\n            </Typography>\n            {getDelinquencyData().byMonth.labels.length > 0 ? (\n              <Box sx={{ height: 300 }}>\n                <BarChart\n                  series={[\n                    {\n                      data: getDelinquencyData().byMonth.data,\n                      label: t(\"reports.totalPending\", \"Valor Pendente\"),\n                      color: \"#f44336\",\n                      valueFormatter: (value) => formatCurrency(value),\n                    },\n                  ]}\n                  xAxis={[\n                    {\n                      data: getDelinquencyData().byMonth.labels,\n                      scaleType: \"band\",\n                    },\n                  ]}\n                  height={250}\n                />\n              </Box>\n            ) : (\n              <Typography variant=\"body2\" sx={{ fontStyle: \"italic\", mt: 2 }}>\n                {t(\n                  \"reports.noPendingData\",\n                  \"Não há dados pendentes para exibir.\"\n                )}\n              </Typography>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          {t(\"reports.title\", \"Relatórios\")}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {t(\n            \"reports.subtitle\",\n            \"Selecione um relatório para visualizar informações detalhadas\"\n          )}\n        </Typography>\n      </Paper>\n\n      <Grid container spacing={3}>\n        {/* Menu lateral de relatórios */}\n        <Grid item xs={12} md={3}>\n          <Paper sx={{ width: \"100%\" }}>\n            <List component=\"nav\" aria-label=\"relatórios disponíveis\">\n              <ListItem disablePadding>\n                <ListItemButton\n                  selected={selectedReport === \"income-expense\"}\n                  onClick={() => setSelectedReport(\"income-expense\")}\n                >\n                  <ListItemIcon>\n                    <BarChartIcon\n                      color={\n                        selectedReport === \"income-expense\"\n                          ? \"primary\"\n                          : \"inherit\"\n                      }\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.incomeExpense\", \"Receitas e Despesas\")}\n                    primaryTypographyProps={{\n                      fontWeight:\n                        selectedReport === \"income-expense\" ? \"bold\" : \"normal\",\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <ListItem disablePadding>\n                <ListItemButton\n                  selected={selectedReport === \"delinquency\"}\n                  onClick={() => setSelectedReport(\"delinquency\")}\n                >\n                  <ListItemIcon>\n                    <PieChartIcon\n                      color={\n                        selectedReport === \"delinquency\" ? \"primary\" : \"inherit\"\n                      }\n                    />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.delinquency\", \"Inadimplência\")}\n                    primaryTypographyProps={{\n                      fontWeight:\n                        selectedReport === \"delinquency\" ? \"bold\" : \"normal\",\n                    }}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <Divider sx={{ my: 1 }} />\n              <Typography variant=\"overline\" sx={{ pl: 2, opacity: 0.7 }}>\n                {t(\"common.comingSoon\", \"Em breve\")}\n              </Typography>\n\n              <ListItem disablePadding>\n                <ListItemButton disabled>\n                  <ListItemIcon>\n                    <AttachMoneyIcon color=\"disabled\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\"reports.cashFlow\", \"Fluxo de Caixa\")}\n                  />\n                </ListItemButton>\n              </ListItem>\n\n              <ListItem disablePadding>\n                <ListItemButton disabled>\n                  <ListItemIcon>\n                    <PriceCheckIcon color=\"disabled\" />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={t(\n                      \"reports.studentRevenue\",\n                      \"Faturamento por Aluno\"\n                    )}\n                  />\n                </ListItemButton>\n              </ListItem>\n            </List>\n          </Paper>\n        </Grid>\n\n        {/* Área de conteúdo do relatório */}\n        <Grid item xs={12} md={9}>\n          {selectedReport === \"income-expense\" && renderIncomeExpenseReport()}\n          {selectedReport === \"delinquency\" && renderDelinquencyReport()}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}