{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/features/workout/components/StudentWorkoutList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Paper, Grid, Card, CardContent, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, Chip, Divider, Avatar, List, ListItem, ListItemText, ListItemAvatar, InputAdornment, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, Tabs, Tab, Snackbar, Alert } from \"@mui/material\";\nimport { Search as SearchIcon, ExpandMore as ExpandMoreIcon, FitnessCenter as FitnessCenterIcon, Person as PersonIcon, Edit as EditIcon, History as HistoryIcon, LibraryBooks as LibraryBooksIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport ExerciseTable from \"./ExerciseTable\";\nimport WorkoutTemplates from \"./WorkoutTemplates\";\nimport dayjs from \"dayjs\";\n\n// Dados fictícios de alunos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allStudents = [{\n  id: 1,\n  name: \"João Silva\",\n  active: true\n}, {\n  id: 2,\n  name: \"Maria Santos\",\n  active: true\n}, {\n  id: 3,\n  name: \"Pedro Oliveira\",\n  active: false\n}, {\n  id: 4,\n  name: \"Ana Costa\",\n  active: true\n}, {\n  id: 5,\n  name: \"Lucas Souza\",\n  active: true\n}];\n\n// Dados fictícios de treinos\nconst initialWorkouts = [{\n  id: 1,\n  studentId: 1,\n  studentName: \"João Silva\",\n  workoutName: \"Treino A - Hipertrofia\",\n  exercises: [{\n    id: \"w1e1\",\n    name: \"Supino Reto\",\n    sets: \"4\",\n    weight: \"70\",\n    reps: \"10\",\n    notes: \"Descanso: 90 segundos\",\n    muscleGroup: \"chest\"\n  }, {\n    id: \"w1e2\",\n    name: \"Puxada Frontal\",\n    sets: \"4\",\n    weight: \"60\",\n    reps: \"12\",\n    notes: \"Pegada aberta\",\n    muscleGroup: \"back\"\n  }, {\n    id: \"w1e3\",\n    name: \"Agachamento\",\n    sets: \"4\",\n    weight: \"80\",\n    reps: \"10\",\n    notes: \"Profundidade completa\",\n    muscleGroup: \"legs\"\n  }],\n  history: [{\n    date: \"2023-08-01\",\n    action: \"created\",\n    description: \"Treino inicial criado\"\n  }, {\n    date: \"2023-08-15\",\n    action: \"updated\",\n    description: \"Ajuste de cargas\"\n  }],\n  lastUpdated: \"2023-08-15\",\n  observations: \"Aluno relatou dor no joelho, cuidado com agachamentos profundos.\",\n  active: true\n}, {\n  id: 2,\n  studentId: 2,\n  studentName: \"Maria Santos\",\n  workoutName: \"Treino Full Body\",\n  exercises: [{\n    id: \"w2e1\",\n    name: \"Desenvolvimento\",\n    sets: \"3\",\n    weight: \"20\",\n    reps: \"12\",\n    notes: \"\",\n    muscleGroup: \"shoulders\"\n  }, {\n    id: \"w2e2\",\n    name: \"Leg Press\",\n    sets: \"3\",\n    weight: \"120\",\n    reps: \"15\",\n    notes: \"Pés afastados\",\n    muscleGroup: \"legs\"\n  }, {\n    id: \"w2e3\",\n    name: \"Rosca Direta\",\n    sets: \"3\",\n    weight: \"15\",\n    reps: \"12\",\n    notes: \"\",\n    muscleGroup: \"biceps\"\n  }],\n  history: [{\n    date: \"2023-07-28\",\n    action: \"created\",\n    description: \"Treino inicial criado\"\n  }],\n  lastUpdated: \"2023-07-28\",\n  observations: \"\",\n  active: true\n}, {\n  id: 3,\n  studentId: 3,\n  studentName: \"Pedro Oliveira\",\n  workoutName: \"Treino de Reabilitação\",\n  exercises: [{\n    id: \"w3e1\",\n    name: \"Elevação Lateral\",\n    sets: \"3\",\n    weight: \"5\",\n    reps: \"15\",\n    notes: \"Movimento controlado\",\n    muscleGroup: \"shoulders\"\n  }, {\n    id: \"w3e2\",\n    name: \"Prancha\",\n    sets: \"3\",\n    weight: \"Peso corporal\",\n    reps: \"30 segundos\",\n    notes: \"\",\n    muscleGroup: \"core\"\n  }],\n  history: [{\n    date: \"2023-06-15\",\n    action: \"created\",\n    description: \"Treino de reabilitação iniciado\"\n  }, {\n    date: \"2023-07-05\",\n    action: \"updated\",\n    description: \"Progressão de cargas\"\n  }, {\n    date: \"2023-08-10\",\n    action: \"deactivated\",\n    description: \"Treino pausado durante recuperação\"\n  }],\n  lastUpdated: \"2023-08-10\",\n  observations: \"Reabilitação de lesão no ombro, movimentos lentos e controlados.\",\n  active: false\n}];\nfunction StudentWorkoutList() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [workouts, setWorkouts] = useState(initialWorkouts);\n  const [filteredWorkouts, setFilteredWorkouts] = useState(initialWorkouts);\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(\"\");\n  const [workoutName, setWorkoutName] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n  const [observations, setObservations] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(0);\n  const [showTemplates, setShowTemplates] = useState(false);\n  const [newHistoryEntry, setNewHistoryEntry] = useState(\"\");\n  const [historyData, setHistoryData] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  // Efeito para filtrar treinos\n  useEffect(() => {\n    let filtered = workouts;\n\n    // Filtrar por texto de busca\n    if (searchText) {\n      filtered = filtered.filter(workout => workout.studentName.toLowerCase().includes(searchText.toLowerCase()) || workout.workoutName.toLowerCase().includes(searchText.toLowerCase()));\n    }\n\n    // Filtrar por status\n    if (statusFilter !== \"all\") {\n      const isActive = statusFilter === \"active\";\n      filtered = filtered.filter(workout => workout.active === isActive);\n    }\n    setFilteredWorkouts(filtered);\n  }, [workouts, searchText, statusFilter]);\n\n  // Função para abrir snackbar\n  const handleSnackbar = (message, severity = \"success\") => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  // Função para fechar snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  // Função para abrir diálogo para adicionar novo treino\n  const handleAddWorkout = () => {\n    setCurrentWorkout(null);\n    setSelectedStudent(\"\");\n    setWorkoutName(\"\");\n    setExercises([]);\n    setObservations(\"\");\n    setIsEditing(false);\n    setActiveTab(0);\n    setOpenDialog(true);\n  };\n\n  // Função para abrir diálogo para editar treino existente\n  const handleEditWorkout = workout => {\n    setCurrentWorkout(workout);\n    setSelectedStudent(workout.studentId.toString());\n    setWorkoutName(workout.workoutName);\n    setExercises([...workout.exercises]);\n    setObservations(workout.observations);\n    setHistoryData([...workout.history]);\n    setIsEditing(true);\n    setActiveTab(0);\n    setOpenDialog(true);\n  };\n\n  // Função para alternar status de um treino\n  const handleToggleStatus = workoutId => {\n    const updatedWorkouts = workouts.map(workout => {\n      if (workout.id === workoutId) {\n        const newActive = !workout.active;\n        const newHistory = [...workout.history, {\n          date: dayjs().format(\"YYYY-MM-DD\"),\n          action: newActive ? \"activated\" : \"deactivated\",\n          description: newActive ? \"Treino ativado\" : \"Treino desativado\"\n        }];\n        handleSnackbar(t(newActive ? \"workouts.workoutActivated\" : \"workouts.workoutDeactivated\"));\n        return {\n          ...workout,\n          active: newActive,\n          history: newHistory,\n          lastUpdated: dayjs().format(\"YYYY-MM-DD\")\n        };\n      }\n      return workout;\n    });\n    setWorkouts(updatedWorkouts);\n  };\n\n  // Função para fechar diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  // Função para mudar aba\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  // Função para salvar treino\n  const handleSaveWorkout = () => {\n    // Validação\n    if (!selectedStudent || exercises.length === 0) {\n      handleSnackbar(t(\"workouts.invalidWorkout\"), \"error\");\n      return;\n    }\n    const student = allStudents.find(s => s.id === parseInt(selectedStudent));\n    if (!student) {\n      handleSnackbar(t(\"workouts.studentNotFound\"), \"error\");\n      return;\n    }\n    const now = dayjs().format(\"YYYY-MM-DD\");\n    if (isEditing) {\n      // Atualizar treino existente\n      const newHistory = [...historyData, {\n        date: now,\n        action: \"updated\",\n        description: newHistoryEntry || t(\"workouts.workoutUpdated\")\n      }];\n      const updatedWorkouts = workouts.map(workout => {\n        if (workout.id === currentWorkout.id) {\n          return {\n            ...workout,\n            studentId: parseInt(selectedStudent),\n            studentName: student.name,\n            workoutName,\n            exercises,\n            observations,\n            history: newHistory,\n            lastUpdated: now\n          };\n        }\n        return workout;\n      });\n      setWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutUpdated\"));\n    } else {\n      // Adicionar novo treino\n      const newWorkout = {\n        id: Date.now(),\n        studentId: parseInt(selectedStudent),\n        studentName: student.name,\n        workoutName: workoutName || t(\"workouts.customWorkout\"),\n        exercises,\n        observations,\n        history: [{\n          date: now,\n          action: \"created\",\n          description: t(\"workouts.workoutCreated\")\n        }],\n        lastUpdated: now,\n        active: true\n      };\n      setWorkouts([...workouts, newWorkout]);\n      handleSnackbar(t(\"workouts.workoutAdded\"));\n    }\n    setNewHistoryEntry(\"\");\n    setOpenDialog(false);\n  };\n\n  // Função para adicionar entrada no histórico\n  const handleAddHistoryEntry = () => {\n    if (newHistoryEntry.trim()) {\n      setHistoryData([...historyData, {\n        date: dayjs().format(\"YYYY-MM-DD\"),\n        action: \"updated\",\n        description: newHistoryEntry\n      }]);\n      setNewHistoryEntry(\"\");\n    }\n  };\n\n  // Função para usar um template\n  const handleUseTemplate = template => {\n    setExercises([...template.exercises]);\n    setWorkoutName(template.name);\n    setShowTemplates(false);\n    setOpenDialog(true);\n    handleSnackbar(t(\"workouts.templateApplied\"));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: t(\"workouts.title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: t(\"workouts.search\"),\n        variant: \"outlined\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value),\n        sx: {\n          width: \"40%\"\n        },\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            minWidth: 120,\n            mr: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"status-filter-label\",\n            children: t(\"workouts.filterStatus\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"status-filter-label\",\n            value: statusFilter,\n            label: t(\"workouts.filterStatus\"),\n            onChange: e => setStatusFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: t(\"workouts.allStatuses\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"active\",\n              children: t(\"workouts.statusActive\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"inactive\",\n              children: t(\"workouts.statusInactive\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(LibraryBooksIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowTemplates(true),\n          sx: {\n            mr: 2\n          },\n          children: t(\"workouts.manageTemplates\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(FitnessCenterIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 24\n          }, this),\n          onClick: handleAddWorkout,\n          children: t(\"workouts.addWorkout\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredWorkouts.length > 0 ? filteredWorkouts.map(workout => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 3,\n          sx: {\n            borderLeft: 6,\n            borderColor: workout.active ? \"success.main\" : \"grey.500\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: workout.active ? \"success.main\" : \"grey.500\",\n                    mr: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    component: \"div\",\n                    children: workout.studentName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"text.secondary\",\n                    children: workout.workoutName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Chip, {\n                  label: workout.active ? t(\"workouts.statusActive\") : t(\"workouts.statusInactive\"),\n                  color: workout.active ? \"success\" : \"default\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 36\n                  }, this),\n                  onClick: () => handleEditWorkout(workout),\n                  sx: {\n                    mr: 1\n                  },\n                  children: t(\"workouts.edit\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  color: workout.active ? \"error\" : \"success\",\n                  onClick: () => handleToggleStatus(workout.id),\n                  children: workout.active ? t(\"workouts.statusInactive\") : t(\"workouts.statusActive\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 51\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [t(\"workouts.details\"), \" (\", workout.exercises.length, \" \", t(\"workouts.exercises\"), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  color: \"text.secondary\",\n                  gutterBottom: true,\n                  children: [t(\"workouts.lastUpdated\"), \":\", \" \", dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    mt: 2,\n                    mb: 1\n                  },\n                  children: [t(\"workouts.exercises\"), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                  component: Paper,\n                  variant: \"outlined\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    size: \"small\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          children: t(\"exercise.name\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 608,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: t(\"exercise.sets\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 609,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: t(\"exercise.weight\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 612,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: t(\"exercise.reps\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: t(\"exercise.sequence\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 618,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 607,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: workout.exercises.map(exercise => /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          children: exercise.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 624,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: exercise.sets\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 625,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: exercise.weight\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 628,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"center\",\n                          children: exercise.reps\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 631,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          children: exercise.notes\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 634,\n                          columnNumber: 33\n                        }, this)]\n                      }, exercise.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    mt: 2,\n                    mb: 1\n                  },\n                  children: [t(\"observations.title\"), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  variant: \"outlined\",\n                  sx: {\n                    p: 2,\n                    bgcolor: \"background.default\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: workout.observations || t(\"workouts.noObservations\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 51\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [t(\"workouts.history\"), \" (\", workout.history.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  children: workout.history.map((entry, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                    divider: true,\n                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        children: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 667,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 666,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: [dayjs(entry.date).format(\"DD/MM/YYYY\"), \" -\", \" \", t(`workouts.action${entry.action.charAt(0).toUpperCase() + entry.action.slice(1)}`)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 672,\n                        columnNumber: 33\n                      }, this),\n                      secondary: entry.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 15\n        }, this)\n      }, workout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Nenhum treino encontrado com os filtros atuais.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: isEditing ? t(\"workouts.editWorkout\") : t(\"workouts.addWorkout\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: handleTabChange,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(FitnessCenterIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 21\n            }, this),\n            label: t(\"workouts.exercises\"),\n            id: \"tab-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 23\n            }, this),\n            label: t(\"workouts.history\"),\n            id: \"tab-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"student-select-label\",\n                children: t(\"workouts.selectStudent\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"student-select-label\",\n                value: selectedStudent,\n                label: t(\"workouts.selectStudent\"),\n                onChange: e => setSelectedStudent(e.target.value),\n                disabled: isEditing,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: t(\"workouts.selectStudentPlaceholder\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 21\n                }, this), allStudents.map(student => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: student.id.toString(),\n                  children: student.name\n                }, student.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: t(\"workouts.templateName\"),\n              value: workoutName,\n              onChange: e => setWorkoutName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ExerciseTable, {\n              exercises: exercises,\n              setExercises: setExercises\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: t(\"workouts.observations\"),\n              value: observations,\n              onChange: e => setObservations(e.target.value),\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: t(\"workouts.addHistoryEntry\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: t(\"workouts.historyDescription\"),\n                value: newHistoryEntry,\n                onChange: e => setNewHistoryEntry(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleAddHistoryEntry,\n                disabled: !newHistoryEntry.trim(),\n                sx: {\n                  ml: 1\n                },\n                children: t(\"buttons.add\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(LibraryBooksIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 30\n              }, this),\n              onClick: () => {\n                setOpenDialog(false);\n                setShowTemplates(true);\n              },\n              children: t(\"workouts.useTemplate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [t(\"workouts.historyFor\"), \" \", currentWorkout === null || currentWorkout === void 0 ? void 0 : currentWorkout.studentName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: historyData.map((entry, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: [dayjs(entry.date).format(\"DD/MM/YYYY\"), \" -\", \" \", t(`workouts.action${entry.action.charAt(0).toUpperCase() + entry.action.slice(1)}`)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 25\n                }, this),\n                secondary: entry.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: t(\"buttons.cancel\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveWorkout,\n          color: \"primary\",\n          variant: \"contained\",\n          children: t(\"buttons.save\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showTemplates,\n      onClose: () => setShowTemplates(false),\n      fullWidth: true,\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: t(\"workouts.templates\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(WorkoutTemplates, {\n          onSelectTemplate: handleUseTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowTemplates(false),\n          children: t(\"buttons.close\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 4000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentWorkoutList, \"PshhvES3iEL0J+23xMW5+bx/m6s=\", false, function () {\n  return [useTranslation];\n});\n_c = StudentWorkoutList;\nexport default StudentWorkoutList;\nvar _c;\n$RefreshReg$(_c, \"StudentWorkoutList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","Card","CardContent","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Divider","Avatar","List","ListItem","ListItemText","ListItemAvatar","InputAdornment","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","Tabs","Tab","Snackbar","Alert","Search","SearchIcon","ExpandMore","ExpandMoreIcon","FitnessCenter","FitnessCenterIcon","Person","PersonIcon","Edit","EditIcon","History","HistoryIcon","LibraryBooks","LibraryBooksIcon","useTranslation","ExerciseTable","WorkoutTemplates","dayjs","jsxDEV","_jsxDEV","allStudents","id","name","active","initialWorkouts","studentId","studentName","workoutName","exercises","sets","weight","reps","notes","muscleGroup","history","date","action","description","lastUpdated","observations","StudentWorkoutList","_s","t","workouts","setWorkouts","filteredWorkouts","setFilteredWorkouts","searchText","setSearchText","statusFilter","setStatusFilter","openDialog","setOpenDialog","isEditing","setIsEditing","currentWorkout","setCurrentWorkout","selectedStudent","setSelectedStudent","setWorkoutName","setExercises","setObservations","activeTab","setActiveTab","showTemplates","setShowTemplates","newHistoryEntry","setNewHistoryEntry","historyData","setHistoryData","snackbar","setSnackbar","open","message","severity","filtered","filter","workout","toLowerCase","includes","isActive","handleSnackbar","handleCloseSnackbar","handleAddWorkout","handleEditWorkout","toString","handleToggleStatus","workoutId","updatedWorkouts","map","newActive","newHistory","format","handleCloseDialog","handleTabChange","event","newValue","handleSaveWorkout","length","student","find","s","parseInt","now","newWorkout","Date","handleAddHistoryEntry","trim","handleUseTemplate","template","sx","flexGrow","p","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","mb","placeholder","value","onChange","e","target","width","InputProps","startAdornment","position","minWidth","mr","labelId","label","color","startIcon","onClick","container","spacing","item","xs","elevation","borderLeft","borderColor","bgcolor","size","my","expandIcon","mt","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","exercise","entry","index","divider","primary","charAt","toUpperCase","slice","secondary","textAlign","onClose","fullWidth","maxWidth","icon","sm","disabled","multiline","rows","ml","onSelectTemplate","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/features/workout/components/StudentWorkoutList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Chip,\n  Divider,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Tabs,\n  Tab,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport {\n  Search as SearchIcon,\n  ExpandMore as ExpandMoreIcon,\n  FitnessCenter as FitnessCenterIcon,\n  Person as PersonIcon,\n  Edit as EditIcon,\n  History as HistoryIcon,\n  LibraryBooks as LibraryBooksIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport ExerciseTable from \"./ExerciseTable\";\nimport WorkoutTemplates from \"./WorkoutTemplates\";\nimport dayjs from \"dayjs\";\n\n// Dados fictícios de alunos\nconst allStudents = [\n  { id: 1, name: \"João Silva\", active: true },\n  { id: 2, name: \"Maria Santos\", active: true },\n  { id: 3, name: \"Pedro Oliveira\", active: false },\n  { id: 4, name: \"Ana Costa\", active: true },\n  { id: 5, name: \"Lucas Souza\", active: true },\n];\n\n// Dados fictícios de treinos\nconst initialWorkouts = [\n  {\n    id: 1,\n    studentId: 1,\n    studentName: \"João Silva\",\n    workoutName: \"Treino A - Hipertrofia\",\n    exercises: [\n      {\n        id: \"w1e1\",\n        name: \"Supino Reto\",\n        sets: \"4\",\n        weight: \"70\",\n        reps: \"10\",\n        notes: \"Descanso: 90 segundos\",\n        muscleGroup: \"chest\",\n      },\n      {\n        id: \"w1e2\",\n        name: \"Puxada Frontal\",\n        sets: \"4\",\n        weight: \"60\",\n        reps: \"12\",\n        notes: \"Pegada aberta\",\n        muscleGroup: \"back\",\n      },\n      {\n        id: \"w1e3\",\n        name: \"Agachamento\",\n        sets: \"4\",\n        weight: \"80\",\n        reps: \"10\",\n        notes: \"Profundidade completa\",\n        muscleGroup: \"legs\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-08-01\",\n        action: \"created\",\n        description: \"Treino inicial criado\",\n      },\n      {\n        date: \"2023-08-15\",\n        action: \"updated\",\n        description: \"Ajuste de cargas\",\n      },\n    ],\n    lastUpdated: \"2023-08-15\",\n    observations:\n      \"Aluno relatou dor no joelho, cuidado com agachamentos profundos.\",\n    active: true,\n  },\n  {\n    id: 2,\n    studentId: 2,\n    studentName: \"Maria Santos\",\n    workoutName: \"Treino Full Body\",\n    exercises: [\n      {\n        id: \"w2e1\",\n        name: \"Desenvolvimento\",\n        sets: \"3\",\n        weight: \"20\",\n        reps: \"12\",\n        notes: \"\",\n        muscleGroup: \"shoulders\",\n      },\n      {\n        id: \"w2e2\",\n        name: \"Leg Press\",\n        sets: \"3\",\n        weight: \"120\",\n        reps: \"15\",\n        notes: \"Pés afastados\",\n        muscleGroup: \"legs\",\n      },\n      {\n        id: \"w2e3\",\n        name: \"Rosca Direta\",\n        sets: \"3\",\n        weight: \"15\",\n        reps: \"12\",\n        notes: \"\",\n        muscleGroup: \"biceps\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-07-28\",\n        action: \"created\",\n        description: \"Treino inicial criado\",\n      },\n    ],\n    lastUpdated: \"2023-07-28\",\n    observations: \"\",\n    active: true,\n  },\n  {\n    id: 3,\n    studentId: 3,\n    studentName: \"Pedro Oliveira\",\n    workoutName: \"Treino de Reabilitação\",\n    exercises: [\n      {\n        id: \"w3e1\",\n        name: \"Elevação Lateral\",\n        sets: \"3\",\n        weight: \"5\",\n        reps: \"15\",\n        notes: \"Movimento controlado\",\n        muscleGroup: \"shoulders\",\n      },\n      {\n        id: \"w3e2\",\n        name: \"Prancha\",\n        sets: \"3\",\n        weight: \"Peso corporal\",\n        reps: \"30 segundos\",\n        notes: \"\",\n        muscleGroup: \"core\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-06-15\",\n        action: \"created\",\n        description: \"Treino de reabilitação iniciado\",\n      },\n      {\n        date: \"2023-07-05\",\n        action: \"updated\",\n        description: \"Progressão de cargas\",\n      },\n      {\n        date: \"2023-08-10\",\n        action: \"deactivated\",\n        description: \"Treino pausado durante recuperação\",\n      },\n    ],\n    lastUpdated: \"2023-08-10\",\n    observations:\n      \"Reabilitação de lesão no ombro, movimentos lentos e controlados.\",\n    active: false,\n  },\n];\n\nfunction StudentWorkoutList() {\n  const { t } = useTranslation();\n  const [workouts, setWorkouts] = useState(initialWorkouts);\n  const [filteredWorkouts, setFilteredWorkouts] = useState(initialWorkouts);\n  const [searchText, setSearchText] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentWorkout, setCurrentWorkout] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(\"\");\n  const [workoutName, setWorkoutName] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n  const [observations, setObservations] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(0);\n  const [showTemplates, setShowTemplates] = useState(false);\n  const [newHistoryEntry, setNewHistoryEntry] = useState(\"\");\n  const [historyData, setHistoryData] = useState([]);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  // Efeito para filtrar treinos\n  useEffect(() => {\n    let filtered = workouts;\n\n    // Filtrar por texto de busca\n    if (searchText) {\n      filtered = filtered.filter(\n        (workout) =>\n          workout.studentName\n            .toLowerCase()\n            .includes(searchText.toLowerCase()) ||\n          workout.workoutName.toLowerCase().includes(searchText.toLowerCase())\n      );\n    }\n\n    // Filtrar por status\n    if (statusFilter !== \"all\") {\n      const isActive = statusFilter === \"active\";\n      filtered = filtered.filter((workout) => workout.active === isActive);\n    }\n\n    setFilteredWorkouts(filtered);\n  }, [workouts, searchText, statusFilter]);\n\n  // Função para abrir snackbar\n  const handleSnackbar = (message, severity = \"success\") => {\n    setSnackbar({\n      open: true,\n      message,\n      severity,\n    });\n  };\n\n  // Função para fechar snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false,\n    });\n  };\n\n  // Função para abrir diálogo para adicionar novo treino\n  const handleAddWorkout = () => {\n    setCurrentWorkout(null);\n    setSelectedStudent(\"\");\n    setWorkoutName(\"\");\n    setExercises([]);\n    setObservations(\"\");\n    setIsEditing(false);\n    setActiveTab(0);\n    setOpenDialog(true);\n  };\n\n  // Função para abrir diálogo para editar treino existente\n  const handleEditWorkout = (workout) => {\n    setCurrentWorkout(workout);\n    setSelectedStudent(workout.studentId.toString());\n    setWorkoutName(workout.workoutName);\n    setExercises([...workout.exercises]);\n    setObservations(workout.observations);\n    setHistoryData([...workout.history]);\n    setIsEditing(true);\n    setActiveTab(0);\n    setOpenDialog(true);\n  };\n\n  // Função para alternar status de um treino\n  const handleToggleStatus = (workoutId) => {\n    const updatedWorkouts = workouts.map((workout) => {\n      if (workout.id === workoutId) {\n        const newActive = !workout.active;\n        const newHistory = [\n          ...workout.history,\n          {\n            date: dayjs().format(\"YYYY-MM-DD\"),\n            action: newActive ? \"activated\" : \"deactivated\",\n            description: newActive ? \"Treino ativado\" : \"Treino desativado\",\n          },\n        ];\n\n        handleSnackbar(\n          t(\n            newActive\n              ? \"workouts.workoutActivated\"\n              : \"workouts.workoutDeactivated\"\n          )\n        );\n\n        return {\n          ...workout,\n          active: newActive,\n          history: newHistory,\n          lastUpdated: dayjs().format(\"YYYY-MM-DD\"),\n        };\n      }\n      return workout;\n    });\n\n    setWorkouts(updatedWorkouts);\n  };\n\n  // Função para fechar diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n\n  // Função para mudar aba\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  // Função para salvar treino\n  const handleSaveWorkout = () => {\n    // Validação\n    if (!selectedStudent || exercises.length === 0) {\n      handleSnackbar(t(\"workouts.invalidWorkout\"), \"error\");\n      return;\n    }\n\n    const student = allStudents.find((s) => s.id === parseInt(selectedStudent));\n\n    if (!student) {\n      handleSnackbar(t(\"workouts.studentNotFound\"), \"error\");\n      return;\n    }\n\n    const now = dayjs().format(\"YYYY-MM-DD\");\n\n    if (isEditing) {\n      // Atualizar treino existente\n      const newHistory = [\n        ...historyData,\n        {\n          date: now,\n          action: \"updated\",\n          description: newHistoryEntry || t(\"workouts.workoutUpdated\"),\n        },\n      ];\n\n      const updatedWorkouts = workouts.map((workout) => {\n        if (workout.id === currentWorkout.id) {\n          return {\n            ...workout,\n            studentId: parseInt(selectedStudent),\n            studentName: student.name,\n            workoutName,\n            exercises,\n            observations,\n            history: newHistory,\n            lastUpdated: now,\n          };\n        }\n        return workout;\n      });\n\n      setWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutUpdated\"));\n    } else {\n      // Adicionar novo treino\n      const newWorkout = {\n        id: Date.now(),\n        studentId: parseInt(selectedStudent),\n        studentName: student.name,\n        workoutName: workoutName || t(\"workouts.customWorkout\"),\n        exercises,\n        observations,\n        history: [\n          {\n            date: now,\n            action: \"created\",\n            description: t(\"workouts.workoutCreated\"),\n          },\n        ],\n        lastUpdated: now,\n        active: true,\n      };\n\n      setWorkouts([...workouts, newWorkout]);\n      handleSnackbar(t(\"workouts.workoutAdded\"));\n    }\n\n    setNewHistoryEntry(\"\");\n    setOpenDialog(false);\n  };\n\n  // Função para adicionar entrada no histórico\n  const handleAddHistoryEntry = () => {\n    if (newHistoryEntry.trim()) {\n      setHistoryData([\n        ...historyData,\n        {\n          date: dayjs().format(\"YYYY-MM-DD\"),\n          action: \"updated\",\n          description: newHistoryEntry,\n        },\n      ]);\n      setNewHistoryEntry(\"\");\n    }\n  };\n\n  // Função para usar um template\n  const handleUseTemplate = (template) => {\n    setExercises([...template.exercises]);\n    setWorkoutName(template.name);\n    setShowTemplates(false);\n    setOpenDialog(true);\n    handleSnackbar(t(\"workouts.templateApplied\"));\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        {t(\"workouts.title\")}\n      </Typography>\n\n      {/* Barra de pesquisa e filtros */}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 3,\n        }}\n      >\n        <TextField\n          placeholder={t(\"workouts.search\")}\n          variant=\"outlined\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          sx={{ width: \"40%\" }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <FormControl sx={{ minWidth: 120, mr: 2 }}>\n            <InputLabel id=\"status-filter-label\">\n              {t(\"workouts.filterStatus\")}\n            </InputLabel>\n            <Select\n              labelId=\"status-filter-label\"\n              value={statusFilter}\n              label={t(\"workouts.filterStatus\")}\n              onChange={(e) => setStatusFilter(e.target.value)}\n            >\n              <MenuItem value=\"all\">{t(\"workouts.allStatuses\")}</MenuItem>\n              <MenuItem value=\"active\">{t(\"workouts.statusActive\")}</MenuItem>\n              <MenuItem value=\"inactive\">\n                {t(\"workouts.statusInactive\")}\n              </MenuItem>\n            </Select>\n          </FormControl>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<LibraryBooksIcon />}\n            onClick={() => setShowTemplates(true)}\n            sx={{ mr: 2 }}\n          >\n            {t(\"workouts.manageTemplates\")}\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            startIcon={<FitnessCenterIcon />}\n            onClick={handleAddWorkout}\n          >\n            {t(\"workouts.addWorkout\")}\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Lista de treinos */}\n      <Grid container spacing={3}>\n        {filteredWorkouts.length > 0 ? (\n          filteredWorkouts.map((workout) => (\n            <Grid item xs={12} key={workout.id}>\n              <Card\n                elevation={3}\n                sx={{\n                  borderLeft: 6,\n                  borderColor: workout.active ? \"success.main\" : \"grey.500\",\n                }}\n              >\n                <CardContent>\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      mb: 2,\n                    }}\n                  >\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Avatar\n                        sx={{\n                          bgcolor: workout.active ? \"success.main\" : \"grey.500\",\n                          mr: 2,\n                        }}\n                      >\n                        <PersonIcon />\n                      </Avatar>\n                      <Box>\n                        <Typography variant=\"h6\" component=\"div\">\n                          {workout.studentName}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                          {workout.workoutName}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box>\n                      <Chip\n                        label={\n                          workout.active\n                            ? t(\"workouts.statusActive\")\n                            : t(\"workouts.statusInactive\")\n                        }\n                        color={workout.active ? \"success\" : \"default\"}\n                        sx={{ mr: 1 }}\n                      />\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        startIcon={<EditIcon />}\n                        onClick={() => handleEditWorkout(workout)}\n                        sx={{ mr: 1 }}\n                      >\n                        {t(\"workouts.edit\")}\n                      </Button>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color={workout.active ? \"error\" : \"success\"}\n                        onClick={() => handleToggleStatus(workout.id)}\n                      >\n                        {workout.active\n                          ? t(\"workouts.statusInactive\")\n                          : t(\"workouts.statusActive\")}\n                      </Button>\n                    </Box>\n                  </Box>\n\n                  <Divider sx={{ my: 2 }} />\n\n                  <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>\n                        {t(\"workouts.details\")} ({workout.exercises.length}{\" \"}\n                        {t(\"workouts.exercises\")})\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography\n                        variant=\"subtitle2\"\n                        color=\"text.secondary\"\n                        gutterBottom\n                      >\n                        {t(\"workouts.lastUpdated\")}:{\" \"}\n                        {dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")}\n                      </Typography>\n\n                      <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                        {t(\"workouts.exercises\")}:\n                      </Typography>\n\n                      <TableContainer\n                        component={Paper}\n                        variant=\"outlined\"\n                        sx={{ mb: 2 }}\n                      >\n                        <Table size=\"small\">\n                          <TableHead>\n                            <TableRow>\n                              <TableCell>{t(\"exercise.name\")}</TableCell>\n                              <TableCell align=\"center\">\n                                {t(\"exercise.sets\")}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {t(\"exercise.weight\")}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {t(\"exercise.reps\")}\n                              </TableCell>\n                              <TableCell>{t(\"exercise.sequence\")}</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {workout.exercises.map((exercise) => (\n                              <TableRow key={exercise.id}>\n                                <TableCell>{exercise.name}</TableCell>\n                                <TableCell align=\"center\">\n                                  {exercise.sets}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {exercise.weight}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {exercise.reps}\n                                </TableCell>\n                                <TableCell>{exercise.notes}</TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n\n                      <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n                        {t(\"observations.title\")}:\n                      </Typography>\n                      <Paper\n                        variant=\"outlined\"\n                        sx={{ p: 2, bgcolor: \"background.default\" }}\n                      >\n                        <Typography>\n                          {workout.observations || t(\"workouts.noObservations\")}\n                        </Typography>\n                      </Paper>\n                    </AccordionDetails>\n                  </Accordion>\n\n                  <Accordion>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                      <Typography>\n                        {t(\"workouts.history\")} ({workout.history.length})\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <List>\n                        {workout.history.map((entry, index) => (\n                          <ListItem key={index} divider>\n                            <ListItemAvatar>\n                              <Avatar>\n                                <HistoryIcon />\n                              </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={\n                                <Typography variant=\"subtitle2\">\n                                  {dayjs(entry.date).format(\"DD/MM/YYYY\")} -{\" \"}\n                                  {t(\n                                    `workouts.action${\n                                      entry.action.charAt(0).toUpperCase() +\n                                      entry.action.slice(1)\n                                    }`\n                                  )}\n                                </Typography>\n                              }\n                              secondary={entry.description}\n                            />\n                          </ListItem>\n                        ))}\n                      </List>\n                    </AccordionDetails>\n                  </Accordion>\n                </CardContent>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Paper sx={{ p: 3, textAlign: \"center\" }}>\n              <Typography variant=\"subtitle1\">\n                Nenhum treino encontrado com os filtros atuais.\n              </Typography>\n            </Paper>\n          </Grid>\n        )}\n      </Grid>\n\n      {/* Diálogo para adicionar/editar treino */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          {isEditing ? t(\"workouts.editWorkout\") : t(\"workouts.addWorkout\")}\n        </DialogTitle>\n        <DialogContent>\n          <Tabs value={activeTab} onChange={handleTabChange} sx={{ mb: 2 }}>\n            <Tab\n              icon={<FitnessCenterIcon />}\n              label={t(\"workouts.exercises\")}\n              id=\"tab-0\"\n            />\n            {isEditing && (\n              <Tab\n                icon={<HistoryIcon />}\n                label={t(\"workouts.history\")}\n                id=\"tab-1\"\n              />\n            )}\n          </Tabs>\n\n          {activeTab === 0 && (\n            <Grid container spacing={2} sx={{ mt: 1 }}>\n              <Grid item xs={12} sm={6}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"student-select-label\">\n                    {t(\"workouts.selectStudent\")}\n                  </InputLabel>\n                  <Select\n                    labelId=\"student-select-label\"\n                    value={selectedStudent}\n                    label={t(\"workouts.selectStudent\")}\n                    onChange={(e) => setSelectedStudent(e.target.value)}\n                    disabled={isEditing}\n                  >\n                    <MenuItem value=\"\">\n                      <em>{t(\"workouts.selectStudentPlaceholder\")}</em>\n                    </MenuItem>\n                    {allStudents.map((student) => (\n                      <MenuItem key={student.id} value={student.id.toString()}>\n                        {student.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label={t(\"workouts.templateName\")}\n                  value={workoutName}\n                  onChange={(e) => setWorkoutName(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <ExerciseTable\n                  exercises={exercises}\n                  setExercises={setExercises}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  label={t(\"workouts.observations\")}\n                  value={observations}\n                  onChange={(e) => setObservations(e.target.value)}\n                  multiline\n                  rows={3}\n                />\n              </Grid>\n\n              {isEditing && (\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    {t(\"workouts.addHistoryEntry\")}\n                  </Typography>\n                  <Box sx={{ display: \"flex\" }}>\n                    <TextField\n                      fullWidth\n                      label={t(\"workouts.historyDescription\")}\n                      value={newHistoryEntry}\n                      onChange={(e) => setNewHistoryEntry(e.target.value)}\n                    />\n                    <Button\n                      variant=\"contained\"\n                      onClick={handleAddHistoryEntry}\n                      disabled={!newHistoryEntry.trim()}\n                      sx={{ ml: 1 }}\n                    >\n                      {t(\"buttons.add\")}\n                    </Button>\n                  </Box>\n                </Grid>\n              )}\n\n              <Grid item xs={12} sx={{ mt: 2 }}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  startIcon={<LibraryBooksIcon />}\n                  onClick={() => {\n                    setOpenDialog(false);\n                    setShowTemplates(true);\n                  }}\n                >\n                  {t(\"workouts.useTemplate\")}\n                </Button>\n              </Grid>\n            </Grid>\n          )}\n\n          {activeTab === 1 && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                {t(\"workouts.historyFor\")} {currentWorkout?.studentName}\n              </Typography>\n              <List>\n                {historyData.map((entry, index) => (\n                  <ListItem key={index} divider>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <HistoryIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <Typography variant=\"subtitle2\">\n                          {dayjs(entry.date).format(\"DD/MM/YYYY\")} -{\" \"}\n                          {t(\n                            `workouts.action${\n                              entry.action.charAt(0).toUpperCase() +\n                              entry.action.slice(1)\n                            }`\n                          )}\n                        </Typography>\n                      }\n                      secondary={entry.description}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>{t(\"buttons.cancel\")}</Button>\n          <Button\n            onClick={handleSaveWorkout}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            {t(\"buttons.save\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo para templates */}\n      <Dialog\n        open={showTemplates}\n        onClose={() => setShowTemplates(false)}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle>{t(\"workouts.templates\")}</DialogTitle>\n        <DialogContent>\n          <WorkoutTemplates onSelectTemplate={handleUseTemplate} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowTemplates(false)}>\n            {t(\"buttons.close\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar para mensagens */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default StudentWorkoutList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}