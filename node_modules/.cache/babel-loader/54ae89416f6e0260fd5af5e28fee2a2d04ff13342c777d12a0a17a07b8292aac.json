{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/FinancialManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Tabs, Tab, Paper, Button, Grid, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, Select, MenuItem, InputAdornment, FormHelperText, Tooltip, Snackbar, Alert, Stack, TextField, IconButton, Card } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DataGrid, ptBR } from \"@mui/x-data-grid\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon, FilterList as FilterListIcon, CheckCircle as CheckCircleIcon, ArrowUpward as ArrowUpwardIcon, ArrowDownward as ArrowDownwardIcon, AttachMoney as AttachMoneyIcon, Search as SearchIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport { transactions, incomeCategories, expenseCategories, transactionStatus, paymentMethods, getCategoryName, getPaymentMethodName, getStatusName, getStatusColor } from \"../data/financialData\";\nimport { LineChart, BarChart, PieChart, AreaChart } from \"@mui/x-charts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinancialManagement() {\n  _s();\n  // Usando a tradução apenas para elementos que precisam ser internacionalizados\n  const {\n    t\n  } = useTranslation();\n\n  // Estado para a aba atual\n  const [currentTab, setCurrentTab] = useState(\"receivables\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estado para o diálogo de geração de mensalidades\n  const [openGenerateDialog, setOpenGenerateDialog] = useState(false);\n  const [monthToGenerate, setMonthToGenerate] = useState(dayjs());\n\n  // Estado para a transação selecionada para edição/detalhes\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n\n  // Estado para o diálogo de nova transação\n  const [openTransactionDialog, setOpenTransactionDialog] = useState(false);\n\n  // Estado para o diálogo de exclusão\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n\n  // Estado para snackbar\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  // Estado para o diálogo de filtros\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  // Estado para os filtros\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    status: \"all\",\n    dateFrom: null,\n    dateTo: null,\n    category: \"all\",\n    amountMin: \"\",\n    amountMax: \"\",\n    searchTerm: \"\"\n  });\n\n  // Estado para o formulário de nova transação\n  const [transactionForm, setTransactionForm] = useState({\n    id: null,\n    type: \"income\",\n    description: \"\",\n    amount: \"\",\n    date: null,\n    dueDate: null,\n    category: \"\",\n    status: \"pending\",\n    paymentMethod: \"\",\n    relatedPerson: {\n      id: \"\",\n      name: \"\",\n      type: \"\"\n    },\n    notes: \"\"\n  });\n\n  // Estado para erros de validação do formulário\n  const [formErrors, setFormErrors] = useState({});\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para trocar a aba atual\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo de nova transação\n  const handleOpenTransactionDialog = (transaction = null) => {\n    if (transaction) {\n      // Editar transação existente\n      setTransactionForm({\n        ...transaction,\n        date: transaction.date ? dayjs(transaction.date) : null,\n        dueDate: transaction.dueDate ? dayjs(transaction.dueDate) : null\n      });\n      setSelectedTransaction(transaction);\n    } else {\n      // Nova transação\n      setTransactionForm({\n        id: null,\n        type: \"income\",\n        description: \"\",\n        amount: \"\",\n        date: null,\n        dueDate: null,\n        category: \"\",\n        status: \"pending\",\n        paymentMethod: \"\",\n        relatedPerson: {\n          id: \"\",\n          name: \"\",\n          type: \"\"\n        },\n        notes: \"\"\n      });\n      setSelectedTransaction(null);\n    }\n    setFormErrors({});\n    setOpenTransactionDialog(true);\n  };\n\n  // Função para fechar o diálogo de transação\n  const handleCloseTransactionDialog = () => {\n    setOpenTransactionDialog(false);\n  };\n\n  // Função para validar o formulário de transação\n  const validateTransactionForm = () => {\n    const errors = {};\n    if (!transactionForm.description.trim()) {\n      errors.description = \"Descrição é obrigatória\";\n    }\n    if (!transactionForm.amount || isNaN(transactionForm.amount) || parseFloat(transactionForm.amount) <= 0) {\n      errors.amount = \"Valor deve ser um número positivo\";\n    }\n    if (!transactionForm.dueDate) {\n      errors.dueDate = \"Data de vencimento é obrigatória\";\n    }\n    if (!transactionForm.category) {\n      errors.category = \"Categoria é obrigatória\";\n    }\n    if (transactionForm.status === \"paid\" && !transactionForm.paymentMethod) {\n      errors.paymentMethod = \"Método de pagamento é obrigatório para transações pagas\";\n    }\n    if (transactionForm.status === \"paid\" && !transactionForm.date) {\n      errors.date = \"Data de pagamento é obrigatória para transações pagas\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Função para salvar uma transação (nova ou editada)\n  const handleSaveTransaction = () => {\n    if (!validateTransactionForm()) {\n      return;\n    }\n    const newTransaction = {\n      ...transactionForm,\n      id: transactionForm.id || allTransactions.length + 1,\n      amount: parseFloat(transactionForm.amount),\n      date: transactionForm.date ? transactionForm.date.format(\"YYYY-MM-DD\") : null,\n      dueDate: transactionForm.dueDate ? transactionForm.dueDate.format(\"YYYY-MM-DD\") : null\n    };\n    if (selectedTransaction) {\n      // Editar transação existente\n      const updatedTransactions = allTransactions.map(t => t.id === newTransaction.id ? newTransaction : t);\n      setAllTransactions(updatedTransactions);\n      setSnackbar({\n        open: true,\n        message: \"Transação atualizada com sucesso!\",\n        severity: \"success\"\n      });\n    } else {\n      // Adicionar nova transação\n      setAllTransactions([...allTransactions, newTransaction]);\n      setSnackbar({\n        open: true,\n        message: \"Transação adicionada com sucesso!\",\n        severity: \"success\"\n      });\n    }\n    handleCloseTransactionDialog();\n  };\n\n  // Função para abrir o diálogo de exclusão\n  const handleOpenDeleteDialog = transaction => {\n    setSelectedTransaction(transaction);\n    setOpenDeleteDialog(true);\n  };\n\n  // Função para fechar o diálogo de exclusão\n  const handleCloseDeleteDialog = () => {\n    setOpenDeleteDialog(false);\n  };\n\n  // Função para excluir uma transação\n  const handleDeleteTransaction = () => {\n    const updatedTransactions = allTransactions.filter(t => t.id !== selectedTransaction.id);\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: \"Transação excluída com sucesso!\",\n      severity: \"success\"\n    });\n    handleCloseDeleteDialog();\n  };\n\n  // Função para atualizar o status de uma transação (dar baixa)\n  const handleUpdateTransactionStatus = (transaction, newStatus) => {\n    const updatedTransaction = {\n      ...transaction,\n      status: newStatus,\n      date: newStatus === \"paid\" ? dayjs().format(\"YYYY-MM-DD\") : transaction.date\n    };\n    const updatedTransactions = allTransactions.map(t => t.id === transaction.id ? updatedTransaction : t);\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: `Status atualizado para: ${getStatusName(newStatus)}`,\n      severity: \"success\"\n    });\n  };\n\n  // Função para fechar o snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  // Função para atualizar o filtro\n  const handleFilterChange = (field, value) => {\n    setFilters({\n      ...filters,\n      [field]: value\n    });\n  };\n\n  // Função para aplicar os filtros\n  const handleApplyFilters = () => {\n    setOpenFilterDialog(false);\n  };\n\n  // Função para limpar os filtros\n  const handleClearFilters = () => {\n    setFilters({\n      type: \"all\",\n      status: \"all\",\n      dateFrom: null,\n      dateTo: null,\n      category: \"all\",\n      amountMin: \"\",\n      amountMax: \"\",\n      searchTerm: \"\"\n    });\n  };\n\n  // Função para atualizar o campo do formulário\n  const handleFormChange = (field, value) => {\n    if (field.includes(\".\")) {\n      const [parent, child] = field.split(\".\");\n      setTransactionForm({\n        ...transactionForm,\n        [parent]: {\n          ...transactionForm[parent],\n          [child]: value\n        }\n      });\n    } else {\n      setTransactionForm({\n        ...transactionForm,\n        [field]: value\n      });\n    }\n  };\n\n  // Função para filtrar as transações\n  const getFilteredTransactions = () => {\n    return allTransactions.filter(transaction => {\n      // Filtrar por tipo\n      if (filters.type !== \"all\" && transaction.type !== filters.type) {\n        return false;\n      }\n\n      // Filtrar por status\n      if (filters.status !== \"all\" && transaction.status !== filters.status) {\n        return false;\n      }\n\n      // Filtrar por data de início\n      if (filters.dateFrom && transaction.dueDate && dayjs(transaction.dueDate).isBefore(dayjs(filters.dateFrom))) {\n        return false;\n      }\n\n      // Filtrar por data de fim\n      if (filters.dateTo && transaction.dueDate && dayjs(transaction.dueDate).isAfter(dayjs(filters.dateTo))) {\n        return false;\n      }\n\n      // Filtrar por categoria\n      if (filters.category !== \"all\") {\n        if (parseInt(filters.category) !== transaction.category) {\n          return false;\n        }\n      }\n\n      // Filtrar por valor mínimo\n      if (filters.amountMin && transaction.amount < parseFloat(filters.amountMin)) {\n        return false;\n      }\n\n      // Filtrar por valor máximo\n      if (filters.amountMax && transaction.amount > parseFloat(filters.amountMax)) {\n        return false;\n      }\n\n      // Filtrar por termo de busca\n      if (filters.searchTerm) {\n        const searchLower = filters.searchTerm.toLowerCase();\n        const descriptionMatch = transaction.description.toLowerCase().includes(searchLower);\n        const relatedPersonMatch = transaction.relatedPerson.name.toLowerCase().includes(searchLower);\n        const notesMatch = transaction.notes.toLowerCase().includes(searchLower);\n        if (!descriptionMatch && !relatedPersonMatch && !notesMatch) {\n          return false;\n        }\n      }\n      return true;\n    });\n  };\n\n  // Obter transações a receber (mensalidades)\n  const getReceivableTransactions = () => {\n    // Certifique-se de que allTransactions existe e é um array\n    if (!Array.isArray(allTransactions)) return [];\n    return allTransactions.filter(transaction => {\n      if (!transaction) return false;\n      return transaction.type === \"income\" && transaction.category === 1 && (\n      // Categoria 1 = Mensalidade\n      transaction.status === \"pending\" || transaction.status === \"overdue\");\n    });\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach(transaction => {\n      if (!transaction || !transaction.date) return;\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n      const month = date.month();\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (transaction.type === \"expense\" && transaction.status === \"paid\") {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: []\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0]\n        }\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(transaction => (transaction === null || transaction === void 0 ? void 0 : transaction.type) === \"income\" && ((transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"pending\" || (transaction === null || transaction === void 0 ? void 0 : transaction.status) === \"overdue\"));\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce((total, transaction) => total + ((transaction === null || transaction === void 0 ? void 0 : transaction.amount) || 0), 0);\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"pending\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n    const overdueAmount = delinquentTransactions.filter(t => (t === null || t === void 0 ? void 0 : t.status) === \"overdue\").reduce((total, t) => total + ((t === null || t === void 0 ? void 0 : t.amount) || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach(transaction => {\n      if (!(transaction !== null && transaction !== void 0 && transaction.dueDate)) return;\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount]\n      }\n    };\n  };\n\n  // Função para formatar valores monetários\n  const formatCurrency = value => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    }).format(value);\n  };\n\n  // Colunas para a tabela de transações\n  const transactionColumns = [{\n    field: \"type\",\n    headerName: \"Tipo\",\n    width: 100,\n    renderCell: params => {\n      // Verificar se o valor existe\n      if (!params.value) {\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Desconhecido\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        icon: params.value === \"income\" ? /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 17\n        }, this),\n        label: params.value === \"income\" ? \"Receita\" : \"Despesa\",\n        color: params.value === \"income\" ? \"success\" : \"error\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"description\",\n    headerName: \"Descrição\",\n    flex: 1,\n    minWidth: 200\n  }, {\n    field: \"amount\",\n    headerName: \"Valor\",\n    width: 120,\n    renderCell: params => {\n      // Verificar se o valor existe e se a row existe\n      if (!params.value || !params.row) {\n        return \"R$ 0,00\";\n      }\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: params.row.type === \"income\" ? \"success.main\" : \"error.main\"\n        },\n        children: new Intl.NumberFormat(\"pt-BR\", {\n          style: \"currency\",\n          currency: \"BRL\"\n        }).format(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"dueDate\",\n    headerName: \"Vencimento\",\n    width: 120,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return dayjs(params.value).format(\"DD/MM/YYYY\");\n    }\n  }, {\n    field: \"date\",\n    headerName: \"Pagamento\",\n    width: 120,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return dayjs(params.value).format(\"DD/MM/YYYY\");\n    }\n  }, {\n    field: \"category\",\n    headerName: \"Categoria\",\n    width: 150,\n    valueFormatter: params => {\n      if (!params.value || !params.row) return \"Desconhecido\";\n      const type = params.row.type || \"income\";\n      return getCategoryName(params.value, type);\n    }\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 120,\n    renderCell: params => {\n      // Verificar se o valor existe\n      if (!params.value) {\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Desconhecido\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 18\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        label: getStatusName(params.value),\n        size: \"small\",\n        sx: {\n          bgcolor: `${getStatusColor(params.value)}20`,\n          color: getStatusColor(params.value)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"paymentMethod\",\n    headerName: \"Método\",\n    width: 150,\n    valueFormatter: params => {\n      if (!params.value) return \"\";\n      return getPaymentMethodName(params.value);\n    }\n  }, {\n    field: \"actions\",\n    headerName: \"Ações\",\n    width: 180,\n    sortable: false,\n    filterable: false,\n    renderCell: params => {\n      // Verificar se row existe para evitar erros\n      if (!params.row) return null;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [(params.row.status === \"pending\" || params.row.status === \"overdue\") && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Dar baixa\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"success\",\n            onClick: () => handleUpdateTransactionStatus(params.row, \"paid\"),\n            children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Editar\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"primary\",\n            onClick: () => handleOpenTransactionDialog(params.row),\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Excluir\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: \"error\",\n            onClick: () => handleOpenDeleteDialog(params.row),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n\n  // Função para abrir o diálogo de geração de mensalidades\n  const handleOpenGenerateDialog = () => {\n    setOpenGenerateDialog(true);\n  };\n\n  // Função para fechar o diálogo de geração de mensalidades\n  const handleCloseGenerateDialog = () => {\n    setOpenGenerateDialog(false);\n  };\n\n  // Função para gerar mensalidades\n  const handleGenerateMensalidades = () => {\n    // Aqui teria a lógica para gerar as mensalidades para todos os alunos\n    // Como não temos uma lista de alunos real, vamos simular com alguns exemplos\n\n    const mesAno = monthToGenerate.format(\"MM/YYYY\");\n    const novasMensalidades = [{\n      id: allTransactions.length + 1,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - João Silva`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 101,\n        name: \"João Silva\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 2,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Maria Oliveira`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 102,\n        name: \"Maria Oliveira\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 3,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Pedro Santos`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 103,\n        name: \"Pedro Santos\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 4,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Ana Costa`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 104,\n        name: \"Ana Costa\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }, {\n      id: allTransactions.length + 5,\n      type: \"income\",\n      description: `Mensalidade ${mesAno} - Ricardo Gomes`,\n      amount: 120.0,\n      date: null,\n      dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n      category: 1,\n      status: \"pending\",\n      paymentMethod: null,\n      relatedPerson: {\n        id: 105,\n        name: \"Ricardo Gomes\",\n        type: \"student\"\n      },\n      notes: `Mensalidade referente a ${mesAno}`\n    }];\n    setAllTransactions([...allTransactions, ...novasMensalidades]);\n    setSnackbar({\n      open: true,\n      message: `Mensalidades para ${mesAno} geradas com sucesso!`,\n      severity: \"success\"\n    });\n    handleCloseGenerateDialog();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Gest\\xE3o Financeira\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AttachMoneyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 26\n            }, this),\n            onClick: handleOpenGenerateDialog,\n            children: \"Gerar Mensalidades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 26\n            }, this),\n            onClick: () => handleOpenTransactionDialog(),\n            children: \"Nova Transa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: currentTab,\n        onChange: handleTabChange,\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Contas a Receber\",\n          value: \"receivables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Contas a Pagar\",\n          value: \"payables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Hist\\xF3rico\",\n          value: \"history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Vis\\xE3o Geral\",\n          value: \"overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Relat\\xF3rios\",\n          value: \"reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 7\n    }, this), currentTab === \"receivables\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Mensalidades a Receber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              placeholder: \"Buscar...\",\n              size: \"small\",\n              value: filters.searchTerm,\n              onChange: e => handleFilterChange(\"searchTerm\", e.target.value),\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 23\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              startIcon: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 30\n              }, this),\n              onClick: () => setOpenFilterDialog(true),\n              size: \"small\",\n              children: \"Filtros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: 500,\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: getReceivableTransactions(),\n            columns: transactionColumns,\n            pageSize: 10,\n            rowsPerPageOptions: [10, 25, 50],\n            disableSelectionOnClick: true,\n            localeText: ptBR.components.MuiDataGrid.defaultProps.localeText,\n            autoHeight: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), currentTab === \"payables\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Contas a Pagar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Esta funcionalidade ser\\xE1 implementada em breve.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 9\n    }, this), currentTab === \"history\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: t(\"finances.historyTitle\", \"Histórico de Transações\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: t(\"finances.search\", \"Buscar...\"),\n            size: \"small\",\n            value: filters.searchTerm,\n            onChange: e => handleFilterChange(\"searchTerm\", e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 28\n            }, this),\n            onClick: () => setOpenFilterDialog(true),\n            size: \"small\",\n            children: t(\"finances.filters\", \"Filtros\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 500,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: getFilteredTransactions(),\n          columns: transactionColumns,\n          pageSize: 10,\n          rowsPerPageOptions: [10, 25, 50],\n          disableSelectionOnClick: true,\n          localeText: ptBR.components.MuiDataGrid.defaultProps.localeText,\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 9\n    }, this), currentTab === \"overview\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Vis\\xE3o Geral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Esta funcionalidade ser\\xE1 implementada em breve.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 9\n    }, this), currentTab === \"reports\" && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: t(\"finances.reportsTitle\", \"Relatórios Financeiros\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          display: \"flex\",\n          gap: 2,\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            minWidth: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: reportPeriod,\n            onChange: e => setReportPeriod(e.target.value),\n            label: \"Per\\xEDodo\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"current_month\",\n              children: \"M\\xEAs Atual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"previous_month\",\n              children: \"M\\xEAs Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"current_year\",\n              children: \"Ano Atual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"custom\",\n              children: \"Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 13\n        }, this), reportPeriod === \"custom\" && /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          adapterLocale: \"pt-br\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            views: [\"year\"],\n            label: \"Ano\",\n            value: dayjs().year(reportYear),\n            onChange: newValue => setReportYear(newValue ? newValue.year() : dayjs().year()),\n            slotProps: {\n              textField: {\n                size: \"small\",\n                sx: {\n                  minWidth: 120\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Receitas e Despesas (\", reportYear, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 400,\n                width: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                series: [{\n                  data: getIncomeExpenseData().income,\n                  label: \"Receitas\",\n                  color: \"#4caf50\",\n                  valueFormatter: value => formatCurrency(value)\n                }, {\n                  data: getIncomeExpenseData().expense,\n                  label: \"Despesas\",\n                  color: \"#f44336\",\n                  valueFormatter: value => formatCurrency(value)\n                }],\n                xAxis: [{\n                  data: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n                  scaleType: \"band\"\n                }],\n                height: 300\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Resumo Anual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        p: 2,\n                        bgcolor: \"#4caf5020\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: \"Total de Receitas\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1137,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: formatCurrency(getIncomeExpenseData().income.reduce((a, b) => a + b, 0))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1140,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1136,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1135,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        p: 2,\n                        bgcolor: \"#f4433620\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: \"Total de Despesas\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1154,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: formatCurrency(getIncomeExpenseData().expense.reduce((a, b) => a + b, 0))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1157,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1153,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1152,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        p: 2,\n                        bgcolor: \"#2196f320\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: \"Saldo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1171,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        children: formatCurrency(getIncomeExpenseData().income.reduce((a, b) => a + b, 0) - getIncomeExpenseData().expense.reduce((a, b) => a + b, 0))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1172,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1170,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1169,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Relat\\xF3rio de Inadimpl\\xEAncia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    p: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Valores Pendentes por Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      height: 300\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PieChart, {\n                      series: [{\n                        data: [{\n                          id: 0,\n                          value: getDelinquencyData().byStatus.data[0],\n                          label: \"Pendente\",\n                          color: \"#ff9800\"\n                        }, {\n                          id: 1,\n                          value: getDelinquencyData().byStatus.data[1],\n                          label: \"Atrasado\",\n                          color: \"#f44336\"\n                        }],\n                        valueFormatter: value => formatCurrency(value)\n                      }],\n                      height: 250\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1206,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1205,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1201,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    p: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    gutterBottom: true,\n                    children: \"Resumo de Inadimpl\\xEAncia\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 2\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              p: 2,\n                              bgcolor: \"#f4433620\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle2\",\n                              children: \"Total Pendente\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1241,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"h5\",\n                              children: formatCurrency(getDelinquencyData().total)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1244,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1240,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1239,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1238,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              p: 2,\n                              bgcolor: \"#ff980020\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle2\",\n                              children: \"Quantidade de Mensalidades Pendentes\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1253,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"h5\",\n                              children: getDelinquencyData().count\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1256,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1252,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1251,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1250,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1237,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1236,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: \"Valores Pendentes por M\\xEAs de Vencimento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1268,\n                  columnNumber: 21\n                }, this), getDelinquencyData().byMonth.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    height: 300\n                  },\n                  children: /*#__PURE__*/_jsxDEV(BarChart, {\n                    series: [{\n                      data: getDelinquencyData().byMonth.data,\n                      label: \"Valor Pendente\",\n                      color: \"#f44336\",\n                      valueFormatter: value => formatCurrency(value)\n                    }],\n                    xAxis: [{\n                      data: getDelinquencyData().byMonth.labels,\n                      scaleType: \"band\"\n                    }],\n                    height: 250\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1273,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontStyle: \"italic\",\n                    mt: 2\n                  },\n                  children: \"N\\xE3o h\\xE1 dados pendentes para exibir.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1292,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1080,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openGenerateDialog,\n      onClose: handleCloseGenerateDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Gerar Mensalidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          sx: {\n            mb: 2\n          },\n          children: \"Selecione o m\\xEAs para gerar as mensalidades dos alunos.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          adapterLocale: \"pt-br\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            label: \"M\\xEAs/Ano de Refer\\xEAncia\",\n            value: monthToGenerate,\n            onChange: newValue => setMonthToGenerate(newValue),\n            views: [\"month\", \"year\"],\n            sx: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseGenerateDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGenerateMensalidades,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Gerar Mensalidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDeleteDialog,\n      onClose: handleCloseDeleteDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirmar Exclus\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Tem certeza que deseja excluir esta transa\\xE7\\xE3o? Esta a\\xE7\\xE3o n\\xE3o pode ser desfeita.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDeleteDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteTransaction,\n          color: \"error\",\n          variant: \"contained\",\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openTransactionDialog,\n      onClose: handleCloseTransactionDialog,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: selectedTransaction ? \"Editar Transação\" : \"Nova Transação\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.type,\n                label: \"Tipo\",\n                onChange: e => handleFormChange(\"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"income\",\n                  children: \"Receita\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1385,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"expense\",\n                  children: \"Despesa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1386,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!formErrors.category,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Categoria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1392,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.category,\n                label: \"Categoria\",\n                onChange: e => handleFormChange(\"category\", e.target.value),\n                children: transactionForm.type === \"income\" ? incomeCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: category.name\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1400,\n                  columnNumber: 25\n                }, this)) : expenseCategories.map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id,\n                  children: category.name\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1405,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1393,\n                columnNumber: 17\n              }, this), formErrors.category && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrors.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1411,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1391,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Descri\\xE7\\xE3o\",\n              value: transactionForm.description,\n              onChange: e => handleFormChange(\"description\", e.target.value),\n              error: !!formErrors.description,\n              helperText: formErrors.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1434,\n                  columnNumber: 21\n                }, this)\n              },\n              value: transactionForm.amount,\n              onChange: e => handleFormChange(\"amount\", e.target.value),\n              error: !!formErrors.amount,\n              helperText: formErrors.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1428,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1445,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.status,\n                label: \"Status\",\n                onChange: e => handleFormChange(\"status\", e.target.value),\n                children: transactionStatus.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status.id,\n                  children: status.name\n                }, status.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data de Vencimento\",\n                value: transactionForm.dueDate,\n                onChange: newValue => handleFormChange(\"dueDate\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    error: !!formErrors.dueDate,\n                    helperText: formErrors.dueDate\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1464,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data de Pagamento\",\n                value: transactionForm.date,\n                onChange: newValue => handleFormChange(\"date\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    error: !!formErrors.date,\n                    helperText: formErrors.date\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!formErrors.paymentMethod,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"M\\xE9todo de Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: transactionForm.paymentMethod || \"\",\n                label: \"M\\xE9todo de Pagamento\",\n                onChange: e => handleFormChange(\"paymentMethod\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Selecione um m\\xE9todo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1508,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1507,\n                  columnNumber: 19\n                }, this), paymentMethods.map(method => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: method.id,\n                  children: method.name\n                }, method.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1511,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 17\n              }, this), formErrors.paymentMethod && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrors.paymentMethod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1498,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Pessoa Relacionada\",\n              value: transactionForm.relatedPerson.name,\n              onChange: e => handleFormChange(\"relatedPerson.name\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1522,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Observa\\xE7\\xF5es\",\n              multiline: true,\n              rows: 3,\n              value: transactionForm.notes,\n              onChange: e => handleFormChange(\"notes\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1532,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseTransactionDialog,\n          color: \"primary\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTransaction,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openFilterDialog,\n      onClose: () => setOpenFilterDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Filtrar Transa\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1569,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: filters.type,\n                label: \"Tipo\",\n                onChange: e => handleFilterChange(\"type\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1575,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"income\",\n                  children: \"Receitas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1576,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"expense\",\n                  children: \"Despesas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1577,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1570,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1568,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: filters.status,\n                label: \"Status\",\n                onChange: e => handleFilterChange(\"status\", e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"all\",\n                  children: \"Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1589,\n                  columnNumber: 19\n                }, this), transactionStatus.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: status.id,\n                  children: status.name\n                }, status.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1591,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1584,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1582,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data Inicial\",\n                value: filters.dateFrom,\n                onChange: newValue => handleFilterChange(\"dateFrom\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1603,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n              dateAdapter: AdapterDayjs,\n              adapterLocale: \"pt-br\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Data Final\",\n                value: filters.dateTo,\n                onChange: newValue => handleFilterChange(\"dateTo\", newValue),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1620,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1616,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor M\\xEDnimo\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1639,\n                  columnNumber: 21\n                }, this)\n              },\n              value: filters.amountMin,\n              onChange: e => handleFilterChange(\"amountMin\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1633,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Valor M\\xE1ximo\",\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"R$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1655,\n                  columnNumber: 21\n                }, this)\n              },\n              value: filters.amountMax,\n              onChange: e => handleFilterChange(\"amountMax\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1649,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1648,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClearFilters,\n          color: \"secondary\",\n          children: \"Limpar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1667,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleApplyFilters,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Aplicar Filtros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1670,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1558,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        variant: \"filled\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1687,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 853,\n    columnNumber: 5\n  }, this);\n}\n_s(FinancialManagement, \"fe1bmsKl7ayZpH85SugjwUiDeEY=\", false, function () {\n  return [useTranslation];\n});\n_c = FinancialManagement;\nexport default FinancialManagement;\nvar _c;\n$RefreshReg$(_c, \"FinancialManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Tabs","Tab","Paper","Button","Grid","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","Select","MenuItem","InputAdornment","FormHelperText","Tooltip","Snackbar","Alert","Stack","TextField","IconButton","Card","DatePicker","AdapterDayjs","LocalizationProvider","DataGrid","ptBR","dayjs","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","FilterList","FilterListIcon","CheckCircle","CheckCircleIcon","ArrowUpward","ArrowUpwardIcon","ArrowDownward","ArrowDownwardIcon","AttachMoney","AttachMoneyIcon","Search","SearchIcon","useTranslation","transactions","incomeCategories","expenseCategories","transactionStatus","paymentMethods","getCategoryName","getPaymentMethodName","getStatusName","getStatusColor","LineChart","BarChart","PieChart","AreaChart","jsxDEV","_jsxDEV","Fragment","_Fragment","FinancialManagement","_s","t","currentTab","setCurrentTab","allTransactions","setAllTransactions","openGenerateDialog","setOpenGenerateDialog","monthToGenerate","setMonthToGenerate","selectedTransaction","setSelectedTransaction","openTransactionDialog","setOpenTransactionDialog","openDeleteDialog","setOpenDeleteDialog","snackbar","setSnackbar","open","message","severity","openFilterDialog","setOpenFilterDialog","filters","setFilters","type","status","dateFrom","dateTo","category","amountMin","amountMax","searchTerm","transactionForm","setTransactionForm","id","description","amount","date","dueDate","paymentMethod","relatedPerson","name","notes","formErrors","setFormErrors","reportPeriod","setReportPeriod","reportYear","setReportYear","year","reportMonth","setReportMonth","month","handleTabChange","event","newValue","handleOpenTransactionDialog","transaction","handleCloseTransactionDialog","validateTransactionForm","errors","trim","isNaN","parseFloat","Object","keys","length","handleSaveTransaction","newTransaction","format","updatedTransactions","map","handleOpenDeleteDialog","handleCloseDeleteDialog","handleDeleteTransaction","filter","handleUpdateTransactionStatus","newStatus","updatedTransaction","handleCloseSnackbar","handleFilterChange","field","value","handleApplyFilters","handleClearFilters","handleFormChange","includes","parent","child","split","getFilteredTransactions","isBefore","isAfter","parseInt","searchLower","toLowerCase","descriptionMatch","relatedPersonMatch","notesMatch","getReceivableTransactions","Array","isArray","getIncomeExpenseData","income","expense","incomeByMonth","fill","expenseByMonth","forEach","getDelinquencyData","total","count","byMonth","labels","data","byStatus","delinquentTransactions","totalAmount","reduce","pendingAmount","overdueAmount","monthMap","Map","monthYear","current","get","set","monthLabels","from","monthData","values","formatCurrency","Intl","NumberFormat","style","currency","transactionColumns","headerName","width","renderCell","params","label","size","fileName","_jsxFileName","lineNumber","columnNumber","icon","color","flex","minWidth","row","sx","children","valueFormatter","bgcolor","sortable","filterable","title","onClick","handleOpenGenerateDialog","handleCloseGenerateDialog","handleGenerateMensalidades","mesAno","novasMensalidades","p","mb","display","justifyContent","alignItems","variant","component","direction","spacing","startIcon","onChange","gap","placeholder","e","target","InputProps","startAdornment","position","height","rows","columns","pageSize","rowsPerPageOptions","disableSelectionOnClick","localeText","components","MuiDataGrid","defaultProps","autoHeight","gutterBottom","dateAdapter","adapterLocale","views","slotProps","textField","container","item","xs","series","xAxis","scaleType","mt","sm","a","b","fontStyle","onClose","maxWidth","fullWidth","error","helperText","method","multiline","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/FinancialManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Tabs,\n  Tab,\n  Paper,\n  Button,\n  Grid,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  FormHelperText,\n  Tooltip,\n  Snackbar,\n  Alert,\n  Stack,\n  TextField,\n  IconButton,\n  Card,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DataGrid, ptBR } from \"@mui/x-data-grid\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  FilterList as FilterListIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowUpward as ArrowUpwardIcon,\n  ArrowDownward as ArrowDownwardIcon,\n  AttachMoney as AttachMoneyIcon,\n  Search as SearchIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  transactions,\n  incomeCategories,\n  expenseCategories,\n  transactionStatus,\n  paymentMethods,\n  getCategoryName,\n  getPaymentMethodName,\n  getStatusName,\n  getStatusColor,\n} from \"../data/financialData\";\nimport { LineChart, BarChart, PieChart, AreaChart } from \"@mui/x-charts\";\n\nfunction FinancialManagement() {\n  // Usando a tradução apenas para elementos que precisam ser internacionalizados\n  const { t } = useTranslation();\n\n  // Estado para a aba atual\n  const [currentTab, setCurrentTab] = useState(\"receivables\");\n\n  // Estado para as transações\n  const [allTransactions, setAllTransactions] = useState([]);\n\n  // Estado para o diálogo de geração de mensalidades\n  const [openGenerateDialog, setOpenGenerateDialog] = useState(false);\n  const [monthToGenerate, setMonthToGenerate] = useState(dayjs());\n\n  // Estado para a transação selecionada para edição/detalhes\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n\n  // Estado para o diálogo de nova transação\n  const [openTransactionDialog, setOpenTransactionDialog] = useState(false);\n\n  // Estado para o diálogo de exclusão\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n\n  // Estado para snackbar\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  // Estado para o diálogo de filtros\n  const [openFilterDialog, setOpenFilterDialog] = useState(false);\n\n  // Estado para os filtros\n  const [filters, setFilters] = useState({\n    type: \"all\",\n    status: \"all\",\n    dateFrom: null,\n    dateTo: null,\n    category: \"all\",\n    amountMin: \"\",\n    amountMax: \"\",\n    searchTerm: \"\",\n  });\n\n  // Estado para o formulário de nova transação\n  const [transactionForm, setTransactionForm] = useState({\n    id: null,\n    type: \"income\",\n    description: \"\",\n    amount: \"\",\n    date: null,\n    dueDate: null,\n    category: \"\",\n    status: \"pending\",\n    paymentMethod: \"\",\n    relatedPerson: {\n      id: \"\",\n      name: \"\",\n      type: \"\",\n    },\n    notes: \"\",\n  });\n\n  // Estado para erros de validação do formulário\n  const [formErrors, setFormErrors] = useState({});\n\n  // Estados para o relatório\n  const [reportPeriod, setReportPeriod] = useState(\"current_month\");\n  const [reportYear, setReportYear] = useState(dayjs().year());\n  const [reportMonth, setReportMonth] = useState(dayjs().month());\n\n  // Carregar transações no carregamento do componente\n  useEffect(() => {\n    setAllTransactions(transactions);\n  }, []);\n\n  // Função para trocar a aba atual\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  // Função para abrir o diálogo de nova transação\n  const handleOpenTransactionDialog = (transaction = null) => {\n    if (transaction) {\n      // Editar transação existente\n      setTransactionForm({\n        ...transaction,\n        date: transaction.date ? dayjs(transaction.date) : null,\n        dueDate: transaction.dueDate ? dayjs(transaction.dueDate) : null,\n      });\n      setSelectedTransaction(transaction);\n    } else {\n      // Nova transação\n      setTransactionForm({\n        id: null,\n        type: \"income\",\n        description: \"\",\n        amount: \"\",\n        date: null,\n        dueDate: null,\n        category: \"\",\n        status: \"pending\",\n        paymentMethod: \"\",\n        relatedPerson: {\n          id: \"\",\n          name: \"\",\n          type: \"\",\n        },\n        notes: \"\",\n      });\n      setSelectedTransaction(null);\n    }\n    setFormErrors({});\n    setOpenTransactionDialog(true);\n  };\n\n  // Função para fechar o diálogo de transação\n  const handleCloseTransactionDialog = () => {\n    setOpenTransactionDialog(false);\n  };\n\n  // Função para validar o formulário de transação\n  const validateTransactionForm = () => {\n    const errors = {};\n\n    if (!transactionForm.description.trim()) {\n      errors.description = \"Descrição é obrigatória\";\n    }\n\n    if (\n      !transactionForm.amount ||\n      isNaN(transactionForm.amount) ||\n      parseFloat(transactionForm.amount) <= 0\n    ) {\n      errors.amount = \"Valor deve ser um número positivo\";\n    }\n\n    if (!transactionForm.dueDate) {\n      errors.dueDate = \"Data de vencimento é obrigatória\";\n    }\n\n    if (!transactionForm.category) {\n      errors.category = \"Categoria é obrigatória\";\n    }\n\n    if (transactionForm.status === \"paid\" && !transactionForm.paymentMethod) {\n      errors.paymentMethod =\n        \"Método de pagamento é obrigatório para transações pagas\";\n    }\n\n    if (transactionForm.status === \"paid\" && !transactionForm.date) {\n      errors.date = \"Data de pagamento é obrigatória para transações pagas\";\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Função para salvar uma transação (nova ou editada)\n  const handleSaveTransaction = () => {\n    if (!validateTransactionForm()) {\n      return;\n    }\n\n    const newTransaction = {\n      ...transactionForm,\n      id: transactionForm.id || allTransactions.length + 1,\n      amount: parseFloat(transactionForm.amount),\n      date: transactionForm.date\n        ? transactionForm.date.format(\"YYYY-MM-DD\")\n        : null,\n      dueDate: transactionForm.dueDate\n        ? transactionForm.dueDate.format(\"YYYY-MM-DD\")\n        : null,\n    };\n\n    if (selectedTransaction) {\n      // Editar transação existente\n      const updatedTransactions = allTransactions.map((t) =>\n        t.id === newTransaction.id ? newTransaction : t\n      );\n      setAllTransactions(updatedTransactions);\n      setSnackbar({\n        open: true,\n        message: \"Transação atualizada com sucesso!\",\n        severity: \"success\",\n      });\n    } else {\n      // Adicionar nova transação\n      setAllTransactions([...allTransactions, newTransaction]);\n      setSnackbar({\n        open: true,\n        message: \"Transação adicionada com sucesso!\",\n        severity: \"success\",\n      });\n    }\n\n    handleCloseTransactionDialog();\n  };\n\n  // Função para abrir o diálogo de exclusão\n  const handleOpenDeleteDialog = (transaction) => {\n    setSelectedTransaction(transaction);\n    setOpenDeleteDialog(true);\n  };\n\n  // Função para fechar o diálogo de exclusão\n  const handleCloseDeleteDialog = () => {\n    setOpenDeleteDialog(false);\n  };\n\n  // Função para excluir uma transação\n  const handleDeleteTransaction = () => {\n    const updatedTransactions = allTransactions.filter(\n      (t) => t.id !== selectedTransaction.id\n    );\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: \"Transação excluída com sucesso!\",\n      severity: \"success\",\n    });\n    handleCloseDeleteDialog();\n  };\n\n  // Função para atualizar o status de uma transação (dar baixa)\n  const handleUpdateTransactionStatus = (transaction, newStatus) => {\n    const updatedTransaction = {\n      ...transaction,\n      status: newStatus,\n      date:\n        newStatus === \"paid\" ? dayjs().format(\"YYYY-MM-DD\") : transaction.date,\n    };\n\n    const updatedTransactions = allTransactions.map((t) =>\n      t.id === transaction.id ? updatedTransaction : t\n    );\n\n    setAllTransactions(updatedTransactions);\n    setSnackbar({\n      open: true,\n      message: `Status atualizado para: ${getStatusName(newStatus)}`,\n      severity: \"success\",\n    });\n  };\n\n  // Função para fechar o snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false,\n    });\n  };\n\n  // Função para atualizar o filtro\n  const handleFilterChange = (field, value) => {\n    setFilters({\n      ...filters,\n      [field]: value,\n    });\n  };\n\n  // Função para aplicar os filtros\n  const handleApplyFilters = () => {\n    setOpenFilterDialog(false);\n  };\n\n  // Função para limpar os filtros\n  const handleClearFilters = () => {\n    setFilters({\n      type: \"all\",\n      status: \"all\",\n      dateFrom: null,\n      dateTo: null,\n      category: \"all\",\n      amountMin: \"\",\n      amountMax: \"\",\n      searchTerm: \"\",\n    });\n  };\n\n  // Função para atualizar o campo do formulário\n  const handleFormChange = (field, value) => {\n    if (field.includes(\".\")) {\n      const [parent, child] = field.split(\".\");\n      setTransactionForm({\n        ...transactionForm,\n        [parent]: {\n          ...transactionForm[parent],\n          [child]: value,\n        },\n      });\n    } else {\n      setTransactionForm({\n        ...transactionForm,\n        [field]: value,\n      });\n    }\n  };\n\n  // Função para filtrar as transações\n  const getFilteredTransactions = () => {\n    return allTransactions.filter((transaction) => {\n      // Filtrar por tipo\n      if (filters.type !== \"all\" && transaction.type !== filters.type) {\n        return false;\n      }\n\n      // Filtrar por status\n      if (filters.status !== \"all\" && transaction.status !== filters.status) {\n        return false;\n      }\n\n      // Filtrar por data de início\n      if (\n        filters.dateFrom &&\n        transaction.dueDate &&\n        dayjs(transaction.dueDate).isBefore(dayjs(filters.dateFrom))\n      ) {\n        return false;\n      }\n\n      // Filtrar por data de fim\n      if (\n        filters.dateTo &&\n        transaction.dueDate &&\n        dayjs(transaction.dueDate).isAfter(dayjs(filters.dateTo))\n      ) {\n        return false;\n      }\n\n      // Filtrar por categoria\n      if (filters.category !== \"all\") {\n        if (parseInt(filters.category) !== transaction.category) {\n          return false;\n        }\n      }\n\n      // Filtrar por valor mínimo\n      if (\n        filters.amountMin &&\n        transaction.amount < parseFloat(filters.amountMin)\n      ) {\n        return false;\n      }\n\n      // Filtrar por valor máximo\n      if (\n        filters.amountMax &&\n        transaction.amount > parseFloat(filters.amountMax)\n      ) {\n        return false;\n      }\n\n      // Filtrar por termo de busca\n      if (filters.searchTerm) {\n        const searchLower = filters.searchTerm.toLowerCase();\n        const descriptionMatch = transaction.description\n          .toLowerCase()\n          .includes(searchLower);\n        const relatedPersonMatch = transaction.relatedPerson.name\n          .toLowerCase()\n          .includes(searchLower);\n        const notesMatch = transaction.notes\n          .toLowerCase()\n          .includes(searchLower);\n\n        if (!descriptionMatch && !relatedPersonMatch && !notesMatch) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  };\n\n  // Obter transações a receber (mensalidades)\n  const getReceivableTransactions = () => {\n    // Certifique-se de que allTransactions existe e é um array\n    if (!Array.isArray(allTransactions)) return [];\n\n    return allTransactions.filter((transaction) => {\n      if (!transaction) return false;\n\n      return (\n        transaction.type === \"income\" &&\n        transaction.category === 1 && // Categoria 1 = Mensalidade\n        (transaction.status === \"pending\" || transaction.status === \"overdue\")\n      );\n    });\n  };\n\n  // Função para obter dados para o relatório de receitas e despesas por mês\n  const getIncomeExpenseData = () => {\n    // Se não houver transações, retornar arrays vazios\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        income: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        expense: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      };\n    }\n\n    // Inicializar arrays com zeros para cada mês\n    const incomeByMonth = Array(12).fill(0);\n    const expenseByMonth = Array(12).fill(0);\n\n    // Filtrar as transações pelo ano selecionado e somar por mês\n    allTransactions.forEach((transaction) => {\n      if (!transaction || !transaction.date) return;\n\n      const date = dayjs(transaction.date);\n      if (date.year() !== reportYear) return;\n\n      const month = date.month();\n\n      if (transaction.type === \"income\" && transaction.status === \"paid\") {\n        incomeByMonth[month] += transaction.amount;\n      } else if (\n        transaction.type === \"expense\" &&\n        transaction.status === \"paid\"\n      ) {\n        expenseByMonth[month] += transaction.amount;\n      }\n    });\n\n    return {\n      income: incomeByMonth,\n      expense: expenseByMonth,\n    };\n  };\n\n  // Função para obter dados para o relatório de inadimplência\n  const getDelinquencyData = () => {\n    // Se não houver transações, retornar objeto vazio\n    if (!Array.isArray(allTransactions) || allTransactions.length === 0) {\n      return {\n        total: 0,\n        count: 0,\n        byMonth: {\n          labels: [],\n          data: [],\n        },\n        byStatus: {\n          labels: [\"Pendente\", \"Atrasado\"],\n          data: [0, 0],\n        },\n      };\n    }\n\n    // Filtra transações pendentes e atrasadas\n    const delinquentTransactions = allTransactions.filter(\n      (transaction) =>\n        transaction?.type === \"income\" &&\n        (transaction?.status === \"pending\" || transaction?.status === \"overdue\")\n    );\n\n    // Calcula o total de valores pendentes\n    const totalAmount = delinquentTransactions.reduce(\n      (total, transaction) => total + (transaction?.amount || 0),\n      0\n    );\n\n    // Agrupa por status\n    const pendingAmount = delinquentTransactions\n      .filter((t) => t?.status === \"pending\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    const overdueAmount = delinquentTransactions\n      .filter((t) => t?.status === \"overdue\")\n      .reduce((total, t) => total + (t?.amount || 0), 0);\n\n    // Agrupa por mês de vencimento\n    const monthMap = new Map();\n    delinquentTransactions.forEach((transaction) => {\n      if (!transaction?.dueDate) return;\n\n      const monthYear = dayjs(transaction.dueDate).format(\"MM/YYYY\");\n      const current = monthMap.get(monthYear) || 0;\n      monthMap.set(monthYear, current + (transaction.amount || 0));\n    });\n\n    // Converte o mapa para arrays de labels e dados\n    const monthLabels = Array.from(monthMap.keys());\n    const monthData = Array.from(monthMap.values());\n\n    return {\n      total: totalAmount,\n      count: delinquentTransactions.length,\n      byMonth: {\n        labels: monthLabels,\n        data: monthData,\n      },\n      byStatus: {\n        labels: [\"Pendente\", \"Atrasado\"],\n        data: [pendingAmount, overdueAmount],\n      },\n    };\n  };\n\n  // Função para formatar valores monetários\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat(\"pt-BR\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    }).format(value);\n  };\n\n  // Colunas para a tabela de transações\n  const transactionColumns = [\n    {\n      field: \"type\",\n      headerName: \"Tipo\",\n      width: 100,\n      renderCell: (params) => {\n        // Verificar se o valor existe\n        if (!params.value) {\n          return <Chip label=\"Desconhecido\" size=\"small\" />;\n        }\n\n        return (\n          <Chip\n            icon={\n              params.value === \"income\" ? (\n                <ArrowUpwardIcon />\n              ) : (\n                <ArrowDownwardIcon />\n              )\n            }\n            label={params.value === \"income\" ? \"Receita\" : \"Despesa\"}\n            color={params.value === \"income\" ? \"success\" : \"error\"}\n            size=\"small\"\n          />\n        );\n      },\n    },\n    {\n      field: \"description\",\n      headerName: \"Descrição\",\n      flex: 1,\n      minWidth: 200,\n    },\n    {\n      field: \"amount\",\n      headerName: \"Valor\",\n      width: 120,\n      renderCell: (params) => {\n        // Verificar se o valor existe e se a row existe\n        if (!params.value || !params.row) {\n          return \"R$ 0,00\";\n        }\n\n        return (\n          <Typography\n            sx={{\n              color:\n                params.row.type === \"income\" ? \"success.main\" : \"error.main\",\n            }}\n          >\n            {new Intl.NumberFormat(\"pt-BR\", {\n              style: \"currency\",\n              currency: \"BRL\",\n            }).format(params.value)}\n          </Typography>\n        );\n      },\n    },\n    {\n      field: \"dueDate\",\n      headerName: \"Vencimento\",\n      width: 120,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return dayjs(params.value).format(\"DD/MM/YYYY\");\n      },\n    },\n    {\n      field: \"date\",\n      headerName: \"Pagamento\",\n      width: 120,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return dayjs(params.value).format(\"DD/MM/YYYY\");\n      },\n    },\n    {\n      field: \"category\",\n      headerName: \"Categoria\",\n      width: 150,\n      valueFormatter: (params) => {\n        if (!params.value || !params.row) return \"Desconhecido\";\n        const type = params.row.type || \"income\";\n        return getCategoryName(params.value, type);\n      },\n    },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 120,\n      renderCell: (params) => {\n        // Verificar se o valor existe\n        if (!params.value) {\n          return <Chip label=\"Desconhecido\" size=\"small\" />;\n        }\n\n        return (\n          <Chip\n            label={getStatusName(params.value)}\n            size=\"small\"\n            sx={{\n              bgcolor: `${getStatusColor(params.value)}20`,\n              color: getStatusColor(params.value),\n            }}\n          />\n        );\n      },\n    },\n    {\n      field: \"paymentMethod\",\n      headerName: \"Método\",\n      width: 150,\n      valueFormatter: (params) => {\n        if (!params.value) return \"\";\n        return getPaymentMethodName(params.value);\n      },\n    },\n    {\n      field: \"actions\",\n      headerName: \"Ações\",\n      width: 180,\n      sortable: false,\n      filterable: false,\n      renderCell: (params) => {\n        // Verificar se row existe para evitar erros\n        if (!params.row) return null;\n\n        return (\n          <Box>\n            {(params.row.status === \"pending\" ||\n              params.row.status === \"overdue\") && (\n              <Tooltip title=\"Dar baixa\">\n                <IconButton\n                  size=\"small\"\n                  color=\"success\"\n                  onClick={() =>\n                    handleUpdateTransactionStatus(params.row, \"paid\")\n                  }\n                >\n                  <CheckCircleIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title=\"Editar\">\n              <IconButton\n                size=\"small\"\n                color=\"primary\"\n                onClick={() => handleOpenTransactionDialog(params.row)}\n              >\n                <EditIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Excluir\">\n              <IconButton\n                size=\"small\"\n                color=\"error\"\n                onClick={() => handleOpenDeleteDialog(params.row)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        );\n      },\n    },\n  ];\n\n  // Função para abrir o diálogo de geração de mensalidades\n  const handleOpenGenerateDialog = () => {\n    setOpenGenerateDialog(true);\n  };\n\n  // Função para fechar o diálogo de geração de mensalidades\n  const handleCloseGenerateDialog = () => {\n    setOpenGenerateDialog(false);\n  };\n\n  // Função para gerar mensalidades\n  const handleGenerateMensalidades = () => {\n    // Aqui teria a lógica para gerar as mensalidades para todos os alunos\n    // Como não temos uma lista de alunos real, vamos simular com alguns exemplos\n\n    const mesAno = monthToGenerate.format(\"MM/YYYY\");\n    const novasMensalidades = [\n      {\n        id: allTransactions.length + 1,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - João Silva`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 101,\n          name: \"João Silva\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 2,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Maria Oliveira`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 102,\n          name: \"Maria Oliveira\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 3,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Pedro Santos`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 103,\n          name: \"Pedro Santos\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 4,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Ana Costa`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 104,\n          name: \"Ana Costa\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n      {\n        id: allTransactions.length + 5,\n        type: \"income\",\n        description: `Mensalidade ${mesAno} - Ricardo Gomes`,\n        amount: 120.0,\n        date: null,\n        dueDate: monthToGenerate.date(10).format(\"YYYY-MM-DD\"),\n        category: 1,\n        status: \"pending\",\n        paymentMethod: null,\n        relatedPerson: {\n          id: 105,\n          name: \"Ricardo Gomes\",\n          type: \"student\",\n        },\n        notes: `Mensalidade referente a ${mesAno}`,\n      },\n    ];\n\n    setAllTransactions([...allTransactions, ...novasMensalidades]);\n\n    setSnackbar({\n      open: true,\n      message: `Mensalidades para ${mesAno} geradas com sucesso!`,\n      severity: \"success\",\n    });\n\n    handleCloseGenerateDialog();\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: 2,\n          }}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Gestão Financeira\n          </Typography>\n\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AttachMoneyIcon />}\n              onClick={handleOpenGenerateDialog}\n            >\n              Gerar Mensalidades\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              startIcon={<AddIcon />}\n              onClick={() => handleOpenTransactionDialog()}\n            >\n              Nova Transação\n            </Button>\n          </Stack>\n        </Box>\n\n        <Tabs value={currentTab} onChange={handleTabChange} sx={{ mb: 2 }}>\n          <Tab label=\"Contas a Receber\" value=\"receivables\" />\n          <Tab label=\"Contas a Pagar\" value=\"payables\" />\n          <Tab label=\"Histórico\" value=\"history\" />\n          <Tab label=\"Visão Geral\" value=\"overview\" />\n          <Tab label=\"Relatórios\" value=\"reports\" />\n        </Tabs>\n      </Paper>\n\n      {/* Conteúdo para a aba de contas a receber */}\n      {currentTab === \"receivables\" && (\n        <>\n          <Paper sx={{ p: 2, mb: 3 }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n              }}\n            >\n              <Typography variant=\"h6\">Mensalidades a Receber</Typography>\n\n              <Box sx={{ display: \"flex\", gap: 1 }}>\n                <TextField\n                  placeholder=\"Buscar...\"\n                  size=\"small\"\n                  value={filters.searchTerm}\n                  onChange={(e) =>\n                    handleFilterChange(\"searchTerm\", e.target.value)\n                  }\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<FilterListIcon />}\n                  onClick={() => setOpenFilterDialog(true)}\n                  size=\"small\"\n                >\n                  Filtros\n                </Button>\n              </Box>\n            </Box>\n\n            <Box sx={{ height: 500, width: \"100%\" }}>\n              <DataGrid\n                rows={getReceivableTransactions()}\n                columns={transactionColumns}\n                pageSize={10}\n                rowsPerPageOptions={[10, 25, 50]}\n                disableSelectionOnClick\n                localeText={ptBR.components.MuiDataGrid.defaultProps.localeText}\n                autoHeight\n              />\n            </Box>\n          </Paper>\n        </>\n      )}\n\n      {/* Conteúdo para a aba de contas a pagar */}\n      {currentTab === \"payables\" && (\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Contas a Pagar\n          </Typography>\n          {/* Interface para contas a pagar será implementada aqui */}\n          <Typography>\n            Esta funcionalidade será implementada em breve.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Conteúdo para a aba de histórico */}\n      {currentTab === \"history\" && (\n        <Paper sx={{ p: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mb: 2,\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              {t(\"finances.historyTitle\", \"Histórico de Transações\")}\n            </Typography>\n\n            <Box sx={{ display: \"flex\", gap: 1 }}>\n              <TextField\n                placeholder={t(\"finances.search\", \"Buscar...\")}\n                size=\"small\"\n                value={filters.searchTerm}\n                onChange={(e) =>\n                  handleFilterChange(\"searchTerm\", e.target.value)\n                }\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <Button\n                variant=\"outlined\"\n                startIcon={<FilterListIcon />}\n                onClick={() => setOpenFilterDialog(true)}\n                size=\"small\"\n              >\n                {t(\"finances.filters\", \"Filtros\")}\n              </Button>\n            </Box>\n          </Box>\n\n          <Box sx={{ height: 500, width: \"100%\" }}>\n            <DataGrid\n              rows={getFilteredTransactions()}\n              columns={transactionColumns}\n              pageSize={10}\n              rowsPerPageOptions={[10, 25, 50]}\n              disableSelectionOnClick\n              localeText={ptBR.components.MuiDataGrid.defaultProps.localeText}\n              autoHeight\n            />\n          </Box>\n        </Paper>\n      )}\n\n      {/* Conteúdo para a aba de visão geral */}\n      {currentTab === \"overview\" && (\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Visão Geral\n          </Typography>\n          {/* Interface para visão geral será implementada aqui */}\n          <Typography>\n            Esta funcionalidade será implementada em breve.\n          </Typography>\n        </Paper>\n      )}\n\n      {/* Conteúdo para a aba de relatórios */}\n      {currentTab === \"reports\" && (\n        <Paper sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {t(\"finances.reportsTitle\", \"Relatórios Financeiros\")}\n          </Typography>\n\n          {/* Seleção de período */}\n          <Box sx={{ mb: 3, display: \"flex\", gap: 2, alignItems: \"center\" }}>\n            <FormControl variant=\"outlined\" size=\"small\" sx={{ minWidth: 200 }}>\n              <InputLabel>Período</InputLabel>\n              <Select\n                value={reportPeriod}\n                onChange={(e) => setReportPeriod(e.target.value)}\n                label=\"Período\"\n              >\n                <MenuItem value=\"current_month\">Mês Atual</MenuItem>\n                <MenuItem value=\"previous_month\">Mês Anterior</MenuItem>\n                <MenuItem value=\"current_year\">Ano Atual</MenuItem>\n                <MenuItem value=\"custom\">Personalizado</MenuItem>\n              </Select>\n            </FormControl>\n\n            {reportPeriod === \"custom\" && (\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  views={[\"year\"]}\n                  label=\"Ano\"\n                  value={dayjs().year(reportYear)}\n                  onChange={(newValue) =>\n                    setReportYear(newValue ? newValue.year() : dayjs().year())\n                  }\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      sx: { minWidth: 120 },\n                    },\n                  }}\n                />\n              </LocalizationProvider>\n            )}\n          </Box>\n\n          <Grid container spacing={3}>\n            {/* Relatório 1: Receitas e Despesas */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Receitas e Despesas ({reportYear})\n                </Typography>\n\n                {/* Gráfico de Receitas e Despesas */}\n                <Box sx={{ height: 400, width: \"100%\" }}>\n                  <BarChart\n                    series={[\n                      {\n                        data: getIncomeExpenseData().income,\n                        label: \"Receitas\",\n                        color: \"#4caf50\",\n                        valueFormatter: (value) => formatCurrency(value),\n                      },\n                      {\n                        data: getIncomeExpenseData().expense,\n                        label: \"Despesas\",\n                        color: \"#f44336\",\n                        valueFormatter: (value) => formatCurrency(value),\n                      },\n                    ]}\n                    xAxis={[\n                      {\n                        data: [\n                          \"Jan\",\n                          \"Fev\",\n                          \"Mar\",\n                          \"Abr\",\n                          \"Mai\",\n                          \"Jun\",\n                          \"Jul\",\n                          \"Ago\",\n                          \"Set\",\n                          \"Out\",\n                          \"Nov\",\n                          \"Dez\",\n                        ],\n                        scaleType: \"band\",\n                      },\n                    ]}\n                    height={300}\n                  />\n                </Box>\n\n                {/* Tabela de resumo */}\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Resumo Anual\n                  </Typography>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} sm={4}>\n                      <Card>\n                        <Box sx={{ p: 2, bgcolor: \"#4caf5020\" }}>\n                          <Typography variant=\"subtitle2\">\n                            Total de Receitas\n                          </Typography>\n                          <Typography variant=\"h5\">\n                            {formatCurrency(\n                              getIncomeExpenseData().income.reduce(\n                                (a, b) => a + b,\n                                0\n                              )\n                            )}\n                          </Typography>\n                        </Box>\n                      </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                      <Card>\n                        <Box sx={{ p: 2, bgcolor: \"#f4433620\" }}>\n                          <Typography variant=\"subtitle2\">\n                            Total de Despesas\n                          </Typography>\n                          <Typography variant=\"h5\">\n                            {formatCurrency(\n                              getIncomeExpenseData().expense.reduce(\n                                (a, b) => a + b,\n                                0\n                              )\n                            )}\n                          </Typography>\n                        </Box>\n                      </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                      <Card>\n                        <Box sx={{ p: 2, bgcolor: \"#2196f320\" }}>\n                          <Typography variant=\"subtitle2\">Saldo</Typography>\n                          <Typography variant=\"h5\">\n                            {formatCurrency(\n                              getIncomeExpenseData().income.reduce(\n                                (a, b) => a + b,\n                                0\n                              ) -\n                                getIncomeExpenseData().expense.reduce(\n                                  (a, b) => a + b,\n                                  0\n                                )\n                            )}\n                          </Typography>\n                        </Box>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Paper>\n            </Grid>\n\n            {/* Relatório 2: Inadimplência */}\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Relatório de Inadimplência\n                </Typography>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <Box sx={{ p: 2 }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Valores Pendentes por Status\n                      </Typography>\n                      <Box sx={{ height: 300 }}>\n                        <PieChart\n                          series={[\n                            {\n                              data: [\n                                {\n                                  id: 0,\n                                  value: getDelinquencyData().byStatus.data[0],\n                                  label: \"Pendente\",\n                                  color: \"#ff9800\",\n                                },\n                                {\n                                  id: 1,\n                                  value: getDelinquencyData().byStatus.data[1],\n                                  label: \"Atrasado\",\n                                  color: \"#f44336\",\n                                },\n                              ],\n                              valueFormatter: (value) => formatCurrency(value),\n                            },\n                          ]}\n                          height={250}\n                        />\n                      </Box>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Box sx={{ p: 2 }}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Resumo de Inadimplência\n                      </Typography>\n                      <Box sx={{ mt: 2 }}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <Card>\n                              <Box sx={{ p: 2, bgcolor: \"#f4433620\" }}>\n                                <Typography variant=\"subtitle2\">\n                                  Total Pendente\n                                </Typography>\n                                <Typography variant=\"h5\">\n                                  {formatCurrency(getDelinquencyData().total)}\n                                </Typography>\n                              </Box>\n                            </Card>\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Card>\n                              <Box sx={{ p: 2, bgcolor: \"#ff980020\" }}>\n                                <Typography variant=\"subtitle2\">\n                                  Quantidade de Mensalidades Pendentes\n                                </Typography>\n                                <Typography variant=\"h5\">\n                                  {getDelinquencyData().count}\n                                </Typography>\n                              </Box>\n                            </Card>\n                          </Grid>\n                        </Grid>\n                      </Box>\n                    </Box>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Valores Pendentes por Mês de Vencimento\n                    </Typography>\n                    {getDelinquencyData().byMonth.labels.length > 0 ? (\n                      <Box sx={{ height: 300 }}>\n                        <BarChart\n                          series={[\n                            {\n                              data: getDelinquencyData().byMonth.data,\n                              label: \"Valor Pendente\",\n                              color: \"#f44336\",\n                              valueFormatter: (value) => formatCurrency(value),\n                            },\n                          ]}\n                          xAxis={[\n                            {\n                              data: getDelinquencyData().byMonth.labels,\n                              scaleType: \"band\",\n                            },\n                          ]}\n                          height={250}\n                        />\n                      </Box>\n                    ) : (\n                      <Typography\n                        variant=\"body2\"\n                        sx={{ fontStyle: \"italic\", mt: 2 }}\n                      >\n                        Não há dados pendentes para exibir.\n                      </Typography>\n                    )}\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n\n      {/* Diálogo de Gerar Mensalidades */}\n      <Dialog open={openGenerateDialog} onClose={handleCloseGenerateDialog}>\n        <DialogTitle>Gerar Mensalidades</DialogTitle>\n        <DialogContent>\n          <DialogContentText sx={{ mb: 2 }}>\n            Selecione o mês para gerar as mensalidades dos alunos.\n          </DialogContentText>\n\n          <LocalizationProvider\n            dateAdapter={AdapterDayjs}\n            adapterLocale=\"pt-br\"\n          >\n            <DatePicker\n              label=\"Mês/Ano de Referência\"\n              value={monthToGenerate}\n              onChange={(newValue) => setMonthToGenerate(newValue)}\n              views={[\"month\", \"year\"]}\n              sx={{ width: \"100%\" }}\n            />\n          </LocalizationProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseGenerateDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleGenerateMensalidades}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Gerar Mensalidades\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de exclusão */}\n      <Dialog open={openDeleteDialog} onClose={handleCloseDeleteDialog}>\n        <DialogTitle>Confirmar Exclusão</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Tem certeza que deseja excluir esta transação? Esta ação não pode\n            ser desfeita.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDeleteDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleDeleteTransaction}\n            color=\"error\"\n            variant=\"contained\"\n          >\n            Excluir\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de Nova/Editar Transação */}\n      <Dialog\n        open={openTransactionDialog}\n        onClose={handleCloseTransactionDialog}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          {selectedTransaction ? \"Editar Transação\" : \"Nova Transação\"}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo</InputLabel>\n                <Select\n                  value={transactionForm.type}\n                  label=\"Tipo\"\n                  onChange={(e) => handleFormChange(\"type\", e.target.value)}\n                >\n                  <MenuItem value=\"income\">Receita</MenuItem>\n                  <MenuItem value=\"expense\">Despesa</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth error={!!formErrors.category}>\n                <InputLabel>Categoria</InputLabel>\n                <Select\n                  value={transactionForm.category}\n                  label=\"Categoria\"\n                  onChange={(e) => handleFormChange(\"category\", e.target.value)}\n                >\n                  {transactionForm.type === \"income\"\n                    ? incomeCategories.map((category) => (\n                        <MenuItem key={category.id} value={category.id}>\n                          {category.name}\n                        </MenuItem>\n                      ))\n                    : expenseCategories.map((category) => (\n                        <MenuItem key={category.id} value={category.id}>\n                          {category.name}\n                        </MenuItem>\n                      ))}\n                </Select>\n                {formErrors.category && (\n                  <FormHelperText>{formErrors.category}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Descrição\"\n                value={transactionForm.description}\n                onChange={(e) =>\n                  handleFormChange(\"description\", e.target.value)\n                }\n                error={!!formErrors.description}\n                helperText={formErrors.description}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={transactionForm.amount}\n                onChange={(e) => handleFormChange(\"amount\", e.target.value)}\n                error={!!formErrors.amount}\n                helperText={formErrors.amount}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={transactionForm.status}\n                  label=\"Status\"\n                  onChange={(e) => handleFormChange(\"status\", e.target.value)}\n                >\n                  {transactionStatus.map((status) => (\n                    <MenuItem key={status.id} value={status.id}>\n                      {status.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data de Vencimento\"\n                  value={transactionForm.dueDate}\n                  onChange={(newValue) => handleFormChange(\"dueDate\", newValue)}\n                  slotProps={{\n                    textField: {\n                      fullWidth: true,\n                      error: !!formErrors.dueDate,\n                      helperText: formErrors.dueDate,\n                    },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data de Pagamento\"\n                  value={transactionForm.date}\n                  onChange={(newValue) => handleFormChange(\"date\", newValue)}\n                  slotProps={{\n                    textField: {\n                      fullWidth: true,\n                      error: !!formErrors.date,\n                      helperText: formErrors.date,\n                    },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth error={!!formErrors.paymentMethod}>\n                <InputLabel>Método de Pagamento</InputLabel>\n                <Select\n                  value={transactionForm.paymentMethod || \"\"}\n                  label=\"Método de Pagamento\"\n                  onChange={(e) =>\n                    handleFormChange(\"paymentMethod\", e.target.value)\n                  }\n                >\n                  <MenuItem value=\"\">\n                    <em>Selecione um método</em>\n                  </MenuItem>\n                  {paymentMethods.map((method) => (\n                    <MenuItem key={method.id} value={method.id}>\n                      {method.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                {formErrors.paymentMethod && (\n                  <FormHelperText>{formErrors.paymentMethod}</FormHelperText>\n                )}\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Pessoa Relacionada\"\n                value={transactionForm.relatedPerson.name}\n                onChange={(e) =>\n                  handleFormChange(\"relatedPerson.name\", e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Observações\"\n                multiline\n                rows={3}\n                value={transactionForm.notes}\n                onChange={(e) => handleFormChange(\"notes\", e.target.value)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseTransactionDialog} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button\n            onClick={handleSaveTransaction}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Diálogo de Filtros */}\n      <Dialog\n        open={openFilterDialog}\n        onClose={() => setOpenFilterDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Filtrar Transações</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo</InputLabel>\n                <Select\n                  value={filters.type}\n                  label=\"Tipo\"\n                  onChange={(e) => handleFilterChange(\"type\", e.target.value)}\n                >\n                  <MenuItem value=\"all\">Todos</MenuItem>\n                  <MenuItem value=\"income\">Receitas</MenuItem>\n                  <MenuItem value=\"expense\">Despesas</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filters.status}\n                  label=\"Status\"\n                  onChange={(e) => handleFilterChange(\"status\", e.target.value)}\n                >\n                  <MenuItem value=\"all\">Todos</MenuItem>\n                  {transactionStatus.map((status) => (\n                    <MenuItem key={status.id} value={status.id}>\n                      {status.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data Inicial\"\n                  value={filters.dateFrom}\n                  onChange={(newValue) =>\n                    handleFilterChange(\"dateFrom\", newValue)\n                  }\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                adapterLocale=\"pt-br\"\n              >\n                <DatePicker\n                  label=\"Data Final\"\n                  value={filters.dateTo}\n                  onChange={(newValue) =>\n                    handleFilterChange(\"dateTo\", newValue)\n                  }\n                  slotProps={{\n                    textField: { fullWidth: true },\n                  }}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor Mínimo\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={filters.amountMin}\n                onChange={(e) =>\n                  handleFilterChange(\"amountMin\", e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Valor Máximo\"\n                type=\"number\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">R$</InputAdornment>\n                  ),\n                }}\n                value={filters.amountMax}\n                onChange={(e) =>\n                  handleFilterChange(\"amountMax\", e.target.value)\n                }\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClearFilters} color=\"secondary\">\n            Limpar Filtros\n          </Button>\n          <Button\n            onClick={handleApplyFilters}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Aplicar Filtros\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar para feedback */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbar.severity}\n          variant=\"filled\"\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default FinancialManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}