{"ast":null,"code":"var _jsxFileName = \"/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/StudentWorkoutList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Paper, Grid, Card, CardContent, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Chip, Divider, Avatar, List, ListItem, ListItemText, ListItemAvatar, InputAdornment, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, Tabs, Tab, Snackbar, Alert } from \"@mui/material\";\nimport { Search as SearchIcon, ExpandMore as ExpandMoreIcon, FitnessCenter as FitnessCenterIcon, Person as PersonIcon, Edit as EditIcon, History as HistoryIcon } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport ExerciseTable from \"./ExerciseTable\";\nimport WorkoutTemplates from \"./WorkoutTemplates\";\nimport dayjs from \"dayjs\";\n\n// Dados fictícios de alunos com treinos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStudentWorkouts = [{\n  id: 1,\n  studentId: 1,\n  studentName: \"João Silva\",\n  workoutName: \"Treino Inicial - Adaptação\",\n  exercises: [{\n    id: \"sw1e1\",\n    name: \"Supino Reto\",\n    sets: \"3\",\n    weight: \"15\",\n    reps: \"12\",\n    notes: \"Movimento controlado\",\n    muscleGroup: \"chest\"\n  }, {\n    id: \"sw1e2\",\n    name: \"Leg Press\",\n    sets: \"3\",\n    weight: \"60\",\n    reps: \"15\",\n    notes: \"Posição neutra\",\n    muscleGroup: \"legs\"\n  }],\n  history: [{\n    date: \"2023-05-10\",\n    action: \"created\",\n    description: \"Treino inicial criado\"\n  }, {\n    date: \"2023-06-05\",\n    action: \"updated\",\n    description: \"Aumentado peso no Leg Press de 50 para 60kg\"\n  }],\n  lastUpdated: \"2023-06-05\",\n  observations: \"Aluno iniciante com bom progresso\",\n  active: true\n}, {\n  id: 2,\n  studentId: 2,\n  studentName: \"Maria Oliveira\",\n  workoutName: \"Hipertrofia - Intermediário\",\n  exercises: [{\n    id: \"sw2e1\",\n    name: \"Agachamento\",\n    sets: \"4\",\n    weight: \"65\",\n    reps: \"10\",\n    notes: \"Profundidade completa\",\n    muscleGroup: \"legs\"\n  }, {\n    id: \"sw2e2\",\n    name: \"Supino Inclinado\",\n    sets: \"4\",\n    weight: \"45\",\n    reps: \"8\",\n    notes: \"Foco na contração\",\n    muscleGroup: \"chest\"\n  }],\n  history: [{\n    date: \"2023-04-15\",\n    action: \"created\",\n    description: \"Treino customizado criado\"\n  }, {\n    date: \"2023-05-20\",\n    action: \"updated\",\n    description: \"Ajustada série no Supino Inclinado\"\n  }],\n  lastUpdated: \"2023-05-20\",\n  observations: \"Aluna com foco em hipertrofia, boa evolução nos últimos meses\",\n  active: true\n}];\n\n// Lista fictícia de todos os alunos\nconst allStudents = [{\n  id: 1,\n  name: \"João Silva\"\n}, {\n  id: 2,\n  name: \"Maria Oliveira\"\n}, {\n  id: 3,\n  name: \"Carlos Santos\"\n}, {\n  id: 4,\n  name: \"Ana Paula Souza\"\n}, {\n  id: 5,\n  name: \"Roberto Mendes\"\n}];\nfunction StudentWorkoutList() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [studentWorkouts, setStudentWorkouts] = useState(initialStudentWorkouts);\n  const [filteredWorkouts, setFilteredWorkouts] = useState(initialStudentWorkouts);\n  const [searchText, setSearchText] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentStudentWorkout, setCurrentStudentWorkout] = useState(null);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedStudentId, setSelectedStudentId] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newHistoryEntry, setNewHistoryEntry] = useState(\"\");\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\"\n  });\n\n  // Aplicar filtros quando mudar texto de pesquisa\n  useEffect(() => {\n    applyFilters();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, activeFilter]);\n\n  // Abrir snackbar\n  const handleSnackbar = (message, severity = \"success\") => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  // Fechar snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n\n  // Aplicar filtros\n  const applyFilters = () => {\n    let result = [...studentWorkouts];\n\n    // Filtrar por texto\n    if (searchText) {\n      const searchLower = searchText.toLowerCase();\n      result = result.filter(workout => workout.studentName.toLowerCase().includes(searchLower) || workout.workoutName.toLowerCase().includes(searchLower));\n    }\n\n    // Filtrar por status\n    if (activeFilter !== \"all\") {\n      const isActive = activeFilter === \"active\";\n      result = result.filter(workout => workout.active === isActive);\n    }\n    setFilteredWorkouts(result);\n  };\n\n  // Abrir diálogo para adicionar novo treino de aluno\n  const handleAddStudentWorkout = () => {\n    setCurrentStudentWorkout(null);\n    setSelectedStudentId(\"\");\n    setObservations(\"\");\n    setExercises([]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(false);\n    setOpenDialog(true);\n  };\n\n  // Abrir diálogo para editar treino de aluno\n  const handleEditStudentWorkout = workout => {\n    setCurrentStudentWorkout(workout);\n    setSelectedStudentId(workout.studentId.toString());\n    setObservations(workout.observations || \"\");\n    setExercises([...workout.exercises]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(true);\n    setOpenDialog(true);\n  };\n\n  // Alternar visualização do histórico\n  const toggleHistory = workout => {\n    setCurrentStudentWorkout(workout);\n    setShowHistory(true);\n    setOpenDialog(true);\n  };\n\n  // Mudar aba no diálogo\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  // Adicionar entrada ao histórico\n  const handleAddHistoryEntry = () => {\n    if (!newHistoryEntry.trim()) return;\n    const updatedHistory = [...((currentStudentWorkout === null || currentStudentWorkout === void 0 ? void 0 : currentStudentWorkout.history) || []), {\n      date: dayjs().format(\"YYYY-MM-DD\"),\n      action: \"updated\",\n      description: newHistoryEntry\n    }];\n    setCurrentStudentWorkout({\n      ...currentStudentWorkout,\n      history: updatedHistory\n    });\n    setNewHistoryEntry(\"\");\n  };\n\n  // Salvar treino de aluno\n  const handleSaveStudentWorkout = () => {\n    // Validação\n    if (!selectedStudentId || exercises.length === 0) {\n      handleSnackbar(t(\"workouts.invalidWorkout\"), \"error\");\n      return;\n    }\n    const student = allStudents.find(s => s.id.toString() === selectedStudentId);\n    if (!student) {\n      handleSnackbar(t(\"workouts.studentNotFound\"), \"error\");\n      return;\n    }\n    const today = dayjs().format(\"YYYY-MM-DD\");\n    if (isEditing) {\n      // Atualizar treino existente\n      const updatedWorkouts = studentWorkouts.map(workout => {\n        if (workout.id === currentStudentWorkout.id) {\n          // Adicionar entrada de histórico apenas se houver alterações\n          let updatedHistory = [...workout.history];\n\n          // Verificar se houve alterações no treino\n          if (JSON.stringify(workout.exercises) !== JSON.stringify(exercises) || workout.observations !== observations) {\n            updatedHistory = [...updatedHistory, {\n              date: today,\n              action: \"updated\",\n              description: t(\"workouts.workoutUpdated\")\n            }];\n          }\n          return {\n            ...workout,\n            studentId: parseInt(selectedStudentId),\n            studentName: student.name,\n            exercises: exercises,\n            observations: observations,\n            history: updatedHistory,\n            lastUpdated: today\n          };\n        }\n        return workout;\n      });\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutUpdated\"));\n    } else {\n      // Novo treino de aluno\n      const newWorkout = {\n        id: Date.now(),\n        studentId: parseInt(selectedStudentId),\n        studentName: student.name,\n        workoutName: t(\"workouts.customWorkout\"),\n        exercises: exercises,\n        observations: observations,\n        history: [{\n          date: today,\n          action: \"created\",\n          description: t(\"workouts.workoutCreated\")\n        }],\n        lastUpdated: today,\n        active: true\n      };\n      const updatedWorkouts = [...studentWorkouts, newWorkout];\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutAdded\"));\n    }\n    setOpenDialog(false);\n  };\n\n  // Aplicar template a um aluno\n  const handleApplyTemplate = template => {\n    if (!selectedStudentId) {\n      handleSnackbar(t(\"workouts.selectStudent\"), \"warning\");\n      return;\n    }\n    setExercises([...template.exercises]);\n    handleSnackbar(t(\"workouts.templateApplied\"));\n  };\n\n  // Alternar status do treino (ativo/inativo)\n  const toggleWorkoutStatus = workoutId => {\n    const updatedWorkouts = studentWorkouts.map(workout => {\n      if (workout.id === workoutId) {\n        const newStatus = !workout.active;\n\n        // Adicionar entrada no histórico sobre a mudança de status\n        const updatedHistory = [...workout.history, {\n          date: dayjs().format(\"YYYY-MM-DD\"),\n          action: newStatus ? \"activated\" : \"deactivated\",\n          description: newStatus ? t(\"workouts.workoutActivated\") : t(\"workouts.workoutDeactivated\")\n        }];\n        return {\n          ...workout,\n          active: newStatus,\n          history: updatedHistory,\n          lastUpdated: dayjs().format(\"YYYY-MM-DD\")\n        };\n      }\n      return workout;\n    });\n    setStudentWorkouts(updatedWorkouts);\n    setFilteredWorkouts(updatedWorkouts);\n    handleSnackbar(t(\"workouts.statusUpdated\"));\n  };\n\n  // Fechar diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setShowHistory(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: t(\"workouts.title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: t(\"workouts.search\"),\n            variant: \"outlined\",\n            value: searchText,\n            onChange: e => setSearchText(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"status-filter-label\",\n              children: t(\"workouts.filterStatus\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"status-filter-label\",\n              value: activeFilter,\n              label: t(\"workouts.filterStatus\"),\n              onChange: e => setActiveFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: t(\"workouts.allStatuses\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"active\",\n                children: t(\"workouts.statusActive\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"inactive\",\n                children: t(\"workouts.statusInactive\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(FitnessCenterIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 22\n        }, this),\n        onClick: handleAddStudentWorkout,\n        children: t(\"workouts.addWorkout\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredWorkouts.map(workout => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 3,\n          sx: {\n            borderLeft: 6,\n            borderColor: workout.active ? \"success.main\" : \"error.main\",\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: \"primary.main\",\n                    mr: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: workout.studentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: workout.active ? t(\"workouts.statusActive\") : t(\"workouts.statusInactive\"),\n                color: workout.active ? \"success\" : \"error\",\n                onClick: () => toggleWorkoutStatus(workout.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: workout.workoutName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: [t(\"workouts.lastUpdated\"), \":\", \" \", dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2\n              },\n              children: workout.observations || t(\"workouts.noObservations\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 49\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [t(\"workouts.exercises\"), \" (\", workout.exercises.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  dense: true,\n                  children: workout.exercises.map(exercise => /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: exercise.name,\n                      secondary: `${exercise.sets}x${exercise.reps} - ${exercise.weight}kg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 27\n                    }, this)\n                  }, exercise.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 32\n                }, this),\n                onClick: () => toggleHistory(workout),\n                sx: {\n                  mr: 1\n                },\n                children: t(\"workouts.history\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 32\n                }, this),\n                onClick: () => handleEditStudentWorkout(workout),\n                children: t(\"workouts.edit\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)\n      }, workout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      fullWidth: true,\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: showHistory ? `${t(\"workouts.historyFor\")} ${currentStudentWorkout === null || currentStudentWorkout === void 0 ? void 0 : currentStudentWorkout.studentName}` : isEditing ? t(\"workouts.editWorkout\") : t(\"workouts.addWorkout\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: showHistory ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: t(\"workouts.workoutHistory\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: currentStudentWorkout === null || currentStudentWorkout === void 0 ? void 0 : currentStudentWorkout.history.slice().reverse().map((entry, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: /*#__PURE__*/_jsxDEV(HistoryIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${dayjs(entry.date).format(\"DD/MM/YYYY\")} - ${t(`workouts.action${entry.action.charAt(0).toUpperCase() + entry.action.slice(1)}`)}`,\n                  secondary: entry.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                variant: \"inset\",\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            value: selectedTabIndex,\n            onChange: handleTabChange,\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: t(\"workouts.details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: t(\"workouts.exercises\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: t(\"workouts.templates\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              mb: 2\n            },\n            children: [selectedTabIndex === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"student-select-label\",\n                    children: t(\"workouts.selectStudent\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"student-select-label\",\n                    value: selectedStudentId,\n                    label: t(\"workouts.selectStudent\"),\n                    onChange: e => setSelectedStudentId(e.target.value),\n                    disabled: isEditing,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"\",\n                      children: t(\"workouts.selectStudentPlaceholder\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 641,\n                      columnNumber: 27\n                    }, this), allStudents.map(student => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: student.id.toString(),\n                      children: student.name\n                    }, student.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: t(\"workouts.observations\"),\n                  value: observations,\n                  onChange: e => setObservations(e.target.value),\n                  multiline: true,\n                  rows: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 21\n              }, this), isEditing && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: t(\"workouts.addHistoryEntry\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: t(\"workouts.historyDescription\"),\n                    value: newHistoryEntry,\n                    onChange: e => setNewHistoryEntry(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleAddHistoryEntry,\n                    disabled: !newHistoryEntry.trim(),\n                    sx: {\n                      ml: 1\n                    },\n                    children: t(\"buttons.add\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 19\n            }, this), selectedTabIndex === 1 && /*#__PURE__*/_jsxDEV(ExerciseTable, {\n              exercises: exercises,\n              setExercises: setExercises\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 19\n            }, this), selectedTabIndex === 2 && /*#__PURE__*/_jsxDEV(WorkoutTemplates, {\n              onSelectTemplate: handleApplyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: t(\"buttons.close\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this), !showHistory && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveStudentWorkout,\n          color: \"primary\",\n          variant: \"contained\",\n          disabled: !selectedStudentId || exercises.length === 0,\n          children: t(\"buttons.save\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 4000,\n      onClose: handleCloseSnackbar,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snackbar.severity,\n        sx: {\n          width: \"100%\"\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentWorkoutList, \"61IDHAi8TycC0iGuKR/xTyF5Hq8=\", false, function () {\n  return [useTranslation];\n});\n_c = StudentWorkoutList;\nexport default StudentWorkoutList;\nvar _c;\n$RefreshReg$(_c, \"StudentWorkoutList\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","Grid","Card","CardContent","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Chip","Divider","Avatar","List","ListItem","ListItemText","ListItemAvatar","InputAdornment","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","Tabs","Tab","Snackbar","Alert","Search","SearchIcon","ExpandMore","ExpandMoreIcon","FitnessCenter","FitnessCenterIcon","Person","PersonIcon","Edit","EditIcon","History","HistoryIcon","useTranslation","ExerciseTable","WorkoutTemplates","dayjs","jsxDEV","_jsxDEV","initialStudentWorkouts","id","studentId","studentName","workoutName","exercises","name","sets","weight","reps","notes","muscleGroup","history","date","action","description","lastUpdated","observations","active","allStudents","StudentWorkoutList","_s","t","studentWorkouts","setStudentWorkouts","filteredWorkouts","setFilteredWorkouts","searchText","setSearchText","openDialog","setOpenDialog","currentStudentWorkout","setCurrentStudentWorkout","selectedTabIndex","setSelectedTabIndex","showHistory","setShowHistory","selectedStudentId","setSelectedStudentId","setObservations","setExercises","isEditing","setIsEditing","newHistoryEntry","setNewHistoryEntry","activeFilter","setActiveFilter","snackbar","setSnackbar","open","message","severity","applyFilters","handleSnackbar","handleCloseSnackbar","result","searchLower","toLowerCase","filter","workout","includes","isActive","handleAddStudentWorkout","handleEditStudentWorkout","toString","toggleHistory","handleTabChange","event","newValue","handleAddHistoryEntry","trim","updatedHistory","format","handleSaveStudentWorkout","length","student","find","s","today","updatedWorkouts","map","JSON","stringify","parseInt","newWorkout","Date","now","handleApplyTemplate","template","toggleWorkoutStatus","workoutId","newStatus","handleCloseDialog","sx","flexGrow","p","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","mb","container","spacing","alignItems","item","xs","md","fullWidth","label","value","onChange","e","target","InputProps","startAdornment","position","labelId","display","justifyContent","color","startIcon","onClick","borderLeft","borderColor","bgcolor","mr","expandIcon","dense","exercise","primary","secondary","mt","onClose","maxWidth","dividers","slice","reverse","entry","index","Fragment","charAt","toUpperCase","disabled","multiline","rows","ml","onSelectTemplate","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/home/gberny/Documents/Berny/Projetos/v0-sysgym/src/components/StudentWorkoutList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Chip,\n  Divider,\n  Avatar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Tabs,\n  Tab,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport {\n  Search as SearchIcon,\n  ExpandMore as ExpandMoreIcon,\n  FitnessCenter as FitnessCenterIcon,\n  Person as PersonIcon,\n  Edit as EditIcon,\n  History as HistoryIcon,\n} from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport ExerciseTable from \"./ExerciseTable\";\nimport WorkoutTemplates from \"./WorkoutTemplates\";\nimport dayjs from \"dayjs\";\n\n// Dados fictícios de alunos com treinos\nconst initialStudentWorkouts = [\n  {\n    id: 1,\n    studentId: 1,\n    studentName: \"João Silva\",\n    workoutName: \"Treino Inicial - Adaptação\",\n    exercises: [\n      {\n        id: \"sw1e1\",\n        name: \"Supino Reto\",\n        sets: \"3\",\n        weight: \"15\",\n        reps: \"12\",\n        notes: \"Movimento controlado\",\n        muscleGroup: \"chest\",\n      },\n      {\n        id: \"sw1e2\",\n        name: \"Leg Press\",\n        sets: \"3\",\n        weight: \"60\",\n        reps: \"15\",\n        notes: \"Posição neutra\",\n        muscleGroup: \"legs\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-05-10\",\n        action: \"created\",\n        description: \"Treino inicial criado\",\n      },\n      {\n        date: \"2023-06-05\",\n        action: \"updated\",\n        description: \"Aumentado peso no Leg Press de 50 para 60kg\",\n      },\n    ],\n    lastUpdated: \"2023-06-05\",\n    observations: \"Aluno iniciante com bom progresso\",\n    active: true,\n  },\n  {\n    id: 2,\n    studentId: 2,\n    studentName: \"Maria Oliveira\",\n    workoutName: \"Hipertrofia - Intermediário\",\n    exercises: [\n      {\n        id: \"sw2e1\",\n        name: \"Agachamento\",\n        sets: \"4\",\n        weight: \"65\",\n        reps: \"10\",\n        notes: \"Profundidade completa\",\n        muscleGroup: \"legs\",\n      },\n      {\n        id: \"sw2e2\",\n        name: \"Supino Inclinado\",\n        sets: \"4\",\n        weight: \"45\",\n        reps: \"8\",\n        notes: \"Foco na contração\",\n        muscleGroup: \"chest\",\n      },\n    ],\n    history: [\n      {\n        date: \"2023-04-15\",\n        action: \"created\",\n        description: \"Treino customizado criado\",\n      },\n      {\n        date: \"2023-05-20\",\n        action: \"updated\",\n        description: \"Ajustada série no Supino Inclinado\",\n      },\n    ],\n    lastUpdated: \"2023-05-20\",\n    observations:\n      \"Aluna com foco em hipertrofia, boa evolução nos últimos meses\",\n    active: true,\n  },\n];\n\n// Lista fictícia de todos os alunos\nconst allStudents = [\n  { id: 1, name: \"João Silva\" },\n  { id: 2, name: \"Maria Oliveira\" },\n  { id: 3, name: \"Carlos Santos\" },\n  { id: 4, name: \"Ana Paula Souza\" },\n  { id: 5, name: \"Roberto Mendes\" },\n];\n\nfunction StudentWorkoutList() {\n  const { t } = useTranslation();\n  const [studentWorkouts, setStudentWorkouts] = useState(\n    initialStudentWorkouts\n  );\n  const [filteredWorkouts, setFilteredWorkouts] = useState(\n    initialStudentWorkouts\n  );\n  const [searchText, setSearchText] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentStudentWorkout, setCurrentStudentWorkout] = useState(null);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [showHistory, setShowHistory] = useState(false);\n  const [selectedStudentId, setSelectedStudentId] = useState(\"\");\n  const [observations, setObservations] = useState(\"\");\n  const [exercises, setExercises] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newHistoryEntry, setNewHistoryEntry] = useState(\"\");\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  // Aplicar filtros quando mudar texto de pesquisa\n  useEffect(() => {\n    applyFilters();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, activeFilter]);\n\n  // Abrir snackbar\n  const handleSnackbar = (message, severity = \"success\") => {\n    setSnackbar({\n      open: true,\n      message,\n      severity,\n    });\n  };\n\n  // Fechar snackbar\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false,\n    });\n  };\n\n  // Aplicar filtros\n  const applyFilters = () => {\n    let result = [...studentWorkouts];\n\n    // Filtrar por texto\n    if (searchText) {\n      const searchLower = searchText.toLowerCase();\n      result = result.filter(\n        (workout) =>\n          workout.studentName.toLowerCase().includes(searchLower) ||\n          workout.workoutName.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Filtrar por status\n    if (activeFilter !== \"all\") {\n      const isActive = activeFilter === \"active\";\n      result = result.filter((workout) => workout.active === isActive);\n    }\n\n    setFilteredWorkouts(result);\n  };\n\n  // Abrir diálogo para adicionar novo treino de aluno\n  const handleAddStudentWorkout = () => {\n    setCurrentStudentWorkout(null);\n    setSelectedStudentId(\"\");\n    setObservations(\"\");\n    setExercises([]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(false);\n    setOpenDialog(true);\n  };\n\n  // Abrir diálogo para editar treino de aluno\n  const handleEditStudentWorkout = (workout) => {\n    setCurrentStudentWorkout(workout);\n    setSelectedStudentId(workout.studentId.toString());\n    setObservations(workout.observations || \"\");\n    setExercises([...workout.exercises]);\n    setNewHistoryEntry(\"\");\n    setSelectedTabIndex(0);\n    setShowHistory(false);\n    setIsEditing(true);\n    setOpenDialog(true);\n  };\n\n  // Alternar visualização do histórico\n  const toggleHistory = (workout) => {\n    setCurrentStudentWorkout(workout);\n    setShowHistory(true);\n    setOpenDialog(true);\n  };\n\n  // Mudar aba no diálogo\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  // Adicionar entrada ao histórico\n  const handleAddHistoryEntry = () => {\n    if (!newHistoryEntry.trim()) return;\n\n    const updatedHistory = [\n      ...(currentStudentWorkout?.history || []),\n      {\n        date: dayjs().format(\"YYYY-MM-DD\"),\n        action: \"updated\",\n        description: newHistoryEntry,\n      },\n    ];\n\n    setCurrentStudentWorkout({\n      ...currentStudentWorkout,\n      history: updatedHistory,\n    });\n\n    setNewHistoryEntry(\"\");\n  };\n\n  // Salvar treino de aluno\n  const handleSaveStudentWorkout = () => {\n    // Validação\n    if (!selectedStudentId || exercises.length === 0) {\n      handleSnackbar(t(\"workouts.invalidWorkout\"), \"error\");\n      return;\n    }\n\n    const student = allStudents.find(\n      (s) => s.id.toString() === selectedStudentId\n    );\n\n    if (!student) {\n      handleSnackbar(t(\"workouts.studentNotFound\"), \"error\");\n      return;\n    }\n\n    const today = dayjs().format(\"YYYY-MM-DD\");\n\n    if (isEditing) {\n      // Atualizar treino existente\n      const updatedWorkouts = studentWorkouts.map((workout) => {\n        if (workout.id === currentStudentWorkout.id) {\n          // Adicionar entrada de histórico apenas se houver alterações\n          let updatedHistory = [...workout.history];\n\n          // Verificar se houve alterações no treino\n          if (\n            JSON.stringify(workout.exercises) !== JSON.stringify(exercises) ||\n            workout.observations !== observations\n          ) {\n            updatedHistory = [\n              ...updatedHistory,\n              {\n                date: today,\n                action: \"updated\",\n                description: t(\"workouts.workoutUpdated\"),\n              },\n            ];\n          }\n\n          return {\n            ...workout,\n            studentId: parseInt(selectedStudentId),\n            studentName: student.name,\n            exercises: exercises,\n            observations: observations,\n            history: updatedHistory,\n            lastUpdated: today,\n          };\n        }\n        return workout;\n      });\n\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutUpdated\"));\n    } else {\n      // Novo treino de aluno\n      const newWorkout = {\n        id: Date.now(),\n        studentId: parseInt(selectedStudentId),\n        studentName: student.name,\n        workoutName: t(\"workouts.customWorkout\"),\n        exercises: exercises,\n        observations: observations,\n        history: [\n          {\n            date: today,\n            action: \"created\",\n            description: t(\"workouts.workoutCreated\"),\n          },\n        ],\n        lastUpdated: today,\n        active: true,\n      };\n\n      const updatedWorkouts = [...studentWorkouts, newWorkout];\n      setStudentWorkouts(updatedWorkouts);\n      setFilteredWorkouts(updatedWorkouts);\n      handleSnackbar(t(\"workouts.workoutAdded\"));\n    }\n\n    setOpenDialog(false);\n  };\n\n  // Aplicar template a um aluno\n  const handleApplyTemplate = (template) => {\n    if (!selectedStudentId) {\n      handleSnackbar(t(\"workouts.selectStudent\"), \"warning\");\n      return;\n    }\n\n    setExercises([...template.exercises]);\n    handleSnackbar(t(\"workouts.templateApplied\"));\n  };\n\n  // Alternar status do treino (ativo/inativo)\n  const toggleWorkoutStatus = (workoutId) => {\n    const updatedWorkouts = studentWorkouts.map((workout) => {\n      if (workout.id === workoutId) {\n        const newStatus = !workout.active;\n\n        // Adicionar entrada no histórico sobre a mudança de status\n        const updatedHistory = [\n          ...workout.history,\n          {\n            date: dayjs().format(\"YYYY-MM-DD\"),\n            action: newStatus ? \"activated\" : \"deactivated\",\n            description: newStatus\n              ? t(\"workouts.workoutActivated\")\n              : t(\"workouts.workoutDeactivated\"),\n          },\n        ];\n\n        return {\n          ...workout,\n          active: newStatus,\n          history: updatedHistory,\n          lastUpdated: dayjs().format(\"YYYY-MM-DD\"),\n        };\n      }\n      return workout;\n    });\n\n    setStudentWorkouts(updatedWorkouts);\n    setFilteredWorkouts(updatedWorkouts);\n    handleSnackbar(t(\"workouts.statusUpdated\"));\n  };\n\n  // Fechar diálogo\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setShowHistory(false);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        {t(\"workouts.title\")}\n      </Typography>\n\n      {/* Filtros de pesquisa */}\n      <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} md={8}>\n            <TextField\n              fullWidth\n              label={t(\"workouts.search\")}\n              variant=\"outlined\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <FormControl fullWidth>\n              <InputLabel id=\"status-filter-label\">\n                {t(\"workouts.filterStatus\")}\n              </InputLabel>\n              <Select\n                labelId=\"status-filter-label\"\n                value={activeFilter}\n                label={t(\"workouts.filterStatus\")}\n                onChange={(e) => setActiveFilter(e.target.value)}\n              >\n                <MenuItem value=\"all\">{t(\"workouts.allStatuses\")}</MenuItem>\n                <MenuItem value=\"active\">{t(\"workouts.statusActive\")}</MenuItem>\n                <MenuItem value=\"inactive\">\n                  {t(\"workouts.statusInactive\")}\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Botão para adicionar novo treino */}\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mb: 2 }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<FitnessCenterIcon />}\n          onClick={handleAddStudentWorkout}\n        >\n          {t(\"workouts.addWorkout\")}\n        </Button>\n      </Box>\n\n      {/* Lista de treinos dos alunos */}\n      <Grid container spacing={3}>\n        {filteredWorkouts.map((workout) => (\n          <Grid item xs={12} md={6} key={workout.id}>\n            <Card\n              elevation={3}\n              sx={{\n                borderLeft: 6,\n                borderColor: workout.active ? \"success.main\" : \"error.main\",\n                mb: 2,\n              }}\n            >\n              <CardContent>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    mb: 1,\n                  }}\n                >\n                  <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <Avatar sx={{ bgcolor: \"primary.main\", mr: 2 }}>\n                      <PersonIcon />\n                    </Avatar>\n                    <Typography variant=\"h6\">{workout.studentName}</Typography>\n                  </Box>\n                  <Chip\n                    label={\n                      workout.active\n                        ? t(\"workouts.statusActive\")\n                        : t(\"workouts.statusInactive\")\n                    }\n                    color={workout.active ? \"success\" : \"error\"}\n                    onClick={() => toggleWorkoutStatus(workout.id)}\n                  />\n                </Box>\n\n                <Typography variant=\"subtitle1\" color=\"primary\" gutterBottom>\n                  {workout.workoutName}\n                </Typography>\n\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  {t(\"workouts.lastUpdated\")}:{\" \"}\n                  {dayjs(workout.lastUpdated).format(\"DD/MM/YYYY\")}\n                </Typography>\n\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  {workout.observations || t(\"workouts.noObservations\")}\n                </Typography>\n\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>\n                      {t(\"workouts.exercises\")} ({workout.exercises.length})\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <List dense>\n                      {workout.exercises.map((exercise) => (\n                        <ListItem key={exercise.id}>\n                          <ListItemText\n                            primary={exercise.name}\n                            secondary={`${exercise.sets}x${exercise.reps} - ${exercise.weight}kg`}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </AccordionDetails>\n                </Accordion>\n\n                <Box\n                  sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 2 }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<HistoryIcon />}\n                    onClick={() => toggleHistory(workout)}\n                    sx={{ mr: 1 }}\n                  >\n                    {t(\"workouts.history\")}\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<EditIcon />}\n                    onClick={() => handleEditStudentWorkout(workout)}\n                  >\n                    {t(\"workouts.edit\")}\n                  </Button>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Modal para adicionar/editar treino */}\n      <Dialog\n        open={openDialog}\n        onClose={handleCloseDialog}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogTitle>\n          {showHistory\n            ? `${t(\"workouts.historyFor\")} ${\n                currentStudentWorkout?.studentName\n              }`\n            : isEditing\n            ? t(\"workouts.editWorkout\")\n            : t(\"workouts.addWorkout\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          {showHistory ? (\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                {t(\"workouts.workoutHistory\")}\n              </Typography>\n              <List>\n                {currentStudentWorkout?.history\n                  .slice()\n                  .reverse()\n                  .map((entry, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem alignItems=\"flex-start\">\n                        <ListItemAvatar>\n                          <Avatar>\n                            <HistoryIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={`${dayjs(entry.date).format(\n                            \"DD/MM/YYYY\"\n                          )} - ${t(\n                            `workouts.action${\n                              entry.action.charAt(0).toUpperCase() +\n                              entry.action.slice(1)\n                            }`\n                          )}`}\n                          secondary={entry.description}\n                        />\n                      </ListItem>\n                      <Divider variant=\"inset\" component=\"li\" />\n                    </React.Fragment>\n                  ))}\n              </List>\n            </Box>\n          ) : (\n            <Box>\n              <Tabs value={selectedTabIndex} onChange={handleTabChange}>\n                <Tab label={t(\"workouts.details\")} />\n                <Tab label={t(\"workouts.exercises\")} />\n                <Tab label={t(\"workouts.templates\")} />\n              </Tabs>\n\n              <Box sx={{ mt: 2, mb: 2 }}>\n                {selectedTabIndex === 0 && (\n                  <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                      <FormControl fullWidth>\n                        <InputLabel id=\"student-select-label\">\n                          {t(\"workouts.selectStudent\")}\n                        </InputLabel>\n                        <Select\n                          labelId=\"student-select-label\"\n                          value={selectedStudentId}\n                          label={t(\"workouts.selectStudent\")}\n                          onChange={(e) => setSelectedStudentId(e.target.value)}\n                          disabled={isEditing}\n                        >\n                          <MenuItem value=\"\">\n                            {t(\"workouts.selectStudentPlaceholder\")}\n                          </MenuItem>\n                          {allStudents.map((student) => (\n                            <MenuItem\n                              key={student.id}\n                              value={student.id.toString()}\n                            >\n                              {student.name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        label={t(\"workouts.observations\")}\n                        value={observations}\n                        onChange={(e) => setObservations(e.target.value)}\n                        multiline\n                        rows={3}\n                      />\n                    </Grid>\n\n                    {isEditing && (\n                      <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\" gutterBottom>\n                          {t(\"workouts.addHistoryEntry\")}\n                        </Typography>\n                        <Box sx={{ display: \"flex\" }}>\n                          <TextField\n                            fullWidth\n                            label={t(\"workouts.historyDescription\")}\n                            value={newHistoryEntry}\n                            onChange={(e) => setNewHistoryEntry(e.target.value)}\n                          />\n                          <Button\n                            variant=\"contained\"\n                            onClick={handleAddHistoryEntry}\n                            disabled={!newHistoryEntry.trim()}\n                            sx={{ ml: 1 }}\n                          >\n                            {t(\"buttons.add\")}\n                          </Button>\n                        </Box>\n                      </Grid>\n                    )}\n                  </Grid>\n                )}\n\n                {selectedTabIndex === 1 && (\n                  <ExerciseTable\n                    exercises={exercises}\n                    setExercises={setExercises}\n                  />\n                )}\n\n                {selectedTabIndex === 2 && (\n                  <WorkoutTemplates onSelectTemplate={handleApplyTemplate} />\n                )}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>{t(\"buttons.close\")}</Button>\n          {!showHistory && (\n            <Button\n              onClick={handleSaveStudentWorkout}\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={!selectedStudentId || exercises.length === 0}\n            >\n              {t(\"buttons.save\")}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n\n      {/* Snackbar para mensagens */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <Alert\n          onClose={handleCloseSnackbar}\n          severity={snackbar.severity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n}\n\nexport default StudentWorkoutList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}